program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "4.28.3"}, {"coremlc-version", "1429.0.0"}, {"coremltools-component-torch", "1.13.0"}, {"coremltools-version", "6.1"}})]
{
    func main<ios16>(tensor<fp16, [2, 768, 1, 77]> encoder_hidden_states, tensor<fp16, [2, 4, 64, 64]> sample, tensor<fp16, [2]> timestep) {
            tensor<int32, []> var_25 = const()[name = tensor<string, []>("op_25"), val = tensor<int32, []>(-1)];
            tensor<int32, [1]> var_42_axes_0 = const()[name = tensor<string, []>("op_42_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1]> var_42_cast = expand_dims(axes = var_42_axes_0, x = timestep);
            tensor<fp16, [1, 160]> var_44_to_fp16 = const()[name = tensor<string, []>("op_44_to_fp16"), val = tensor<fp16, [1, 160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [2, 160]> emb_3_cast = mul(x = var_42_cast, y = var_44_to_fp16);
            tensor<fp16, [2, 160]> var_49_cast = sin(x = emb_3_cast);
            tensor<fp16, [2, 160]> var_50_cast = cos(x = emb_3_cast);
            tensor<bool, []> emb_interleave_0 = const()[name = tensor<string, []>("emb_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320]> emb_cast = concat(axis = var_25, interleave = emb_interleave_0, values = (var_49_cast, var_50_cast));
            tensor<int32, [2]> var_54_begin_0 = const()[name = tensor<string, []>("op_54_begin_0"), val = tensor<int32, [2]>([0, 160])];
            tensor<int32, [2]> var_54_end_0 = const()[name = tensor<string, []>("op_54_end_0"), val = tensor<int32, [2]>([2, 320])];
            tensor<bool, [2]> var_54_end_mask_0 = const()[name = tensor<string, []>("op_54_end_mask_0"), val = tensor<bool, [2]>([true, true])];
            tensor<fp16, [2, 160]> var_54_cast = slice_by_index(begin = var_54_begin_0, end = var_54_end_0, end_mask = var_54_end_mask_0, x = emb_cast);
            tensor<int32, [2]> var_56_begin_0 = const()[name = tensor<string, []>("op_56_begin_0"), val = tensor<int32, [2]>([0, 0])];
            tensor<int32, [2]> var_56_end_0 = const()[name = tensor<string, []>("op_56_end_0"), val = tensor<int32, [2]>([2, 160])];
            tensor<bool, [2]> var_56_end_mask_0 = const()[name = tensor<string, []>("op_56_end_mask_0"), val = tensor<bool, [2]>([true, false])];
            tensor<fp16, [2, 160]> var_56_cast = slice_by_index(begin = var_56_begin_0, end = var_56_end_0, end_mask = var_56_end_mask_0, x = emb_cast);
            tensor<bool, []> sample_interleave_0 = const()[name = tensor<string, []>("sample_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320]> sample_cast = concat(axis = var_25, interleave = sample_interleave_0, values = (var_54_cast, var_56_cast));
            tensor<int32, []> var_59 = const()[name = tensor<string, []>("op_59"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> var_66_axes_0 = const()[name = tensor<string, []>("op_66_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [2, 320, 1]> var_66_cast = expand_dims(axes = var_66_axes_0, x = sample_cast);
            tensor<int32, [1]> input_1_axes_0 = const()[name = tensor<string, []>("input_1_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [2, 320, 1, 1]> input_1_cast = expand_dims(axes = input_1_axes_0, x = var_66_cast);
            tensor<int32, [2]> var_70 = const()[name = tensor<string, []>("op_70"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_72 = const()[name = tensor<string, []>("op_72"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_3_pad_type_0 = const()[name = tensor<string, []>("input_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_3_pad_0 = const()[name = tensor<string, []>("input_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 320, 1, 1]> time_embedding_linear_1_weight_to_fp16 = const()[name = tensor<string, []>("time_embedding_linear_1_weight_to_fp16"), val = tensor<fp16, [1280, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(448)))];
            tensor<fp16, [1280]> time_embedding_linear_1_bias_to_fp16 = const()[name = tensor<string, []>("time_embedding_linear_1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(819712)))];
            tensor<fp16, [2, 1280, 1, 1]> input_3_cast = conv(bias = time_embedding_linear_1_bias_to_fp16, dilations = var_72, groups = var_59, pad = input_3_pad_0, pad_type = input_3_pad_type_0, strides = var_70, weight = time_embedding_linear_1_weight_to_fp16, x = input_1_cast);
            tensor<fp16, [2, 1280, 1, 1]> input_5_cast = silu(x = input_3_cast);
            tensor<int32, [2]> var_78 = const()[name = tensor<string, []>("op_78"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_80 = const()[name = tensor<string, []>("op_80"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_13_pad_type_0 = const()[name = tensor<string, []>("input_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_13_pad_0 = const()[name = tensor<string, []>("input_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> time_embedding_linear_2_weight_to_fp16 = const()[name = tensor<string, []>("time_embedding_linear_2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(822336)))];
            tensor<fp16, [1280]> time_embedding_linear_2_bias_to_fp16 = const()[name = tensor<string, []>("time_embedding_linear_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4099200)))];
            tensor<fp16, [2, 1280, 1, 1]> input_13_cast = conv(bias = time_embedding_linear_2_bias_to_fp16, dilations = var_80, groups = var_59, pad = input_13_pad_0, pad_type = input_13_pad_type_0, strides = var_78, weight = time_embedding_linear_2_weight_to_fp16, x = input_5_cast);
            tensor<int32, []> var_86 = const()[name = tensor<string, []>("op_86"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_89 = const()[name = tensor<string, []>("op_89"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_91 = const()[name = tensor<string, []>("op_91"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_7_pad_type_0 = const()[name = tensor<string, []>("input_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_7_pad_0 = const()[name = tensor<string, []>("input_7_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 4, 3, 3]> conv_in_weight_to_fp16 = const()[name = tensor<string, []>("conv_in_weight_to_fp16"), val = tensor<fp16, [320, 4, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4101824)))];
            tensor<fp16, [320]> conv_in_bias_to_fp16 = const()[name = tensor<string, []>("conv_in_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4124928)))];
            tensor<fp16, [2, 320, 64, 64]> input_7_cast = conv(bias = conv_in_bias_to_fp16, dilations = var_91, groups = var_86, pad = input_7_pad_0, pad_type = input_7_pad_type_0, strides = var_89, weight = conv_in_weight_to_fp16, x = sample);
            tensor<bool, []> var_110 = const()[name = tensor<string, []>("op_110"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_115 = const()[name = tensor<string, []>("op_115"), val = tensor<int32, []>(1)];
            tensor<int32, [5]> reshape_0_shape_0 = const()[name = tensor<string, []>("reshape_0_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_0_cast = reshape(shape = reshape_0_shape_0, x = input_7_cast);
            tensor<int32, [3]> reduce_mean_0_axes_0 = const()[name = tensor<string, []>("reduce_mean_0_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_0_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_0_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_0_cast = reduce_mean(axes = reduce_mean_0_axes_0, keep_dims = reduce_mean_0_keep_dims_0, x = reshape_0_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_0_cast = sub(x = reshape_0_cast, y = reduce_mean_0_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_0_cast = square(x = sub_0_cast);
            tensor<int32, [3]> reduce_mean_2_axes_0 = const()[name = tensor<string, []>("reduce_mean_2_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_2_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_2_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_2_cast = reduce_mean(axes = reduce_mean_2_axes_0, keep_dims = reduce_mean_2_keep_dims_0, x = square_0_cast);
            tensor<fp16, []> add_0_y_0_to_fp16 = const()[name = tensor<string, []>("add_0_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_0_cast = add(x = reduce_mean_2_cast, y = add_0_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_0_cast = sqrt(x = add_0_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_0_cast = real_div(x = sub_0_cast, y = sqrt_0_cast);
            tensor<int32, [4]> reshape_1_shape_0 = const()[name = tensor<string, []>("reshape_1_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_1_cast = reshape(shape = reshape_1_shape_0, x = real_div_0_cast);
            tensor<fp16, [320]> add_1_mean_0_to_fp16 = const()[name = tensor<string, []>("add_1_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4125632)))];
            tensor<fp16, [320]> add_1_variance_0_to_fp16 = const()[name = tensor<string, []>("add_1_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4126336)))];
            tensor<fp16, [320]> add_1_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_1_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4127040)))];
            tensor<fp16, [320]> add_1_beta_0_to_fp16 = const()[name = tensor<string, []>("add_1_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4127744)))];
            tensor<fp16, []> add_1_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_1_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_1_cast = batch_norm(beta = add_1_beta_0_to_fp16, epsilon = add_1_epsilon_0_to_fp16, gamma = add_1_gamma_0_to_fp16, mean = add_1_mean_0_to_fp16, variance = add_1_variance_0_to_fp16, x = reshape_1_cast);
            tensor<fp16, [2, 320, 64, 64]> input_11_cast = silu(x = add_1_cast);
            tensor<int32, [2]> var_137 = const()[name = tensor<string, []>("op_137"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_139 = const()[name = tensor<string, []>("op_139"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_1_pad_type_0 = const()[name = tensor<string, []>("hidden_states_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_1_pad_0 = const()[name = tensor<string, []>("hidden_states_1_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> down_blocks_0_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4128448)))];
            tensor<fp16, [320]> down_blocks_0_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5971712)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_1_cast = conv(bias = down_blocks_0_resnets_0_conv1_bias_to_fp16, dilations = var_139, groups = var_115, pad = hidden_states_1_pad_0, pad_type = hidden_states_1_pad_type_0, strides = var_137, weight = down_blocks_0_resnets_0_conv1_weight_to_fp16, x = input_11_cast);
            tensor<fp16, [2, 1280, 1, 1]> input_15_cast = silu(x = input_13_cast);
            tensor<int32, [2]> var_145 = const()[name = tensor<string, []>("op_145"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_147 = const()[name = tensor<string, []>("op_147"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_1_pad_type_0 = const()[name = tensor<string, []>("temb_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_1_pad_0 = const()[name = tensor<string, []>("temb_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> down_blocks_0_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5972416)))];
            tensor<fp16, [320]> down_blocks_0_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6791680)))];
            tensor<fp16, [2, 320, 1, 1]> temb_1_cast = conv(bias = down_blocks_0_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_147, groups = var_115, pad = temb_1_pad_0, pad_type = temb_1_pad_type_0, strides = var_145, weight = down_blocks_0_resnets_0_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 320, 64, 64]> input_17_cast = add(x = hidden_states_1_cast, y = temb_1_cast);
            tensor<int32, [5]> reshape_4_shape_0 = const()[name = tensor<string, []>("reshape_4_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_4_cast = reshape(shape = reshape_4_shape_0, x = input_17_cast);
            tensor<int32, [3]> reduce_mean_3_axes_0 = const()[name = tensor<string, []>("reduce_mean_3_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_3_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_3_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_3_cast = reduce_mean(axes = reduce_mean_3_axes_0, keep_dims = reduce_mean_3_keep_dims_0, x = reshape_4_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_2_cast = sub(x = reshape_4_cast, y = reduce_mean_3_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_1_cast = square(x = sub_2_cast);
            tensor<int32, [3]> reduce_mean_5_axes_0 = const()[name = tensor<string, []>("reduce_mean_5_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_5_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_5_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_5_cast = reduce_mean(axes = reduce_mean_5_axes_0, keep_dims = reduce_mean_5_keep_dims_0, x = square_1_cast);
            tensor<fp16, []> add_2_y_0_to_fp16 = const()[name = tensor<string, []>("add_2_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_2_cast = add(x = reduce_mean_5_cast, y = add_2_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_1_cast = sqrt(x = add_2_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_1_cast = real_div(x = sub_2_cast, y = sqrt_1_cast);
            tensor<int32, [4]> reshape_5_shape_0 = const()[name = tensor<string, []>("reshape_5_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_5_cast = reshape(shape = reshape_5_shape_0, x = real_div_1_cast);
            tensor<fp16, [320]> add_3_mean_0_to_fp16 = const()[name = tensor<string, []>("add_3_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6792384)))];
            tensor<fp16, [320]> add_3_variance_0_to_fp16 = const()[name = tensor<string, []>("add_3_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6793088)))];
            tensor<fp16, [320]> add_3_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_3_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6793792)))];
            tensor<fp16, [320]> add_3_beta_0_to_fp16 = const()[name = tensor<string, []>("add_3_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6794496)))];
            tensor<fp16, []> add_3_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_3_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_3_cast = batch_norm(beta = add_3_beta_0_to_fp16, epsilon = add_3_epsilon_0_to_fp16, gamma = add_3_gamma_0_to_fp16, mean = add_3_mean_0_to_fp16, variance = add_3_variance_0_to_fp16, x = reshape_5_cast);
            tensor<fp16, [2, 320, 64, 64]> input_21_cast = silu(x = add_3_cast);
            tensor<int32, [2]> var_157 = const()[name = tensor<string, []>("op_157"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_159 = const()[name = tensor<string, []>("op_159"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_3_pad_type_0 = const()[name = tensor<string, []>("hidden_states_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_3_pad_0 = const()[name = tensor<string, []>("hidden_states_3_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> down_blocks_0_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6795200)))];
            tensor<fp16, [320]> down_blocks_0_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8638464)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_3_cast = conv(bias = down_blocks_0_resnets_0_conv2_bias_to_fp16, dilations = var_159, groups = var_115, pad = hidden_states_3_pad_0, pad_type = hidden_states_3_pad_type_0, strides = var_157, weight = down_blocks_0_resnets_0_conv2_weight_to_fp16, x = input_21_cast);
            tensor<fp16, [2, 320, 64, 64]> hidden_states_5_cast = add(x = input_7_cast, y = hidden_states_3_cast);
            tensor<int32, [5]> reshape_8_shape_0 = const()[name = tensor<string, []>("reshape_8_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_8_cast = reshape(shape = reshape_8_shape_0, x = hidden_states_5_cast);
            tensor<int32, [3]> reduce_mean_6_axes_0 = const()[name = tensor<string, []>("reduce_mean_6_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_6_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_6_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_6_cast = reduce_mean(axes = reduce_mean_6_axes_0, keep_dims = reduce_mean_6_keep_dims_0, x = reshape_8_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_4_cast = sub(x = reshape_8_cast, y = reduce_mean_6_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_2_cast = square(x = sub_4_cast);
            tensor<int32, [3]> reduce_mean_8_axes_0 = const()[name = tensor<string, []>("reduce_mean_8_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_8_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_8_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_8_cast = reduce_mean(axes = reduce_mean_8_axes_0, keep_dims = reduce_mean_8_keep_dims_0, x = square_2_cast);
            tensor<fp16, []> add_4_y_0_to_fp16 = const()[name = tensor<string, []>("add_4_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_4_cast = add(x = reduce_mean_8_cast, y = add_4_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_2_cast = sqrt(x = add_4_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_2_cast = real_div(x = sub_4_cast, y = sqrt_2_cast);
            tensor<int32, [4]> reshape_9_shape_0 = const()[name = tensor<string, []>("reshape_9_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_9_cast = reshape(shape = reshape_9_shape_0, x = real_div_2_cast);
            tensor<fp16, [320]> add_5_mean_0_to_fp16 = const()[name = tensor<string, []>("add_5_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8639168)))];
            tensor<fp16, [320]> add_5_variance_0_to_fp16 = const()[name = tensor<string, []>("add_5_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8639872)))];
            tensor<fp16, [320]> add_5_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_5_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8640576)))];
            tensor<fp16, [320]> add_5_beta_0_to_fp16 = const()[name = tensor<string, []>("add_5_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8641280)))];
            tensor<fp16, []> add_5_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_5_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_5_cast = batch_norm(beta = add_5_beta_0_to_fp16, epsilon = add_5_epsilon_0_to_fp16, gamma = add_5_gamma_0_to_fp16, mean = add_5_mean_0_to_fp16, variance = add_5_variance_0_to_fp16, x = reshape_9_cast);
            tensor<int32, [2]> var_179 = const()[name = tensor<string, []>("op_179"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_181 = const()[name = tensor<string, []>("op_181"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_7_pad_type_0 = const()[name = tensor<string, []>("hidden_states_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_7_pad_0 = const()[name = tensor<string, []>("hidden_states_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_proj_in_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8641984)))];
            tensor<fp16, [320]> down_blocks_0_attentions_0_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_proj_in_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8846848)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_7_cast = conv(bias = down_blocks_0_attentions_0_proj_in_bias_to_fp16, dilations = var_181, groups = var_115, pad = hidden_states_7_pad_0, pad_type = hidden_states_7_pad_type_0, strides = var_179, weight = down_blocks_0_attentions_0_proj_in_weight_to_fp16, x = add_5_cast);
            tensor<int32, [4]> var_186 = const()[name = tensor<string, []>("op_186"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<fp16, [2, 320, 1, 4096]> inputs_1_cast = reshape(shape = var_186, x = hidden_states_7_cast);
            tensor<int32, [1]> var_196 = const()[name = tensor<string, []>("op_196"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_1_cast = reduce_mean(axes = var_196, keep_dims = var_110, x = inputs_1_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_1_cast = sub(x = inputs_1_cast, y = channels_mean_1_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_1_cast = mul(x = zero_mean_1_cast, y = zero_mean_1_cast);
            tensor<int32, [1]> var_200 = const()[name = tensor<string, []>("op_200"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_201_cast = reduce_mean(axes = var_200, keep_dims = var_110, x = zero_mean_sq_1_cast);
            tensor<fp16, []> var_202_to_fp16 = const()[name = tensor<string, []>("op_202_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_203_cast = add(x = var_201_cast, y = var_202_to_fp16);
            tensor<fp16, []> denom_1_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_1_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_1_cast = rsqrt(epsilon = denom_1_epsilon_0_to_fp16, x = var_203_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_1_cast = mul(x = zero_mean_1_cast, y = denom_1_cast);
            tensor<fp16, [1, 320, 1, 1]> var_207_to_fp16 = const()[name = tensor<string, []>("op_207_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8847552)))];
            tensor<fp16, [2, 320, 1, 4096]> var_208_cast = add(x = out_1_cast, y = var_207_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_210_to_fp16 = const()[name = tensor<string, []>("op_210_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8848256)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_9_cast = mul(x = var_208_cast, y = var_210_to_fp16);
            tensor<int32, [2]> var_217 = const()[name = tensor<string, []>("op_217"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_219 = const()[name = tensor<string, []>("op_219"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_1_pad_type_0 = const()[name = tensor<string, []>("q_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_1_pad_0 = const()[name = tensor<string, []>("q_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8848960)))];
            tensor<fp16, [2, 320, 1, 4096]> q_1_cast = conv(dilations = var_219, groups = var_115, pad = q_1_pad_0, pad_type = q_1_pad_type_0, strides = var_217, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_9_cast);
            tensor<int32, [2]> var_223 = const()[name = tensor<string, []>("op_223"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_225 = const()[name = tensor<string, []>("op_225"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_1_pad_type_0 = const()[name = tensor<string, []>("k_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_1_pad_0 = const()[name = tensor<string, []>("k_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9053824)))];
            tensor<fp16, [2, 320, 1, 4096]> k_1_cast = conv(dilations = var_225, groups = var_115, pad = k_1_pad_0, pad_type = k_1_pad_type_0, strides = var_223, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_9_cast);
            tensor<int32, [2]> var_229 = const()[name = tensor<string, []>("op_229"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_231 = const()[name = tensor<string, []>("op_231"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_1_pad_type_0 = const()[name = tensor<string, []>("v_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_1_pad_0 = const()[name = tensor<string, []>("v_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9258688)))];
            tensor<fp16, [2, 320, 1, 4096]> v_1_cast = conv(dilations = var_231, groups = var_115, pad = v_1_pad_0, pad_type = v_1_pad_type_0, strides = var_229, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_9_cast);
            tensor<int32, [4]> var_235_begin_0 = const()[name = tensor<string, []>("op_235_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_235_end_0 = const()[name = tensor<string, []>("op_235_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_235_end_mask_0 = const()[name = tensor<string, []>("op_235_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_235_cast = slice_by_index(begin = var_235_begin_0, end = var_235_end_0, end_mask = var_235_end_mask_0, x = q_1_cast);
            tensor<int32, [4]> var_239_begin_0 = const()[name = tensor<string, []>("op_239_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_239_end_0 = const()[name = tensor<string, []>("op_239_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_239_end_mask_0 = const()[name = tensor<string, []>("op_239_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_239_cast = slice_by_index(begin = var_239_begin_0, end = var_239_end_0, end_mask = var_239_end_mask_0, x = q_1_cast);
            tensor<int32, [4]> var_243_begin_0 = const()[name = tensor<string, []>("op_243_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_243_end_0 = const()[name = tensor<string, []>("op_243_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_243_end_mask_0 = const()[name = tensor<string, []>("op_243_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_243_cast = slice_by_index(begin = var_243_begin_0, end = var_243_end_0, end_mask = var_243_end_mask_0, x = q_1_cast);
            tensor<int32, [4]> var_247_begin_0 = const()[name = tensor<string, []>("op_247_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_247_end_0 = const()[name = tensor<string, []>("op_247_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_247_end_mask_0 = const()[name = tensor<string, []>("op_247_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_247_cast = slice_by_index(begin = var_247_begin_0, end = var_247_end_0, end_mask = var_247_end_mask_0, x = q_1_cast);
            tensor<int32, [4]> var_251_begin_0 = const()[name = tensor<string, []>("op_251_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_251_end_0 = const()[name = tensor<string, []>("op_251_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_251_end_mask_0 = const()[name = tensor<string, []>("op_251_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_251_cast = slice_by_index(begin = var_251_begin_0, end = var_251_end_0, end_mask = var_251_end_mask_0, x = q_1_cast);
            tensor<int32, [4]> var_255_begin_0 = const()[name = tensor<string, []>("op_255_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_255_end_0 = const()[name = tensor<string, []>("op_255_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_255_end_mask_0 = const()[name = tensor<string, []>("op_255_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_255_cast = slice_by_index(begin = var_255_begin_0, end = var_255_end_0, end_mask = var_255_end_mask_0, x = q_1_cast);
            tensor<int32, [4]> var_259_begin_0 = const()[name = tensor<string, []>("op_259_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_259_end_0 = const()[name = tensor<string, []>("op_259_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_259_end_mask_0 = const()[name = tensor<string, []>("op_259_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_259_cast = slice_by_index(begin = var_259_begin_0, end = var_259_end_0, end_mask = var_259_end_mask_0, x = q_1_cast);
            tensor<int32, [4]> var_263_begin_0 = const()[name = tensor<string, []>("op_263_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_263_end_0 = const()[name = tensor<string, []>("op_263_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_263_end_mask_0 = const()[name = tensor<string, []>("op_263_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_263_cast = slice_by_index(begin = var_263_begin_0, end = var_263_end_0, end_mask = var_263_end_mask_0, x = q_1_cast);
            tensor<int32, [4]> k_3_perm_0 = const()[name = tensor<string, []>("k_3_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_270_begin_0 = const()[name = tensor<string, []>("op_270_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_270_end_0 = const()[name = tensor<string, []>("op_270_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 40])];
            tensor<bool, [4]> var_270_end_mask_0 = const()[name = tensor<string, []>("op_270_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 320]> transpose_31 = transpose(perm = k_3_perm_0, x = k_1_cast);
            tensor<fp16, [2, 4096, 1, 40]> var_270_cast = slice_by_index(begin = var_270_begin_0, end = var_270_end_0, end_mask = var_270_end_mask_0, x = transpose_31);
            tensor<int32, [4]> var_274_begin_0 = const()[name = tensor<string, []>("op_274_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 40])];
            tensor<int32, [4]> var_274_end_0 = const()[name = tensor<string, []>("op_274_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 80])];
            tensor<bool, [4]> var_274_end_mask_0 = const()[name = tensor<string, []>("op_274_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_274_cast = slice_by_index(begin = var_274_begin_0, end = var_274_end_0, end_mask = var_274_end_mask_0, x = transpose_31);
            tensor<int32, [4]> var_278_begin_0 = const()[name = tensor<string, []>("op_278_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_278_end_0 = const()[name = tensor<string, []>("op_278_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 120])];
            tensor<bool, [4]> var_278_end_mask_0 = const()[name = tensor<string, []>("op_278_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_278_cast = slice_by_index(begin = var_278_begin_0, end = var_278_end_0, end_mask = var_278_end_mask_0, x = transpose_31);
            tensor<int32, [4]> var_282_begin_0 = const()[name = tensor<string, []>("op_282_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 120])];
            tensor<int32, [4]> var_282_end_0 = const()[name = tensor<string, []>("op_282_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 160])];
            tensor<bool, [4]> var_282_end_mask_0 = const()[name = tensor<string, []>("op_282_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_282_cast = slice_by_index(begin = var_282_begin_0, end = var_282_end_0, end_mask = var_282_end_mask_0, x = transpose_31);
            tensor<int32, [4]> var_286_begin_0 = const()[name = tensor<string, []>("op_286_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_286_end_0 = const()[name = tensor<string, []>("op_286_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 200])];
            tensor<bool, [4]> var_286_end_mask_0 = const()[name = tensor<string, []>("op_286_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_286_cast = slice_by_index(begin = var_286_begin_0, end = var_286_end_0, end_mask = var_286_end_mask_0, x = transpose_31);
            tensor<int32, [4]> var_290_begin_0 = const()[name = tensor<string, []>("op_290_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 200])];
            tensor<int32, [4]> var_290_end_0 = const()[name = tensor<string, []>("op_290_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 240])];
            tensor<bool, [4]> var_290_end_mask_0 = const()[name = tensor<string, []>("op_290_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_290_cast = slice_by_index(begin = var_290_begin_0, end = var_290_end_0, end_mask = var_290_end_mask_0, x = transpose_31);
            tensor<int32, [4]> var_294_begin_0 = const()[name = tensor<string, []>("op_294_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_294_end_0 = const()[name = tensor<string, []>("op_294_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 280])];
            tensor<bool, [4]> var_294_end_mask_0 = const()[name = tensor<string, []>("op_294_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_294_cast = slice_by_index(begin = var_294_begin_0, end = var_294_end_0, end_mask = var_294_end_mask_0, x = transpose_31);
            tensor<int32, [4]> var_298_begin_0 = const()[name = tensor<string, []>("op_298_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 280])];
            tensor<int32, [4]> var_298_end_0 = const()[name = tensor<string, []>("op_298_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 320])];
            tensor<bool, [4]> var_298_end_mask_0 = const()[name = tensor<string, []>("op_298_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_298_cast = slice_by_index(begin = var_298_begin_0, end = var_298_end_0, end_mask = var_298_end_mask_0, x = transpose_31);
            tensor<int32, [4]> var_300_begin_0 = const()[name = tensor<string, []>("op_300_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_300_end_0 = const()[name = tensor<string, []>("op_300_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_300_end_mask_0 = const()[name = tensor<string, []>("op_300_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_300_cast = slice_by_index(begin = var_300_begin_0, end = var_300_end_0, end_mask = var_300_end_mask_0, x = v_1_cast);
            tensor<int32, [4]> var_304_begin_0 = const()[name = tensor<string, []>("op_304_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_304_end_0 = const()[name = tensor<string, []>("op_304_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_304_end_mask_0 = const()[name = tensor<string, []>("op_304_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_304_cast = slice_by_index(begin = var_304_begin_0, end = var_304_end_0, end_mask = var_304_end_mask_0, x = v_1_cast);
            tensor<int32, [4]> var_308_begin_0 = const()[name = tensor<string, []>("op_308_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_308_end_0 = const()[name = tensor<string, []>("op_308_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_308_end_mask_0 = const()[name = tensor<string, []>("op_308_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_308_cast = slice_by_index(begin = var_308_begin_0, end = var_308_end_0, end_mask = var_308_end_mask_0, x = v_1_cast);
            tensor<int32, [4]> var_312_begin_0 = const()[name = tensor<string, []>("op_312_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_312_end_0 = const()[name = tensor<string, []>("op_312_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_312_end_mask_0 = const()[name = tensor<string, []>("op_312_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_312_cast = slice_by_index(begin = var_312_begin_0, end = var_312_end_0, end_mask = var_312_end_mask_0, x = v_1_cast);
            tensor<int32, [4]> var_316_begin_0 = const()[name = tensor<string, []>("op_316_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_316_end_0 = const()[name = tensor<string, []>("op_316_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_316_end_mask_0 = const()[name = tensor<string, []>("op_316_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_316_cast = slice_by_index(begin = var_316_begin_0, end = var_316_end_0, end_mask = var_316_end_mask_0, x = v_1_cast);
            tensor<int32, [4]> var_320_begin_0 = const()[name = tensor<string, []>("op_320_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_320_end_0 = const()[name = tensor<string, []>("op_320_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_320_end_mask_0 = const()[name = tensor<string, []>("op_320_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_320_cast = slice_by_index(begin = var_320_begin_0, end = var_320_end_0, end_mask = var_320_end_mask_0, x = v_1_cast);
            tensor<int32, [4]> var_324_begin_0 = const()[name = tensor<string, []>("op_324_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_324_end_0 = const()[name = tensor<string, []>("op_324_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_324_end_mask_0 = const()[name = tensor<string, []>("op_324_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_324_cast = slice_by_index(begin = var_324_begin_0, end = var_324_end_0, end_mask = var_324_end_mask_0, x = v_1_cast);
            tensor<int32, [4]> var_328_begin_0 = const()[name = tensor<string, []>("op_328_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_328_end_0 = const()[name = tensor<string, []>("op_328_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_328_end_mask_0 = const()[name = tensor<string, []>("op_328_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_328_cast = slice_by_index(begin = var_328_begin_0, end = var_328_end_0, end_mask = var_328_end_mask_0, x = v_1_cast);
            tensor<string, []> var_332_equation_0 = const()[name = tensor<string, []>("op_332_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_332_cast = einsum(equation = var_332_equation_0, values = (var_270_cast, var_235_cast));
            tensor<fp16, []> var_333_to_fp16 = const()[name = tensor<string, []>("op_333_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_1_cast = mul(x = var_332_cast, y = var_333_to_fp16);
            tensor<string, []> var_336_equation_0 = const()[name = tensor<string, []>("op_336_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_336_cast = einsum(equation = var_336_equation_0, values = (var_274_cast, var_239_cast));
            tensor<fp16, []> var_337_to_fp16 = const()[name = tensor<string, []>("op_337_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_3_cast = mul(x = var_336_cast, y = var_337_to_fp16);
            tensor<string, []> var_340_equation_0 = const()[name = tensor<string, []>("op_340_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_340_cast = einsum(equation = var_340_equation_0, values = (var_278_cast, var_243_cast));
            tensor<fp16, []> var_341_to_fp16 = const()[name = tensor<string, []>("op_341_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_5_cast = mul(x = var_340_cast, y = var_341_to_fp16);
            tensor<string, []> var_344_equation_0 = const()[name = tensor<string, []>("op_344_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_344_cast = einsum(equation = var_344_equation_0, values = (var_282_cast, var_247_cast));
            tensor<fp16, []> var_345_to_fp16 = const()[name = tensor<string, []>("op_345_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_7_cast = mul(x = var_344_cast, y = var_345_to_fp16);
            tensor<string, []> var_348_equation_0 = const()[name = tensor<string, []>("op_348_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_348_cast = einsum(equation = var_348_equation_0, values = (var_286_cast, var_251_cast));
            tensor<fp16, []> var_349_to_fp16 = const()[name = tensor<string, []>("op_349_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_9_cast = mul(x = var_348_cast, y = var_349_to_fp16);
            tensor<string, []> var_352_equation_0 = const()[name = tensor<string, []>("op_352_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_352_cast = einsum(equation = var_352_equation_0, values = (var_290_cast, var_255_cast));
            tensor<fp16, []> var_353_to_fp16 = const()[name = tensor<string, []>("op_353_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_11_cast = mul(x = var_352_cast, y = var_353_to_fp16);
            tensor<string, []> var_356_equation_0 = const()[name = tensor<string, []>("op_356_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_356_cast = einsum(equation = var_356_equation_0, values = (var_294_cast, var_259_cast));
            tensor<fp16, []> var_357_to_fp16 = const()[name = tensor<string, []>("op_357_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_13_cast = mul(x = var_356_cast, y = var_357_to_fp16);
            tensor<string, []> var_360_equation_0 = const()[name = tensor<string, []>("op_360_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_360_cast = einsum(equation = var_360_equation_0, values = (var_298_cast, var_263_cast));
            tensor<fp16, []> var_361_to_fp16 = const()[name = tensor<string, []>("op_361_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_15_cast = mul(x = var_360_cast, y = var_361_to_fp16);
            tensor<fp16, [2, 4096, 1, 4096]> var_363_cast = softmax(axis = var_115, x = aw_1_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_364_cast = softmax(axis = var_115, x = aw_3_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_365_cast = softmax(axis = var_115, x = aw_5_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_366_cast = softmax(axis = var_115, x = aw_7_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_367_cast = softmax(axis = var_115, x = aw_9_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_368_cast = softmax(axis = var_115, x = aw_11_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_369_cast = softmax(axis = var_115, x = aw_13_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_370_cast = softmax(axis = var_115, x = aw_15_cast);
            tensor<string, []> var_372_equation_0 = const()[name = tensor<string, []>("op_372_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_372_cast = einsum(equation = var_372_equation_0, values = (var_300_cast, var_363_cast));
            tensor<string, []> var_374_equation_0 = const()[name = tensor<string, []>("op_374_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_374_cast = einsum(equation = var_374_equation_0, values = (var_304_cast, var_364_cast));
            tensor<string, []> var_376_equation_0 = const()[name = tensor<string, []>("op_376_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_376_cast = einsum(equation = var_376_equation_0, values = (var_308_cast, var_365_cast));
            tensor<string, []> var_378_equation_0 = const()[name = tensor<string, []>("op_378_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_378_cast = einsum(equation = var_378_equation_0, values = (var_312_cast, var_366_cast));
            tensor<string, []> var_380_equation_0 = const()[name = tensor<string, []>("op_380_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_380_cast = einsum(equation = var_380_equation_0, values = (var_316_cast, var_367_cast));
            tensor<string, []> var_382_equation_0 = const()[name = tensor<string, []>("op_382_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_382_cast = einsum(equation = var_382_equation_0, values = (var_320_cast, var_368_cast));
            tensor<string, []> var_384_equation_0 = const()[name = tensor<string, []>("op_384_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_384_cast = einsum(equation = var_384_equation_0, values = (var_324_cast, var_369_cast));
            tensor<string, []> var_386_equation_0 = const()[name = tensor<string, []>("op_386_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_386_cast = einsum(equation = var_386_equation_0, values = (var_328_cast, var_370_cast));
            tensor<bool, []> input_25_interleave_0 = const()[name = tensor<string, []>("input_25_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_25_cast = concat(axis = var_115, interleave = input_25_interleave_0, values = (var_372_cast, var_374_cast, var_376_cast, var_378_cast, var_380_cast, var_382_cast, var_384_cast, var_386_cast));
            tensor<int32, [2]> var_392 = const()[name = tensor<string, []>("op_392"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_394 = const()[name = tensor<string, []>("op_394"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_396_pad_type_0 = const()[name = tensor<string, []>("op_396_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_396_pad_0 = const()[name = tensor<string, []>("op_396_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9463552)))];
            tensor<fp16, [320]> down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9668416)))];
            tensor<fp16, [2, 320, 1, 4096]> var_396_cast = conv(bias = down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_394, groups = var_115, pad = var_396_pad_0, pad_type = var_396_pad_type_0, strides = var_392, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_25_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_3_cast = add(x = var_396_cast, y = inputs_1_cast);
            tensor<int32, [1]> var_400 = const()[name = tensor<string, []>("op_400"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_3_cast = reduce_mean(axes = var_400, keep_dims = var_110, x = inputs_3_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_3_cast = sub(x = inputs_3_cast, y = channels_mean_3_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_3_cast = mul(x = zero_mean_3_cast, y = zero_mean_3_cast);
            tensor<int32, [1]> var_404 = const()[name = tensor<string, []>("op_404"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_405_cast = reduce_mean(axes = var_404, keep_dims = var_110, x = zero_mean_sq_3_cast);
            tensor<fp16, []> var_406_to_fp16 = const()[name = tensor<string, []>("op_406_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_407_cast = add(x = var_405_cast, y = var_406_to_fp16);
            tensor<fp16, []> denom_3_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_3_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_3_cast = rsqrt(epsilon = denom_3_epsilon_0_to_fp16, x = var_407_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_3_cast = mul(x = zero_mean_3_cast, y = denom_3_cast);
            tensor<fp16, [1, 320, 1, 1]> var_411_to_fp16 = const()[name = tensor<string, []>("op_411_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9669120)))];
            tensor<fp16, [2, 320, 1, 4096]> var_412_cast = add(x = out_3_cast, y = var_411_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_414_to_fp16 = const()[name = tensor<string, []>("op_414_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9669824)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_11_cast = mul(x = var_412_cast, y = var_414_to_fp16);
            tensor<int32, [2]> var_421 = const()[name = tensor<string, []>("op_421"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_423 = const()[name = tensor<string, []>("op_423"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_3_pad_type_0 = const()[name = tensor<string, []>("q_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_3_pad_0 = const()[name = tensor<string, []>("q_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9670528)))];
            tensor<fp16, [2, 320, 1, 4096]> q_3_cast = conv(dilations = var_423, groups = var_115, pad = q_3_pad_0, pad_type = q_3_pad_type_0, strides = var_421, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_11_cast);
            tensor<int32, [2]> var_427 = const()[name = tensor<string, []>("op_427"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_429 = const()[name = tensor<string, []>("op_429"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_5_pad_type_0 = const()[name = tensor<string, []>("k_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_5_pad_0 = const()[name = tensor<string, []>("k_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 768, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [320, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9875392)))];
            tensor<fp16, [2, 320, 1, 77]> k_5_cast = conv(dilations = var_429, groups = var_115, pad = k_5_pad_0, pad_type = k_5_pad_type_0, strides = var_427, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_433 = const()[name = tensor<string, []>("op_433"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_435 = const()[name = tensor<string, []>("op_435"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_3_pad_type_0 = const()[name = tensor<string, []>("v_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_3_pad_0 = const()[name = tensor<string, []>("v_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 768, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [320, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10366976)))];
            tensor<fp16, [2, 320, 1, 77]> v_3_cast = conv(dilations = var_435, groups = var_115, pad = v_3_pad_0, pad_type = v_3_pad_type_0, strides = var_433, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_439_begin_0 = const()[name = tensor<string, []>("op_439_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_439_end_0 = const()[name = tensor<string, []>("op_439_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_439_end_mask_0 = const()[name = tensor<string, []>("op_439_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_439_cast = slice_by_index(begin = var_439_begin_0, end = var_439_end_0, end_mask = var_439_end_mask_0, x = q_3_cast);
            tensor<int32, [4]> var_443_begin_0 = const()[name = tensor<string, []>("op_443_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_443_end_0 = const()[name = tensor<string, []>("op_443_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_443_end_mask_0 = const()[name = tensor<string, []>("op_443_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_443_cast = slice_by_index(begin = var_443_begin_0, end = var_443_end_0, end_mask = var_443_end_mask_0, x = q_3_cast);
            tensor<int32, [4]> var_447_begin_0 = const()[name = tensor<string, []>("op_447_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_447_end_0 = const()[name = tensor<string, []>("op_447_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_447_end_mask_0 = const()[name = tensor<string, []>("op_447_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_447_cast = slice_by_index(begin = var_447_begin_0, end = var_447_end_0, end_mask = var_447_end_mask_0, x = q_3_cast);
            tensor<int32, [4]> var_451_begin_0 = const()[name = tensor<string, []>("op_451_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_451_end_0 = const()[name = tensor<string, []>("op_451_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_451_end_mask_0 = const()[name = tensor<string, []>("op_451_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_451_cast = slice_by_index(begin = var_451_begin_0, end = var_451_end_0, end_mask = var_451_end_mask_0, x = q_3_cast);
            tensor<int32, [4]> var_455_begin_0 = const()[name = tensor<string, []>("op_455_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_455_end_0 = const()[name = tensor<string, []>("op_455_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_455_end_mask_0 = const()[name = tensor<string, []>("op_455_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_455_cast = slice_by_index(begin = var_455_begin_0, end = var_455_end_0, end_mask = var_455_end_mask_0, x = q_3_cast);
            tensor<int32, [4]> var_459_begin_0 = const()[name = tensor<string, []>("op_459_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_459_end_0 = const()[name = tensor<string, []>("op_459_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_459_end_mask_0 = const()[name = tensor<string, []>("op_459_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_459_cast = slice_by_index(begin = var_459_begin_0, end = var_459_end_0, end_mask = var_459_end_mask_0, x = q_3_cast);
            tensor<int32, [4]> var_463_begin_0 = const()[name = tensor<string, []>("op_463_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_463_end_0 = const()[name = tensor<string, []>("op_463_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_463_end_mask_0 = const()[name = tensor<string, []>("op_463_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_463_cast = slice_by_index(begin = var_463_begin_0, end = var_463_end_0, end_mask = var_463_end_mask_0, x = q_3_cast);
            tensor<int32, [4]> var_467_begin_0 = const()[name = tensor<string, []>("op_467_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_467_end_0 = const()[name = tensor<string, []>("op_467_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_467_end_mask_0 = const()[name = tensor<string, []>("op_467_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_467_cast = slice_by_index(begin = var_467_begin_0, end = var_467_end_0, end_mask = var_467_end_mask_0, x = q_3_cast);
            tensor<int32, [4]> k_7_perm_0 = const()[name = tensor<string, []>("k_7_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_474_begin_0 = const()[name = tensor<string, []>("op_474_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_474_end_0 = const()[name = tensor<string, []>("op_474_end_0"), val = tensor<int32, [4]>([2, 77, 1, 40])];
            tensor<bool, [4]> var_474_end_mask_0 = const()[name = tensor<string, []>("op_474_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 320]> transpose_30 = transpose(perm = k_7_perm_0, x = k_5_cast);
            tensor<fp16, [2, 77, 1, 40]> var_474_cast = slice_by_index(begin = var_474_begin_0, end = var_474_end_0, end_mask = var_474_end_mask_0, x = transpose_30);
            tensor<int32, [4]> var_478_begin_0 = const()[name = tensor<string, []>("op_478_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 40])];
            tensor<int32, [4]> var_478_end_0 = const()[name = tensor<string, []>("op_478_end_0"), val = tensor<int32, [4]>([2, 77, 1, 80])];
            tensor<bool, [4]> var_478_end_mask_0 = const()[name = tensor<string, []>("op_478_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_478_cast = slice_by_index(begin = var_478_begin_0, end = var_478_end_0, end_mask = var_478_end_mask_0, x = transpose_30);
            tensor<int32, [4]> var_482_begin_0 = const()[name = tensor<string, []>("op_482_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_482_end_0 = const()[name = tensor<string, []>("op_482_end_0"), val = tensor<int32, [4]>([2, 77, 1, 120])];
            tensor<bool, [4]> var_482_end_mask_0 = const()[name = tensor<string, []>("op_482_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_482_cast = slice_by_index(begin = var_482_begin_0, end = var_482_end_0, end_mask = var_482_end_mask_0, x = transpose_30);
            tensor<int32, [4]> var_486_begin_0 = const()[name = tensor<string, []>("op_486_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 120])];
            tensor<int32, [4]> var_486_end_0 = const()[name = tensor<string, []>("op_486_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_486_end_mask_0 = const()[name = tensor<string, []>("op_486_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_486_cast = slice_by_index(begin = var_486_begin_0, end = var_486_end_0, end_mask = var_486_end_mask_0, x = transpose_30);
            tensor<int32, [4]> var_490_begin_0 = const()[name = tensor<string, []>("op_490_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_490_end_0 = const()[name = tensor<string, []>("op_490_end_0"), val = tensor<int32, [4]>([2, 77, 1, 200])];
            tensor<bool, [4]> var_490_end_mask_0 = const()[name = tensor<string, []>("op_490_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_490_cast = slice_by_index(begin = var_490_begin_0, end = var_490_end_0, end_mask = var_490_end_mask_0, x = transpose_30);
            tensor<int32, [4]> var_494_begin_0 = const()[name = tensor<string, []>("op_494_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 200])];
            tensor<int32, [4]> var_494_end_0 = const()[name = tensor<string, []>("op_494_end_0"), val = tensor<int32, [4]>([2, 77, 1, 240])];
            tensor<bool, [4]> var_494_end_mask_0 = const()[name = tensor<string, []>("op_494_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_494_cast = slice_by_index(begin = var_494_begin_0, end = var_494_end_0, end_mask = var_494_end_mask_0, x = transpose_30);
            tensor<int32, [4]> var_498_begin_0 = const()[name = tensor<string, []>("op_498_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_498_end_0 = const()[name = tensor<string, []>("op_498_end_0"), val = tensor<int32, [4]>([2, 77, 1, 280])];
            tensor<bool, [4]> var_498_end_mask_0 = const()[name = tensor<string, []>("op_498_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_498_cast = slice_by_index(begin = var_498_begin_0, end = var_498_end_0, end_mask = var_498_end_mask_0, x = transpose_30);
            tensor<int32, [4]> var_502_begin_0 = const()[name = tensor<string, []>("op_502_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 280])];
            tensor<int32, [4]> var_502_end_0 = const()[name = tensor<string, []>("op_502_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_502_end_mask_0 = const()[name = tensor<string, []>("op_502_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_502_cast = slice_by_index(begin = var_502_begin_0, end = var_502_end_0, end_mask = var_502_end_mask_0, x = transpose_30);
            tensor<int32, [4]> var_504_begin_0 = const()[name = tensor<string, []>("op_504_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_504_end_0 = const()[name = tensor<string, []>("op_504_end_0"), val = tensor<int32, [4]>([2, 40, 1, 77])];
            tensor<bool, [4]> var_504_end_mask_0 = const()[name = tensor<string, []>("op_504_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_504_cast = slice_by_index(begin = var_504_begin_0, end = var_504_end_0, end_mask = var_504_end_mask_0, x = v_3_cast);
            tensor<int32, [4]> var_508_begin_0 = const()[name = tensor<string, []>("op_508_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_508_end_0 = const()[name = tensor<string, []>("op_508_end_0"), val = tensor<int32, [4]>([2, 80, 1, 77])];
            tensor<bool, [4]> var_508_end_mask_0 = const()[name = tensor<string, []>("op_508_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_508_cast = slice_by_index(begin = var_508_begin_0, end = var_508_end_0, end_mask = var_508_end_mask_0, x = v_3_cast);
            tensor<int32, [4]> var_512_begin_0 = const()[name = tensor<string, []>("op_512_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_512_end_0 = const()[name = tensor<string, []>("op_512_end_0"), val = tensor<int32, [4]>([2, 120, 1, 77])];
            tensor<bool, [4]> var_512_end_mask_0 = const()[name = tensor<string, []>("op_512_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_512_cast = slice_by_index(begin = var_512_begin_0, end = var_512_end_0, end_mask = var_512_end_mask_0, x = v_3_cast);
            tensor<int32, [4]> var_516_begin_0 = const()[name = tensor<string, []>("op_516_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_516_end_0 = const()[name = tensor<string, []>("op_516_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_516_end_mask_0 = const()[name = tensor<string, []>("op_516_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_516_cast = slice_by_index(begin = var_516_begin_0, end = var_516_end_0, end_mask = var_516_end_mask_0, x = v_3_cast);
            tensor<int32, [4]> var_520_begin_0 = const()[name = tensor<string, []>("op_520_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_520_end_0 = const()[name = tensor<string, []>("op_520_end_0"), val = tensor<int32, [4]>([2, 200, 1, 77])];
            tensor<bool, [4]> var_520_end_mask_0 = const()[name = tensor<string, []>("op_520_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_520_cast = slice_by_index(begin = var_520_begin_0, end = var_520_end_0, end_mask = var_520_end_mask_0, x = v_3_cast);
            tensor<int32, [4]> var_524_begin_0 = const()[name = tensor<string, []>("op_524_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_524_end_0 = const()[name = tensor<string, []>("op_524_end_0"), val = tensor<int32, [4]>([2, 240, 1, 77])];
            tensor<bool, [4]> var_524_end_mask_0 = const()[name = tensor<string, []>("op_524_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_524_cast = slice_by_index(begin = var_524_begin_0, end = var_524_end_0, end_mask = var_524_end_mask_0, x = v_3_cast);
            tensor<int32, [4]> var_528_begin_0 = const()[name = tensor<string, []>("op_528_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_528_end_0 = const()[name = tensor<string, []>("op_528_end_0"), val = tensor<int32, [4]>([2, 280, 1, 77])];
            tensor<bool, [4]> var_528_end_mask_0 = const()[name = tensor<string, []>("op_528_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_528_cast = slice_by_index(begin = var_528_begin_0, end = var_528_end_0, end_mask = var_528_end_mask_0, x = v_3_cast);
            tensor<int32, [4]> var_532_begin_0 = const()[name = tensor<string, []>("op_532_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_532_end_0 = const()[name = tensor<string, []>("op_532_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_532_end_mask_0 = const()[name = tensor<string, []>("op_532_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_532_cast = slice_by_index(begin = var_532_begin_0, end = var_532_end_0, end_mask = var_532_end_mask_0, x = v_3_cast);
            tensor<string, []> var_536_equation_0 = const()[name = tensor<string, []>("op_536_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_536_cast = einsum(equation = var_536_equation_0, values = (var_474_cast, var_439_cast));
            tensor<fp16, []> var_537_to_fp16 = const()[name = tensor<string, []>("op_537_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_17_cast = mul(x = var_536_cast, y = var_537_to_fp16);
            tensor<string, []> var_540_equation_0 = const()[name = tensor<string, []>("op_540_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_540_cast = einsum(equation = var_540_equation_0, values = (var_478_cast, var_443_cast));
            tensor<fp16, []> var_541_to_fp16 = const()[name = tensor<string, []>("op_541_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_19_cast = mul(x = var_540_cast, y = var_541_to_fp16);
            tensor<string, []> var_544_equation_0 = const()[name = tensor<string, []>("op_544_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_544_cast = einsum(equation = var_544_equation_0, values = (var_482_cast, var_447_cast));
            tensor<fp16, []> var_545_to_fp16 = const()[name = tensor<string, []>("op_545_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_21_cast = mul(x = var_544_cast, y = var_545_to_fp16);
            tensor<string, []> var_548_equation_0 = const()[name = tensor<string, []>("op_548_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_548_cast = einsum(equation = var_548_equation_0, values = (var_486_cast, var_451_cast));
            tensor<fp16, []> var_549_to_fp16 = const()[name = tensor<string, []>("op_549_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_23_cast = mul(x = var_548_cast, y = var_549_to_fp16);
            tensor<string, []> var_552_equation_0 = const()[name = tensor<string, []>("op_552_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_552_cast = einsum(equation = var_552_equation_0, values = (var_490_cast, var_455_cast));
            tensor<fp16, []> var_553_to_fp16 = const()[name = tensor<string, []>("op_553_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_25_cast = mul(x = var_552_cast, y = var_553_to_fp16);
            tensor<string, []> var_556_equation_0 = const()[name = tensor<string, []>("op_556_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_556_cast = einsum(equation = var_556_equation_0, values = (var_494_cast, var_459_cast));
            tensor<fp16, []> var_557_to_fp16 = const()[name = tensor<string, []>("op_557_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_27_cast = mul(x = var_556_cast, y = var_557_to_fp16);
            tensor<string, []> var_560_equation_0 = const()[name = tensor<string, []>("op_560_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_560_cast = einsum(equation = var_560_equation_0, values = (var_498_cast, var_463_cast));
            tensor<fp16, []> var_561_to_fp16 = const()[name = tensor<string, []>("op_561_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_29_cast = mul(x = var_560_cast, y = var_561_to_fp16);
            tensor<string, []> var_564_equation_0 = const()[name = tensor<string, []>("op_564_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_564_cast = einsum(equation = var_564_equation_0, values = (var_502_cast, var_467_cast));
            tensor<fp16, []> var_565_to_fp16 = const()[name = tensor<string, []>("op_565_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_31_cast = mul(x = var_564_cast, y = var_565_to_fp16);
            tensor<fp16, [2, 77, 1, 4096]> var_567_cast = softmax(axis = var_115, x = aw_17_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_568_cast = softmax(axis = var_115, x = aw_19_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_569_cast = softmax(axis = var_115, x = aw_21_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_570_cast = softmax(axis = var_115, x = aw_23_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_571_cast = softmax(axis = var_115, x = aw_25_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_572_cast = softmax(axis = var_115, x = aw_27_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_573_cast = softmax(axis = var_115, x = aw_29_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_574_cast = softmax(axis = var_115, x = aw_31_cast);
            tensor<string, []> var_576_equation_0 = const()[name = tensor<string, []>("op_576_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_576_cast = einsum(equation = var_576_equation_0, values = (var_504_cast, var_567_cast));
            tensor<string, []> var_578_equation_0 = const()[name = tensor<string, []>("op_578_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_578_cast = einsum(equation = var_578_equation_0, values = (var_508_cast, var_568_cast));
            tensor<string, []> var_580_equation_0 = const()[name = tensor<string, []>("op_580_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_580_cast = einsum(equation = var_580_equation_0, values = (var_512_cast, var_569_cast));
            tensor<string, []> var_582_equation_0 = const()[name = tensor<string, []>("op_582_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_582_cast = einsum(equation = var_582_equation_0, values = (var_516_cast, var_570_cast));
            tensor<string, []> var_584_equation_0 = const()[name = tensor<string, []>("op_584_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_584_cast = einsum(equation = var_584_equation_0, values = (var_520_cast, var_571_cast));
            tensor<string, []> var_586_equation_0 = const()[name = tensor<string, []>("op_586_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_586_cast = einsum(equation = var_586_equation_0, values = (var_524_cast, var_572_cast));
            tensor<string, []> var_588_equation_0 = const()[name = tensor<string, []>("op_588_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_588_cast = einsum(equation = var_588_equation_0, values = (var_528_cast, var_573_cast));
            tensor<string, []> var_590_equation_0 = const()[name = tensor<string, []>("op_590_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_590_cast = einsum(equation = var_590_equation_0, values = (var_532_cast, var_574_cast));
            tensor<bool, []> input_27_interleave_0 = const()[name = tensor<string, []>("input_27_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_27_cast = concat(axis = var_115, interleave = input_27_interleave_0, values = (var_576_cast, var_578_cast, var_580_cast, var_582_cast, var_584_cast, var_586_cast, var_588_cast, var_590_cast));
            tensor<int32, [2]> var_596 = const()[name = tensor<string, []>("op_596"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_598 = const()[name = tensor<string, []>("op_598"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_600_pad_type_0 = const()[name = tensor<string, []>("op_600_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_600_pad_0 = const()[name = tensor<string, []>("op_600_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10858560)))];
            tensor<fp16, [320]> down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11063424)))];
            tensor<fp16, [2, 320, 1, 4096]> var_600_cast = conv(bias = down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_598, groups = var_115, pad = var_600_pad_0, pad_type = var_600_pad_type_0, strides = var_596, weight = down_blocks_0_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_27_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_5_cast = add(x = var_600_cast, y = inputs_3_cast);
            tensor<int32, [1]> var_604 = const()[name = tensor<string, []>("op_604"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_5_cast = reduce_mean(axes = var_604, keep_dims = var_110, x = inputs_5_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_5_cast = sub(x = inputs_5_cast, y = channels_mean_5_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_5_cast = mul(x = zero_mean_5_cast, y = zero_mean_5_cast);
            tensor<int32, [1]> var_608 = const()[name = tensor<string, []>("op_608"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_609_cast = reduce_mean(axes = var_608, keep_dims = var_110, x = zero_mean_sq_5_cast);
            tensor<fp16, []> var_610_to_fp16 = const()[name = tensor<string, []>("op_610_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_611_cast = add(x = var_609_cast, y = var_610_to_fp16);
            tensor<fp16, []> denom_5_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_5_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_5_cast = rsqrt(epsilon = denom_5_epsilon_0_to_fp16, x = var_611_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_5_cast = mul(x = zero_mean_5_cast, y = denom_5_cast);
            tensor<fp16, [1, 320, 1, 1]> var_615_to_fp16 = const()[name = tensor<string, []>("op_615_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11064128)))];
            tensor<fp16, [2, 320, 1, 4096]> var_616_cast = add(x = out_5_cast, y = var_615_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_618_to_fp16 = const()[name = tensor<string, []>("op_618_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11064832)))];
            tensor<fp16, [2, 320, 1, 4096]> input_29_cast = mul(x = var_616_cast, y = var_618_to_fp16);
            tensor<int32, [2]> var_626 = const()[name = tensor<string, []>("op_626"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_628 = const()[name = tensor<string, []>("op_628"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_630_pad_type_0 = const()[name = tensor<string, []>("op_630_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_630_pad_0 = const()[name = tensor<string, []>("op_630_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2560, 320, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [2560, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11065536)))];
            tensor<fp16, [2560]> down_blocks_0_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12704000)))];
            tensor<fp16, [2, 2560, 1, 4096]> var_630_cast = conv(bias = down_blocks_0_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_628, groups = var_115, pad = var_630_pad_0, pad_type = var_630_pad_type_0, strides = var_626, weight = down_blocks_0_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_29_cast);
            tensor<int32, [2]> var_631_split_sizes_0 = const()[name = tensor<string, []>("op_631_split_sizes_0"), val = tensor<int32, [2]>([1280, 1280])];
            tensor<int32, []> var_631_axis_0 = const()[name = tensor<string, []>("op_631_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 1280, 1, 4096]> var_631_cast_0, tensor<fp16, [2, 1280, 1, 4096]> var_631_cast_1 = split(axis = var_631_axis_0, split_sizes = var_631_split_sizes_0, x = var_630_cast);
            tensor<string, []> var_633_mode_0 = const()[name = tensor<string, []>("op_633_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 1280, 1, 4096]> var_633_cast = gelu(mode = var_633_mode_0, x = var_631_cast_1);
            tensor<fp16, [2, 1280, 1, 4096]> input_31_cast = mul(x = var_631_cast_0, y = var_633_cast);
            tensor<int32, [2]> var_637 = const()[name = tensor<string, []>("op_637"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_639 = const()[name = tensor<string, []>("op_639"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_641_pad_type_0 = const()[name = tensor<string, []>("op_641_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_641_pad_0 = const()[name = tensor<string, []>("op_641_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> down_blocks_0_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12709184)))];
            tensor<fp16, [320]> down_blocks_0_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13528448)))];
            tensor<fp16, [2, 320, 1, 4096]> var_641_cast = conv(bias = down_blocks_0_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_639, groups = var_115, pad = var_641_pad_0, pad_type = var_641_pad_type_0, strides = var_637, weight = down_blocks_0_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_31_cast);
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_15_cast = add(x = var_641_cast, y = inputs_5_cast);
            tensor<int32, [4]> var_643 = const()[name = tensor<string, []>("op_643"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> input_33_cast = reshape(shape = var_643, x = hidden_states_15_cast);
            tensor<int32, [2]> var_647 = const()[name = tensor<string, []>("op_647"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_649 = const()[name = tensor<string, []>("op_649"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_17_pad_type_0 = const()[name = tensor<string, []>("hidden_states_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_17_pad_0 = const()[name = tensor<string, []>("hidden_states_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_0_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_proj_out_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13529152)))];
            tensor<fp16, [320]> down_blocks_0_attentions_0_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_0_proj_out_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13734016)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_17_cast = conv(bias = down_blocks_0_attentions_0_proj_out_bias_to_fp16, dilations = var_649, groups = var_115, pad = hidden_states_17_pad_0, pad_type = hidden_states_17_pad_type_0, strides = var_647, weight = down_blocks_0_attentions_0_proj_out_weight_to_fp16, x = input_33_cast);
            tensor<fp16, [2, 320, 64, 64]> input_35_cast = add(x = hidden_states_17_cast, y = hidden_states_5_cast);
            tensor<int32, [5]> reshape_12_shape_0 = const()[name = tensor<string, []>("reshape_12_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_12_cast = reshape(shape = reshape_12_shape_0, x = input_35_cast);
            tensor<int32, [3]> reduce_mean_9_axes_0 = const()[name = tensor<string, []>("reduce_mean_9_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_9_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_9_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_9_cast = reduce_mean(axes = reduce_mean_9_axes_0, keep_dims = reduce_mean_9_keep_dims_0, x = reshape_12_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_6_cast = sub(x = reshape_12_cast, y = reduce_mean_9_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_3_cast = square(x = sub_6_cast);
            tensor<int32, [3]> reduce_mean_11_axes_0 = const()[name = tensor<string, []>("reduce_mean_11_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_11_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_11_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_11_cast = reduce_mean(axes = reduce_mean_11_axes_0, keep_dims = reduce_mean_11_keep_dims_0, x = square_3_cast);
            tensor<fp16, []> add_6_y_0_to_fp16 = const()[name = tensor<string, []>("add_6_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_6_cast = add(x = reduce_mean_11_cast, y = add_6_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_3_cast = sqrt(x = add_6_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_3_cast = real_div(x = sub_6_cast, y = sqrt_3_cast);
            tensor<int32, [4]> reshape_13_shape_0 = const()[name = tensor<string, []>("reshape_13_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_13_cast = reshape(shape = reshape_13_shape_0, x = real_div_3_cast);
            tensor<fp16, [320]> add_7_mean_0_to_fp16 = const()[name = tensor<string, []>("add_7_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13734720)))];
            tensor<fp16, [320]> add_7_variance_0_to_fp16 = const()[name = tensor<string, []>("add_7_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13735424)))];
            tensor<fp16, [320]> add_7_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_7_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13736128)))];
            tensor<fp16, [320]> add_7_beta_0_to_fp16 = const()[name = tensor<string, []>("add_7_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13736832)))];
            tensor<fp16, []> add_7_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_7_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_7_cast = batch_norm(beta = add_7_beta_0_to_fp16, epsilon = add_7_epsilon_0_to_fp16, gamma = add_7_gamma_0_to_fp16, mean = add_7_mean_0_to_fp16, variance = add_7_variance_0_to_fp16, x = reshape_13_cast);
            tensor<fp16, [2, 320, 64, 64]> input_39_cast = silu(x = add_7_cast);
            tensor<int32, [2]> var_664 = const()[name = tensor<string, []>("op_664"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_666 = const()[name = tensor<string, []>("op_666"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_19_pad_type_0 = const()[name = tensor<string, []>("hidden_states_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_19_pad_0 = const()[name = tensor<string, []>("hidden_states_19_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> down_blocks_0_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13737536)))];
            tensor<fp16, [320]> down_blocks_0_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15580800)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_19_cast = conv(bias = down_blocks_0_resnets_1_conv1_bias_to_fp16, dilations = var_666, groups = var_115, pad = hidden_states_19_pad_0, pad_type = hidden_states_19_pad_type_0, strides = var_664, weight = down_blocks_0_resnets_1_conv1_weight_to_fp16, x = input_39_cast);
            tensor<int32, [2]> var_672 = const()[name = tensor<string, []>("op_672"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_674 = const()[name = tensor<string, []>("op_674"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_3_pad_type_0 = const()[name = tensor<string, []>("temb_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_3_pad_0 = const()[name = tensor<string, []>("temb_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> down_blocks_0_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15581504)))];
            tensor<fp16, [320]> down_blocks_0_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16400768)))];
            tensor<fp16, [2, 320, 1, 1]> temb_3_cast = conv(bias = down_blocks_0_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_674, groups = var_115, pad = temb_3_pad_0, pad_type = temb_3_pad_type_0, strides = var_672, weight = down_blocks_0_resnets_1_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 320, 64, 64]> input_43_cast = add(x = hidden_states_19_cast, y = temb_3_cast);
            tensor<int32, [5]> reshape_16_shape_0 = const()[name = tensor<string, []>("reshape_16_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_16_cast = reshape(shape = reshape_16_shape_0, x = input_43_cast);
            tensor<int32, [3]> reduce_mean_12_axes_0 = const()[name = tensor<string, []>("reduce_mean_12_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_12_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_12_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_12_cast = reduce_mean(axes = reduce_mean_12_axes_0, keep_dims = reduce_mean_12_keep_dims_0, x = reshape_16_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_8_cast = sub(x = reshape_16_cast, y = reduce_mean_12_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_4_cast = square(x = sub_8_cast);
            tensor<int32, [3]> reduce_mean_14_axes_0 = const()[name = tensor<string, []>("reduce_mean_14_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_14_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_14_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_14_cast = reduce_mean(axes = reduce_mean_14_axes_0, keep_dims = reduce_mean_14_keep_dims_0, x = square_4_cast);
            tensor<fp16, []> add_8_y_0_to_fp16 = const()[name = tensor<string, []>("add_8_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_8_cast = add(x = reduce_mean_14_cast, y = add_8_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_4_cast = sqrt(x = add_8_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_4_cast = real_div(x = sub_8_cast, y = sqrt_4_cast);
            tensor<int32, [4]> reshape_17_shape_0 = const()[name = tensor<string, []>("reshape_17_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_17_cast = reshape(shape = reshape_17_shape_0, x = real_div_4_cast);
            tensor<fp16, [320]> add_9_mean_0_to_fp16 = const()[name = tensor<string, []>("add_9_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16401472)))];
            tensor<fp16, [320]> add_9_variance_0_to_fp16 = const()[name = tensor<string, []>("add_9_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16402176)))];
            tensor<fp16, [320]> add_9_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_9_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16402880)))];
            tensor<fp16, [320]> add_9_beta_0_to_fp16 = const()[name = tensor<string, []>("add_9_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16403584)))];
            tensor<fp16, []> add_9_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_9_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_9_cast = batch_norm(beta = add_9_beta_0_to_fp16, epsilon = add_9_epsilon_0_to_fp16, gamma = add_9_gamma_0_to_fp16, mean = add_9_mean_0_to_fp16, variance = add_9_variance_0_to_fp16, x = reshape_17_cast);
            tensor<fp16, [2, 320, 64, 64]> input_47_cast = silu(x = add_9_cast);
            tensor<int32, [2]> var_684 = const()[name = tensor<string, []>("op_684"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_686 = const()[name = tensor<string, []>("op_686"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_21_pad_type_0 = const()[name = tensor<string, []>("hidden_states_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_21_pad_0 = const()[name = tensor<string, []>("hidden_states_21_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> down_blocks_0_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16404288)))];
            tensor<fp16, [320]> down_blocks_0_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18247552)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_21_cast = conv(bias = down_blocks_0_resnets_1_conv2_bias_to_fp16, dilations = var_686, groups = var_115, pad = hidden_states_21_pad_0, pad_type = hidden_states_21_pad_type_0, strides = var_684, weight = down_blocks_0_resnets_1_conv2_weight_to_fp16, x = input_47_cast);
            tensor<fp16, [2, 320, 64, 64]> hidden_states_23_cast = add(x = input_35_cast, y = hidden_states_21_cast);
            tensor<int32, [5]> reshape_20_shape_0 = const()[name = tensor<string, []>("reshape_20_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_20_cast = reshape(shape = reshape_20_shape_0, x = hidden_states_23_cast);
            tensor<int32, [3]> reduce_mean_15_axes_0 = const()[name = tensor<string, []>("reduce_mean_15_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_15_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_15_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_15_cast = reduce_mean(axes = reduce_mean_15_axes_0, keep_dims = reduce_mean_15_keep_dims_0, x = reshape_20_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_10_cast = sub(x = reshape_20_cast, y = reduce_mean_15_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_5_cast = square(x = sub_10_cast);
            tensor<int32, [3]> reduce_mean_17_axes_0 = const()[name = tensor<string, []>("reduce_mean_17_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_17_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_17_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_17_cast = reduce_mean(axes = reduce_mean_17_axes_0, keep_dims = reduce_mean_17_keep_dims_0, x = square_5_cast);
            tensor<fp16, []> add_10_y_0_to_fp16 = const()[name = tensor<string, []>("add_10_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_10_cast = add(x = reduce_mean_17_cast, y = add_10_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_5_cast = sqrt(x = add_10_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_5_cast = real_div(x = sub_10_cast, y = sqrt_5_cast);
            tensor<int32, [4]> reshape_21_shape_0 = const()[name = tensor<string, []>("reshape_21_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_21_cast = reshape(shape = reshape_21_shape_0, x = real_div_5_cast);
            tensor<fp16, [320]> add_11_mean_0_to_fp16 = const()[name = tensor<string, []>("add_11_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18248256)))];
            tensor<fp16, [320]> add_11_variance_0_to_fp16 = const()[name = tensor<string, []>("add_11_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18248960)))];
            tensor<fp16, [320]> add_11_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_11_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18249664)))];
            tensor<fp16, [320]> add_11_beta_0_to_fp16 = const()[name = tensor<string, []>("add_11_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18250368)))];
            tensor<fp16, []> add_11_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_11_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_11_cast = batch_norm(beta = add_11_beta_0_to_fp16, epsilon = add_11_epsilon_0_to_fp16, gamma = add_11_gamma_0_to_fp16, mean = add_11_mean_0_to_fp16, variance = add_11_variance_0_to_fp16, x = reshape_21_cast);
            tensor<int32, [2]> var_706 = const()[name = tensor<string, []>("op_706"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_708 = const()[name = tensor<string, []>("op_708"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_25_pad_type_0 = const()[name = tensor<string, []>("hidden_states_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_25_pad_0 = const()[name = tensor<string, []>("hidden_states_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_proj_in_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18251072)))];
            tensor<fp16, [320]> down_blocks_0_attentions_1_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_proj_in_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18455936)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_25_cast = conv(bias = down_blocks_0_attentions_1_proj_in_bias_to_fp16, dilations = var_708, groups = var_115, pad = hidden_states_25_pad_0, pad_type = hidden_states_25_pad_type_0, strides = var_706, weight = down_blocks_0_attentions_1_proj_in_weight_to_fp16, x = add_11_cast);
            tensor<int32, [4]> var_713 = const()[name = tensor<string, []>("op_713"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<fp16, [2, 320, 1, 4096]> inputs_7_cast = reshape(shape = var_713, x = hidden_states_25_cast);
            tensor<int32, [1]> var_723 = const()[name = tensor<string, []>("op_723"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_7_cast = reduce_mean(axes = var_723, keep_dims = var_110, x = inputs_7_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_7_cast = sub(x = inputs_7_cast, y = channels_mean_7_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_7_cast = mul(x = zero_mean_7_cast, y = zero_mean_7_cast);
            tensor<int32, [1]> var_727 = const()[name = tensor<string, []>("op_727"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_728_cast = reduce_mean(axes = var_727, keep_dims = var_110, x = zero_mean_sq_7_cast);
            tensor<fp16, []> var_729_to_fp16 = const()[name = tensor<string, []>("op_729_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_730_cast = add(x = var_728_cast, y = var_729_to_fp16);
            tensor<fp16, []> denom_7_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_7_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_7_cast = rsqrt(epsilon = denom_7_epsilon_0_to_fp16, x = var_730_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_7_cast = mul(x = zero_mean_7_cast, y = denom_7_cast);
            tensor<fp16, [1, 320, 1, 1]> var_734_to_fp16 = const()[name = tensor<string, []>("op_734_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18456640)))];
            tensor<fp16, [2, 320, 1, 4096]> var_735_cast = add(x = out_7_cast, y = var_734_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_737_to_fp16 = const()[name = tensor<string, []>("op_737_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18457344)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_27_cast = mul(x = var_735_cast, y = var_737_to_fp16);
            tensor<int32, [2]> var_744 = const()[name = tensor<string, []>("op_744"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_746 = const()[name = tensor<string, []>("op_746"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_5_pad_type_0 = const()[name = tensor<string, []>("q_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_5_pad_0 = const()[name = tensor<string, []>("q_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18458048)))];
            tensor<fp16, [2, 320, 1, 4096]> q_5_cast = conv(dilations = var_746, groups = var_115, pad = q_5_pad_0, pad_type = q_5_pad_type_0, strides = var_744, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_27_cast);
            tensor<int32, [2]> var_750 = const()[name = tensor<string, []>("op_750"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_752 = const()[name = tensor<string, []>("op_752"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_9_pad_type_0 = const()[name = tensor<string, []>("k_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_9_pad_0 = const()[name = tensor<string, []>("k_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18662912)))];
            tensor<fp16, [2, 320, 1, 4096]> k_9_cast = conv(dilations = var_752, groups = var_115, pad = k_9_pad_0, pad_type = k_9_pad_type_0, strides = var_750, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_27_cast);
            tensor<int32, [2]> var_756 = const()[name = tensor<string, []>("op_756"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_758 = const()[name = tensor<string, []>("op_758"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_5_pad_type_0 = const()[name = tensor<string, []>("v_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_5_pad_0 = const()[name = tensor<string, []>("v_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18867776)))];
            tensor<fp16, [2, 320, 1, 4096]> v_5_cast = conv(dilations = var_758, groups = var_115, pad = v_5_pad_0, pad_type = v_5_pad_type_0, strides = var_756, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_27_cast);
            tensor<int32, [4]> var_762_begin_0 = const()[name = tensor<string, []>("op_762_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_762_end_0 = const()[name = tensor<string, []>("op_762_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_762_end_mask_0 = const()[name = tensor<string, []>("op_762_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_762_cast = slice_by_index(begin = var_762_begin_0, end = var_762_end_0, end_mask = var_762_end_mask_0, x = q_5_cast);
            tensor<int32, [4]> var_766_begin_0 = const()[name = tensor<string, []>("op_766_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_766_end_0 = const()[name = tensor<string, []>("op_766_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_766_end_mask_0 = const()[name = tensor<string, []>("op_766_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_766_cast = slice_by_index(begin = var_766_begin_0, end = var_766_end_0, end_mask = var_766_end_mask_0, x = q_5_cast);
            tensor<int32, [4]> var_770_begin_0 = const()[name = tensor<string, []>("op_770_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_770_end_0 = const()[name = tensor<string, []>("op_770_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_770_end_mask_0 = const()[name = tensor<string, []>("op_770_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_770_cast = slice_by_index(begin = var_770_begin_0, end = var_770_end_0, end_mask = var_770_end_mask_0, x = q_5_cast);
            tensor<int32, [4]> var_774_begin_0 = const()[name = tensor<string, []>("op_774_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_774_end_0 = const()[name = tensor<string, []>("op_774_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_774_end_mask_0 = const()[name = tensor<string, []>("op_774_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_774_cast = slice_by_index(begin = var_774_begin_0, end = var_774_end_0, end_mask = var_774_end_mask_0, x = q_5_cast);
            tensor<int32, [4]> var_778_begin_0 = const()[name = tensor<string, []>("op_778_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_778_end_0 = const()[name = tensor<string, []>("op_778_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_778_end_mask_0 = const()[name = tensor<string, []>("op_778_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_778_cast = slice_by_index(begin = var_778_begin_0, end = var_778_end_0, end_mask = var_778_end_mask_0, x = q_5_cast);
            tensor<int32, [4]> var_782_begin_0 = const()[name = tensor<string, []>("op_782_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_782_end_0 = const()[name = tensor<string, []>("op_782_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_782_end_mask_0 = const()[name = tensor<string, []>("op_782_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_782_cast = slice_by_index(begin = var_782_begin_0, end = var_782_end_0, end_mask = var_782_end_mask_0, x = q_5_cast);
            tensor<int32, [4]> var_786_begin_0 = const()[name = tensor<string, []>("op_786_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_786_end_0 = const()[name = tensor<string, []>("op_786_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_786_end_mask_0 = const()[name = tensor<string, []>("op_786_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_786_cast = slice_by_index(begin = var_786_begin_0, end = var_786_end_0, end_mask = var_786_end_mask_0, x = q_5_cast);
            tensor<int32, [4]> var_790_begin_0 = const()[name = tensor<string, []>("op_790_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_790_end_0 = const()[name = tensor<string, []>("op_790_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_790_end_mask_0 = const()[name = tensor<string, []>("op_790_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_790_cast = slice_by_index(begin = var_790_begin_0, end = var_790_end_0, end_mask = var_790_end_mask_0, x = q_5_cast);
            tensor<int32, [4]> k_11_perm_0 = const()[name = tensor<string, []>("k_11_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_797_begin_0 = const()[name = tensor<string, []>("op_797_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_797_end_0 = const()[name = tensor<string, []>("op_797_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 40])];
            tensor<bool, [4]> var_797_end_mask_0 = const()[name = tensor<string, []>("op_797_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 320]> transpose_29 = transpose(perm = k_11_perm_0, x = k_9_cast);
            tensor<fp16, [2, 4096, 1, 40]> var_797_cast = slice_by_index(begin = var_797_begin_0, end = var_797_end_0, end_mask = var_797_end_mask_0, x = transpose_29);
            tensor<int32, [4]> var_801_begin_0 = const()[name = tensor<string, []>("op_801_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 40])];
            tensor<int32, [4]> var_801_end_0 = const()[name = tensor<string, []>("op_801_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 80])];
            tensor<bool, [4]> var_801_end_mask_0 = const()[name = tensor<string, []>("op_801_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_801_cast = slice_by_index(begin = var_801_begin_0, end = var_801_end_0, end_mask = var_801_end_mask_0, x = transpose_29);
            tensor<int32, [4]> var_805_begin_0 = const()[name = tensor<string, []>("op_805_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_805_end_0 = const()[name = tensor<string, []>("op_805_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 120])];
            tensor<bool, [4]> var_805_end_mask_0 = const()[name = tensor<string, []>("op_805_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_805_cast = slice_by_index(begin = var_805_begin_0, end = var_805_end_0, end_mask = var_805_end_mask_0, x = transpose_29);
            tensor<int32, [4]> var_809_begin_0 = const()[name = tensor<string, []>("op_809_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 120])];
            tensor<int32, [4]> var_809_end_0 = const()[name = tensor<string, []>("op_809_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 160])];
            tensor<bool, [4]> var_809_end_mask_0 = const()[name = tensor<string, []>("op_809_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_809_cast = slice_by_index(begin = var_809_begin_0, end = var_809_end_0, end_mask = var_809_end_mask_0, x = transpose_29);
            tensor<int32, [4]> var_813_begin_0 = const()[name = tensor<string, []>("op_813_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_813_end_0 = const()[name = tensor<string, []>("op_813_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 200])];
            tensor<bool, [4]> var_813_end_mask_0 = const()[name = tensor<string, []>("op_813_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_813_cast = slice_by_index(begin = var_813_begin_0, end = var_813_end_0, end_mask = var_813_end_mask_0, x = transpose_29);
            tensor<int32, [4]> var_817_begin_0 = const()[name = tensor<string, []>("op_817_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 200])];
            tensor<int32, [4]> var_817_end_0 = const()[name = tensor<string, []>("op_817_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 240])];
            tensor<bool, [4]> var_817_end_mask_0 = const()[name = tensor<string, []>("op_817_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_817_cast = slice_by_index(begin = var_817_begin_0, end = var_817_end_0, end_mask = var_817_end_mask_0, x = transpose_29);
            tensor<int32, [4]> var_821_begin_0 = const()[name = tensor<string, []>("op_821_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_821_end_0 = const()[name = tensor<string, []>("op_821_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 280])];
            tensor<bool, [4]> var_821_end_mask_0 = const()[name = tensor<string, []>("op_821_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_821_cast = slice_by_index(begin = var_821_begin_0, end = var_821_end_0, end_mask = var_821_end_mask_0, x = transpose_29);
            tensor<int32, [4]> var_825_begin_0 = const()[name = tensor<string, []>("op_825_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 280])];
            tensor<int32, [4]> var_825_end_0 = const()[name = tensor<string, []>("op_825_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 320])];
            tensor<bool, [4]> var_825_end_mask_0 = const()[name = tensor<string, []>("op_825_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_825_cast = slice_by_index(begin = var_825_begin_0, end = var_825_end_0, end_mask = var_825_end_mask_0, x = transpose_29);
            tensor<int32, [4]> var_827_begin_0 = const()[name = tensor<string, []>("op_827_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_827_end_0 = const()[name = tensor<string, []>("op_827_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_827_end_mask_0 = const()[name = tensor<string, []>("op_827_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_827_cast = slice_by_index(begin = var_827_begin_0, end = var_827_end_0, end_mask = var_827_end_mask_0, x = v_5_cast);
            tensor<int32, [4]> var_831_begin_0 = const()[name = tensor<string, []>("op_831_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_831_end_0 = const()[name = tensor<string, []>("op_831_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_831_end_mask_0 = const()[name = tensor<string, []>("op_831_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_831_cast = slice_by_index(begin = var_831_begin_0, end = var_831_end_0, end_mask = var_831_end_mask_0, x = v_5_cast);
            tensor<int32, [4]> var_835_begin_0 = const()[name = tensor<string, []>("op_835_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_835_end_0 = const()[name = tensor<string, []>("op_835_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_835_end_mask_0 = const()[name = tensor<string, []>("op_835_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_835_cast = slice_by_index(begin = var_835_begin_0, end = var_835_end_0, end_mask = var_835_end_mask_0, x = v_5_cast);
            tensor<int32, [4]> var_839_begin_0 = const()[name = tensor<string, []>("op_839_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_839_end_0 = const()[name = tensor<string, []>("op_839_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_839_end_mask_0 = const()[name = tensor<string, []>("op_839_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_839_cast = slice_by_index(begin = var_839_begin_0, end = var_839_end_0, end_mask = var_839_end_mask_0, x = v_5_cast);
            tensor<int32, [4]> var_843_begin_0 = const()[name = tensor<string, []>("op_843_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_843_end_0 = const()[name = tensor<string, []>("op_843_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_843_end_mask_0 = const()[name = tensor<string, []>("op_843_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_843_cast = slice_by_index(begin = var_843_begin_0, end = var_843_end_0, end_mask = var_843_end_mask_0, x = v_5_cast);
            tensor<int32, [4]> var_847_begin_0 = const()[name = tensor<string, []>("op_847_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_847_end_0 = const()[name = tensor<string, []>("op_847_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_847_end_mask_0 = const()[name = tensor<string, []>("op_847_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_847_cast = slice_by_index(begin = var_847_begin_0, end = var_847_end_0, end_mask = var_847_end_mask_0, x = v_5_cast);
            tensor<int32, [4]> var_851_begin_0 = const()[name = tensor<string, []>("op_851_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_851_end_0 = const()[name = tensor<string, []>("op_851_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_851_end_mask_0 = const()[name = tensor<string, []>("op_851_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_851_cast = slice_by_index(begin = var_851_begin_0, end = var_851_end_0, end_mask = var_851_end_mask_0, x = v_5_cast);
            tensor<int32, [4]> var_855_begin_0 = const()[name = tensor<string, []>("op_855_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_855_end_0 = const()[name = tensor<string, []>("op_855_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_855_end_mask_0 = const()[name = tensor<string, []>("op_855_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_855_cast = slice_by_index(begin = var_855_begin_0, end = var_855_end_0, end_mask = var_855_end_mask_0, x = v_5_cast);
            tensor<string, []> var_859_equation_0 = const()[name = tensor<string, []>("op_859_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_859_cast = einsum(equation = var_859_equation_0, values = (var_797_cast, var_762_cast));
            tensor<fp16, []> var_860_to_fp16 = const()[name = tensor<string, []>("op_860_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_33_cast = mul(x = var_859_cast, y = var_860_to_fp16);
            tensor<string, []> var_863_equation_0 = const()[name = tensor<string, []>("op_863_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_863_cast = einsum(equation = var_863_equation_0, values = (var_801_cast, var_766_cast));
            tensor<fp16, []> var_864_to_fp16 = const()[name = tensor<string, []>("op_864_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_35_cast = mul(x = var_863_cast, y = var_864_to_fp16);
            tensor<string, []> var_867_equation_0 = const()[name = tensor<string, []>("op_867_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_867_cast = einsum(equation = var_867_equation_0, values = (var_805_cast, var_770_cast));
            tensor<fp16, []> var_868_to_fp16 = const()[name = tensor<string, []>("op_868_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_37_cast = mul(x = var_867_cast, y = var_868_to_fp16);
            tensor<string, []> var_871_equation_0 = const()[name = tensor<string, []>("op_871_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_871_cast = einsum(equation = var_871_equation_0, values = (var_809_cast, var_774_cast));
            tensor<fp16, []> var_872_to_fp16 = const()[name = tensor<string, []>("op_872_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_39_cast = mul(x = var_871_cast, y = var_872_to_fp16);
            tensor<string, []> var_875_equation_0 = const()[name = tensor<string, []>("op_875_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_875_cast = einsum(equation = var_875_equation_0, values = (var_813_cast, var_778_cast));
            tensor<fp16, []> var_876_to_fp16 = const()[name = tensor<string, []>("op_876_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_41_cast = mul(x = var_875_cast, y = var_876_to_fp16);
            tensor<string, []> var_879_equation_0 = const()[name = tensor<string, []>("op_879_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_879_cast = einsum(equation = var_879_equation_0, values = (var_817_cast, var_782_cast));
            tensor<fp16, []> var_880_to_fp16 = const()[name = tensor<string, []>("op_880_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_43_cast = mul(x = var_879_cast, y = var_880_to_fp16);
            tensor<string, []> var_883_equation_0 = const()[name = tensor<string, []>("op_883_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_883_cast = einsum(equation = var_883_equation_0, values = (var_821_cast, var_786_cast));
            tensor<fp16, []> var_884_to_fp16 = const()[name = tensor<string, []>("op_884_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_45_cast = mul(x = var_883_cast, y = var_884_to_fp16);
            tensor<string, []> var_887_equation_0 = const()[name = tensor<string, []>("op_887_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_887_cast = einsum(equation = var_887_equation_0, values = (var_825_cast, var_790_cast));
            tensor<fp16, []> var_888_to_fp16 = const()[name = tensor<string, []>("op_888_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_47_cast = mul(x = var_887_cast, y = var_888_to_fp16);
            tensor<fp16, [2, 4096, 1, 4096]> var_890_cast = softmax(axis = var_115, x = aw_33_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_891_cast = softmax(axis = var_115, x = aw_35_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_892_cast = softmax(axis = var_115, x = aw_37_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_893_cast = softmax(axis = var_115, x = aw_39_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_894_cast = softmax(axis = var_115, x = aw_41_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_895_cast = softmax(axis = var_115, x = aw_43_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_896_cast = softmax(axis = var_115, x = aw_45_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_897_cast = softmax(axis = var_115, x = aw_47_cast);
            tensor<string, []> var_899_equation_0 = const()[name = tensor<string, []>("op_899_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_899_cast = einsum(equation = var_899_equation_0, values = (var_827_cast, var_890_cast));
            tensor<string, []> var_901_equation_0 = const()[name = tensor<string, []>("op_901_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_901_cast = einsum(equation = var_901_equation_0, values = (var_831_cast, var_891_cast));
            tensor<string, []> var_903_equation_0 = const()[name = tensor<string, []>("op_903_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_903_cast = einsum(equation = var_903_equation_0, values = (var_835_cast, var_892_cast));
            tensor<string, []> var_905_equation_0 = const()[name = tensor<string, []>("op_905_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_905_cast = einsum(equation = var_905_equation_0, values = (var_839_cast, var_893_cast));
            tensor<string, []> var_907_equation_0 = const()[name = tensor<string, []>("op_907_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_907_cast = einsum(equation = var_907_equation_0, values = (var_843_cast, var_894_cast));
            tensor<string, []> var_909_equation_0 = const()[name = tensor<string, []>("op_909_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_909_cast = einsum(equation = var_909_equation_0, values = (var_847_cast, var_895_cast));
            tensor<string, []> var_911_equation_0 = const()[name = tensor<string, []>("op_911_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_911_cast = einsum(equation = var_911_equation_0, values = (var_851_cast, var_896_cast));
            tensor<string, []> var_913_equation_0 = const()[name = tensor<string, []>("op_913_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_913_cast = einsum(equation = var_913_equation_0, values = (var_855_cast, var_897_cast));
            tensor<bool, []> input_51_interleave_0 = const()[name = tensor<string, []>("input_51_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_51_cast = concat(axis = var_115, interleave = input_51_interleave_0, values = (var_899_cast, var_901_cast, var_903_cast, var_905_cast, var_907_cast, var_909_cast, var_911_cast, var_913_cast));
            tensor<int32, [2]> var_919 = const()[name = tensor<string, []>("op_919"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_921 = const()[name = tensor<string, []>("op_921"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_923_pad_type_0 = const()[name = tensor<string, []>("op_923_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_923_pad_0 = const()[name = tensor<string, []>("op_923_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19072640)))];
            tensor<fp16, [320]> down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19277504)))];
            tensor<fp16, [2, 320, 1, 4096]> var_923_cast = conv(bias = down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_921, groups = var_115, pad = var_923_pad_0, pad_type = var_923_pad_type_0, strides = var_919, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_51_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_9_cast = add(x = var_923_cast, y = inputs_7_cast);
            tensor<int32, [1]> var_927 = const()[name = tensor<string, []>("op_927"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_9_cast = reduce_mean(axes = var_927, keep_dims = var_110, x = inputs_9_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_9_cast = sub(x = inputs_9_cast, y = channels_mean_9_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_9_cast = mul(x = zero_mean_9_cast, y = zero_mean_9_cast);
            tensor<int32, [1]> var_931 = const()[name = tensor<string, []>("op_931"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_932_cast = reduce_mean(axes = var_931, keep_dims = var_110, x = zero_mean_sq_9_cast);
            tensor<fp16, []> var_933_to_fp16 = const()[name = tensor<string, []>("op_933_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_934_cast = add(x = var_932_cast, y = var_933_to_fp16);
            tensor<fp16, []> denom_9_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_9_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_9_cast = rsqrt(epsilon = denom_9_epsilon_0_to_fp16, x = var_934_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_9_cast = mul(x = zero_mean_9_cast, y = denom_9_cast);
            tensor<fp16, [1, 320, 1, 1]> var_938_to_fp16 = const()[name = tensor<string, []>("op_938_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19278208)))];
            tensor<fp16, [2, 320, 1, 4096]> var_939_cast = add(x = out_9_cast, y = var_938_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_941_to_fp16 = const()[name = tensor<string, []>("op_941_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19278912)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_29_cast = mul(x = var_939_cast, y = var_941_to_fp16);
            tensor<int32, [2]> var_948 = const()[name = tensor<string, []>("op_948"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_950 = const()[name = tensor<string, []>("op_950"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_7_pad_type_0 = const()[name = tensor<string, []>("q_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_7_pad_0 = const()[name = tensor<string, []>("q_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19279616)))];
            tensor<fp16, [2, 320, 1, 4096]> q_7_cast = conv(dilations = var_950, groups = var_115, pad = q_7_pad_0, pad_type = q_7_pad_type_0, strides = var_948, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_29_cast);
            tensor<int32, [2]> var_954 = const()[name = tensor<string, []>("op_954"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_956 = const()[name = tensor<string, []>("op_956"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_13_pad_type_0 = const()[name = tensor<string, []>("k_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_13_pad_0 = const()[name = tensor<string, []>("k_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 768, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [320, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19484480)))];
            tensor<fp16, [2, 320, 1, 77]> k_13_cast = conv(dilations = var_956, groups = var_115, pad = k_13_pad_0, pad_type = k_13_pad_type_0, strides = var_954, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_960 = const()[name = tensor<string, []>("op_960"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_962 = const()[name = tensor<string, []>("op_962"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_7_pad_type_0 = const()[name = tensor<string, []>("v_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_7_pad_0 = const()[name = tensor<string, []>("v_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 768, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [320, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19976064)))];
            tensor<fp16, [2, 320, 1, 77]> v_7_cast = conv(dilations = var_962, groups = var_115, pad = v_7_pad_0, pad_type = v_7_pad_type_0, strides = var_960, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_966_begin_0 = const()[name = tensor<string, []>("op_966_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_966_end_0 = const()[name = tensor<string, []>("op_966_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_966_end_mask_0 = const()[name = tensor<string, []>("op_966_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_966_cast = slice_by_index(begin = var_966_begin_0, end = var_966_end_0, end_mask = var_966_end_mask_0, x = q_7_cast);
            tensor<int32, [4]> var_970_begin_0 = const()[name = tensor<string, []>("op_970_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_970_end_0 = const()[name = tensor<string, []>("op_970_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_970_end_mask_0 = const()[name = tensor<string, []>("op_970_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_970_cast = slice_by_index(begin = var_970_begin_0, end = var_970_end_0, end_mask = var_970_end_mask_0, x = q_7_cast);
            tensor<int32, [4]> var_974_begin_0 = const()[name = tensor<string, []>("op_974_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_974_end_0 = const()[name = tensor<string, []>("op_974_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_974_end_mask_0 = const()[name = tensor<string, []>("op_974_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_974_cast = slice_by_index(begin = var_974_begin_0, end = var_974_end_0, end_mask = var_974_end_mask_0, x = q_7_cast);
            tensor<int32, [4]> var_978_begin_0 = const()[name = tensor<string, []>("op_978_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_978_end_0 = const()[name = tensor<string, []>("op_978_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_978_end_mask_0 = const()[name = tensor<string, []>("op_978_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_978_cast = slice_by_index(begin = var_978_begin_0, end = var_978_end_0, end_mask = var_978_end_mask_0, x = q_7_cast);
            tensor<int32, [4]> var_982_begin_0 = const()[name = tensor<string, []>("op_982_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_982_end_0 = const()[name = tensor<string, []>("op_982_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_982_end_mask_0 = const()[name = tensor<string, []>("op_982_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_982_cast = slice_by_index(begin = var_982_begin_0, end = var_982_end_0, end_mask = var_982_end_mask_0, x = q_7_cast);
            tensor<int32, [4]> var_986_begin_0 = const()[name = tensor<string, []>("op_986_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_986_end_0 = const()[name = tensor<string, []>("op_986_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_986_end_mask_0 = const()[name = tensor<string, []>("op_986_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_986_cast = slice_by_index(begin = var_986_begin_0, end = var_986_end_0, end_mask = var_986_end_mask_0, x = q_7_cast);
            tensor<int32, [4]> var_990_begin_0 = const()[name = tensor<string, []>("op_990_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_990_end_0 = const()[name = tensor<string, []>("op_990_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_990_end_mask_0 = const()[name = tensor<string, []>("op_990_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_990_cast = slice_by_index(begin = var_990_begin_0, end = var_990_end_0, end_mask = var_990_end_mask_0, x = q_7_cast);
            tensor<int32, [4]> var_994_begin_0 = const()[name = tensor<string, []>("op_994_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_994_end_0 = const()[name = tensor<string, []>("op_994_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_994_end_mask_0 = const()[name = tensor<string, []>("op_994_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_994_cast = slice_by_index(begin = var_994_begin_0, end = var_994_end_0, end_mask = var_994_end_mask_0, x = q_7_cast);
            tensor<int32, [4]> k_15_perm_0 = const()[name = tensor<string, []>("k_15_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_1001_begin_0 = const()[name = tensor<string, []>("op_1001_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1001_end_0 = const()[name = tensor<string, []>("op_1001_end_0"), val = tensor<int32, [4]>([2, 77, 1, 40])];
            tensor<bool, [4]> var_1001_end_mask_0 = const()[name = tensor<string, []>("op_1001_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 320]> transpose_28 = transpose(perm = k_15_perm_0, x = k_13_cast);
            tensor<fp16, [2, 77, 1, 40]> var_1001_cast = slice_by_index(begin = var_1001_begin_0, end = var_1001_end_0, end_mask = var_1001_end_mask_0, x = transpose_28);
            tensor<int32, [4]> var_1005_begin_0 = const()[name = tensor<string, []>("op_1005_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 40])];
            tensor<int32, [4]> var_1005_end_0 = const()[name = tensor<string, []>("op_1005_end_0"), val = tensor<int32, [4]>([2, 77, 1, 80])];
            tensor<bool, [4]> var_1005_end_mask_0 = const()[name = tensor<string, []>("op_1005_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_1005_cast = slice_by_index(begin = var_1005_begin_0, end = var_1005_end_0, end_mask = var_1005_end_mask_0, x = transpose_28);
            tensor<int32, [4]> var_1009_begin_0 = const()[name = tensor<string, []>("op_1009_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_1009_end_0 = const()[name = tensor<string, []>("op_1009_end_0"), val = tensor<int32, [4]>([2, 77, 1, 120])];
            tensor<bool, [4]> var_1009_end_mask_0 = const()[name = tensor<string, []>("op_1009_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_1009_cast = slice_by_index(begin = var_1009_begin_0, end = var_1009_end_0, end_mask = var_1009_end_mask_0, x = transpose_28);
            tensor<int32, [4]> var_1013_begin_0 = const()[name = tensor<string, []>("op_1013_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 120])];
            tensor<int32, [4]> var_1013_end_0 = const()[name = tensor<string, []>("op_1013_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_1013_end_mask_0 = const()[name = tensor<string, []>("op_1013_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_1013_cast = slice_by_index(begin = var_1013_begin_0, end = var_1013_end_0, end_mask = var_1013_end_mask_0, x = transpose_28);
            tensor<int32, [4]> var_1017_begin_0 = const()[name = tensor<string, []>("op_1017_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_1017_end_0 = const()[name = tensor<string, []>("op_1017_end_0"), val = tensor<int32, [4]>([2, 77, 1, 200])];
            tensor<bool, [4]> var_1017_end_mask_0 = const()[name = tensor<string, []>("op_1017_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_1017_cast = slice_by_index(begin = var_1017_begin_0, end = var_1017_end_0, end_mask = var_1017_end_mask_0, x = transpose_28);
            tensor<int32, [4]> var_1021_begin_0 = const()[name = tensor<string, []>("op_1021_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 200])];
            tensor<int32, [4]> var_1021_end_0 = const()[name = tensor<string, []>("op_1021_end_0"), val = tensor<int32, [4]>([2, 77, 1, 240])];
            tensor<bool, [4]> var_1021_end_mask_0 = const()[name = tensor<string, []>("op_1021_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_1021_cast = slice_by_index(begin = var_1021_begin_0, end = var_1021_end_0, end_mask = var_1021_end_mask_0, x = transpose_28);
            tensor<int32, [4]> var_1025_begin_0 = const()[name = tensor<string, []>("op_1025_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_1025_end_0 = const()[name = tensor<string, []>("op_1025_end_0"), val = tensor<int32, [4]>([2, 77, 1, 280])];
            tensor<bool, [4]> var_1025_end_mask_0 = const()[name = tensor<string, []>("op_1025_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_1025_cast = slice_by_index(begin = var_1025_begin_0, end = var_1025_end_0, end_mask = var_1025_end_mask_0, x = transpose_28);
            tensor<int32, [4]> var_1029_begin_0 = const()[name = tensor<string, []>("op_1029_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 280])];
            tensor<int32, [4]> var_1029_end_0 = const()[name = tensor<string, []>("op_1029_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_1029_end_mask_0 = const()[name = tensor<string, []>("op_1029_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_1029_cast = slice_by_index(begin = var_1029_begin_0, end = var_1029_end_0, end_mask = var_1029_end_mask_0, x = transpose_28);
            tensor<int32, [4]> var_1031_begin_0 = const()[name = tensor<string, []>("op_1031_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1031_end_0 = const()[name = tensor<string, []>("op_1031_end_0"), val = tensor<int32, [4]>([2, 40, 1, 77])];
            tensor<bool, [4]> var_1031_end_mask_0 = const()[name = tensor<string, []>("op_1031_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_1031_cast = slice_by_index(begin = var_1031_begin_0, end = var_1031_end_0, end_mask = var_1031_end_mask_0, x = v_7_cast);
            tensor<int32, [4]> var_1035_begin_0 = const()[name = tensor<string, []>("op_1035_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_1035_end_0 = const()[name = tensor<string, []>("op_1035_end_0"), val = tensor<int32, [4]>([2, 80, 1, 77])];
            tensor<bool, [4]> var_1035_end_mask_0 = const()[name = tensor<string, []>("op_1035_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_1035_cast = slice_by_index(begin = var_1035_begin_0, end = var_1035_end_0, end_mask = var_1035_end_mask_0, x = v_7_cast);
            tensor<int32, [4]> var_1039_begin_0 = const()[name = tensor<string, []>("op_1039_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_1039_end_0 = const()[name = tensor<string, []>("op_1039_end_0"), val = tensor<int32, [4]>([2, 120, 1, 77])];
            tensor<bool, [4]> var_1039_end_mask_0 = const()[name = tensor<string, []>("op_1039_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_1039_cast = slice_by_index(begin = var_1039_begin_0, end = var_1039_end_0, end_mask = var_1039_end_mask_0, x = v_7_cast);
            tensor<int32, [4]> var_1043_begin_0 = const()[name = tensor<string, []>("op_1043_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_1043_end_0 = const()[name = tensor<string, []>("op_1043_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_1043_end_mask_0 = const()[name = tensor<string, []>("op_1043_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_1043_cast = slice_by_index(begin = var_1043_begin_0, end = var_1043_end_0, end_mask = var_1043_end_mask_0, x = v_7_cast);
            tensor<int32, [4]> var_1047_begin_0 = const()[name = tensor<string, []>("op_1047_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_1047_end_0 = const()[name = tensor<string, []>("op_1047_end_0"), val = tensor<int32, [4]>([2, 200, 1, 77])];
            tensor<bool, [4]> var_1047_end_mask_0 = const()[name = tensor<string, []>("op_1047_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_1047_cast = slice_by_index(begin = var_1047_begin_0, end = var_1047_end_0, end_mask = var_1047_end_mask_0, x = v_7_cast);
            tensor<int32, [4]> var_1051_begin_0 = const()[name = tensor<string, []>("op_1051_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_1051_end_0 = const()[name = tensor<string, []>("op_1051_end_0"), val = tensor<int32, [4]>([2, 240, 1, 77])];
            tensor<bool, [4]> var_1051_end_mask_0 = const()[name = tensor<string, []>("op_1051_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_1051_cast = slice_by_index(begin = var_1051_begin_0, end = var_1051_end_0, end_mask = var_1051_end_mask_0, x = v_7_cast);
            tensor<int32, [4]> var_1055_begin_0 = const()[name = tensor<string, []>("op_1055_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_1055_end_0 = const()[name = tensor<string, []>("op_1055_end_0"), val = tensor<int32, [4]>([2, 280, 1, 77])];
            tensor<bool, [4]> var_1055_end_mask_0 = const()[name = tensor<string, []>("op_1055_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_1055_cast = slice_by_index(begin = var_1055_begin_0, end = var_1055_end_0, end_mask = var_1055_end_mask_0, x = v_7_cast);
            tensor<int32, [4]> var_1059_begin_0 = const()[name = tensor<string, []>("op_1059_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_1059_end_0 = const()[name = tensor<string, []>("op_1059_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_1059_end_mask_0 = const()[name = tensor<string, []>("op_1059_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_1059_cast = slice_by_index(begin = var_1059_begin_0, end = var_1059_end_0, end_mask = var_1059_end_mask_0, x = v_7_cast);
            tensor<string, []> var_1063_equation_0 = const()[name = tensor<string, []>("op_1063_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_1063_cast = einsum(equation = var_1063_equation_0, values = (var_1001_cast, var_966_cast));
            tensor<fp16, []> var_1064_to_fp16 = const()[name = tensor<string, []>("op_1064_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_49_cast = mul(x = var_1063_cast, y = var_1064_to_fp16);
            tensor<string, []> var_1067_equation_0 = const()[name = tensor<string, []>("op_1067_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_1067_cast = einsum(equation = var_1067_equation_0, values = (var_1005_cast, var_970_cast));
            tensor<fp16, []> var_1068_to_fp16 = const()[name = tensor<string, []>("op_1068_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_51_cast = mul(x = var_1067_cast, y = var_1068_to_fp16);
            tensor<string, []> var_1071_equation_0 = const()[name = tensor<string, []>("op_1071_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_1071_cast = einsum(equation = var_1071_equation_0, values = (var_1009_cast, var_974_cast));
            tensor<fp16, []> var_1072_to_fp16 = const()[name = tensor<string, []>("op_1072_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_53_cast = mul(x = var_1071_cast, y = var_1072_to_fp16);
            tensor<string, []> var_1075_equation_0 = const()[name = tensor<string, []>("op_1075_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_1075_cast = einsum(equation = var_1075_equation_0, values = (var_1013_cast, var_978_cast));
            tensor<fp16, []> var_1076_to_fp16 = const()[name = tensor<string, []>("op_1076_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_55_cast = mul(x = var_1075_cast, y = var_1076_to_fp16);
            tensor<string, []> var_1079_equation_0 = const()[name = tensor<string, []>("op_1079_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_1079_cast = einsum(equation = var_1079_equation_0, values = (var_1017_cast, var_982_cast));
            tensor<fp16, []> var_1080_to_fp16 = const()[name = tensor<string, []>("op_1080_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_57_cast = mul(x = var_1079_cast, y = var_1080_to_fp16);
            tensor<string, []> var_1083_equation_0 = const()[name = tensor<string, []>("op_1083_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_1083_cast = einsum(equation = var_1083_equation_0, values = (var_1021_cast, var_986_cast));
            tensor<fp16, []> var_1084_to_fp16 = const()[name = tensor<string, []>("op_1084_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_59_cast = mul(x = var_1083_cast, y = var_1084_to_fp16);
            tensor<string, []> var_1087_equation_0 = const()[name = tensor<string, []>("op_1087_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_1087_cast = einsum(equation = var_1087_equation_0, values = (var_1025_cast, var_990_cast));
            tensor<fp16, []> var_1088_to_fp16 = const()[name = tensor<string, []>("op_1088_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_61_cast = mul(x = var_1087_cast, y = var_1088_to_fp16);
            tensor<string, []> var_1091_equation_0 = const()[name = tensor<string, []>("op_1091_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_1091_cast = einsum(equation = var_1091_equation_0, values = (var_1029_cast, var_994_cast));
            tensor<fp16, []> var_1092_to_fp16 = const()[name = tensor<string, []>("op_1092_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_63_cast = mul(x = var_1091_cast, y = var_1092_to_fp16);
            tensor<fp16, [2, 77, 1, 4096]> var_1094_cast = softmax(axis = var_115, x = aw_49_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_1095_cast = softmax(axis = var_115, x = aw_51_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_1096_cast = softmax(axis = var_115, x = aw_53_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_1097_cast = softmax(axis = var_115, x = aw_55_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_1098_cast = softmax(axis = var_115, x = aw_57_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_1099_cast = softmax(axis = var_115, x = aw_59_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_1100_cast = softmax(axis = var_115, x = aw_61_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_1101_cast = softmax(axis = var_115, x = aw_63_cast);
            tensor<string, []> var_1103_equation_0 = const()[name = tensor<string, []>("op_1103_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_1103_cast = einsum(equation = var_1103_equation_0, values = (var_1031_cast, var_1094_cast));
            tensor<string, []> var_1105_equation_0 = const()[name = tensor<string, []>("op_1105_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_1105_cast = einsum(equation = var_1105_equation_0, values = (var_1035_cast, var_1095_cast));
            tensor<string, []> var_1107_equation_0 = const()[name = tensor<string, []>("op_1107_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_1107_cast = einsum(equation = var_1107_equation_0, values = (var_1039_cast, var_1096_cast));
            tensor<string, []> var_1109_equation_0 = const()[name = tensor<string, []>("op_1109_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_1109_cast = einsum(equation = var_1109_equation_0, values = (var_1043_cast, var_1097_cast));
            tensor<string, []> var_1111_equation_0 = const()[name = tensor<string, []>("op_1111_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_1111_cast = einsum(equation = var_1111_equation_0, values = (var_1047_cast, var_1098_cast));
            tensor<string, []> var_1113_equation_0 = const()[name = tensor<string, []>("op_1113_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_1113_cast = einsum(equation = var_1113_equation_0, values = (var_1051_cast, var_1099_cast));
            tensor<string, []> var_1115_equation_0 = const()[name = tensor<string, []>("op_1115_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_1115_cast = einsum(equation = var_1115_equation_0, values = (var_1055_cast, var_1100_cast));
            tensor<string, []> var_1117_equation_0 = const()[name = tensor<string, []>("op_1117_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_1117_cast = einsum(equation = var_1117_equation_0, values = (var_1059_cast, var_1101_cast));
            tensor<bool, []> input_53_interleave_0 = const()[name = tensor<string, []>("input_53_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_53_cast = concat(axis = var_115, interleave = input_53_interleave_0, values = (var_1103_cast, var_1105_cast, var_1107_cast, var_1109_cast, var_1111_cast, var_1113_cast, var_1115_cast, var_1117_cast));
            tensor<int32, [2]> var_1123 = const()[name = tensor<string, []>("op_1123"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1125 = const()[name = tensor<string, []>("op_1125"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_1127_pad_type_0 = const()[name = tensor<string, []>("op_1127_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1127_pad_0 = const()[name = tensor<string, []>("op_1127_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20467648)))];
            tensor<fp16, [320]> down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20672512)))];
            tensor<fp16, [2, 320, 1, 4096]> var_1127_cast = conv(bias = down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_1125, groups = var_115, pad = var_1127_pad_0, pad_type = var_1127_pad_type_0, strides = var_1123, weight = down_blocks_0_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_53_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_11_cast = add(x = var_1127_cast, y = inputs_9_cast);
            tensor<int32, [1]> var_1131 = const()[name = tensor<string, []>("op_1131"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_11_cast = reduce_mean(axes = var_1131, keep_dims = var_110, x = inputs_11_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_11_cast = sub(x = inputs_11_cast, y = channels_mean_11_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_11_cast = mul(x = zero_mean_11_cast, y = zero_mean_11_cast);
            tensor<int32, [1]> var_1135 = const()[name = tensor<string, []>("op_1135"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_1136_cast = reduce_mean(axes = var_1135, keep_dims = var_110, x = zero_mean_sq_11_cast);
            tensor<fp16, []> var_1137_to_fp16 = const()[name = tensor<string, []>("op_1137_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_1138_cast = add(x = var_1136_cast, y = var_1137_to_fp16);
            tensor<fp16, []> denom_11_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_11_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_11_cast = rsqrt(epsilon = denom_11_epsilon_0_to_fp16, x = var_1138_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_11_cast = mul(x = zero_mean_11_cast, y = denom_11_cast);
            tensor<fp16, [1, 320, 1, 1]> var_1142_to_fp16 = const()[name = tensor<string, []>("op_1142_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20673216)))];
            tensor<fp16, [2, 320, 1, 4096]> var_1143_cast = add(x = out_11_cast, y = var_1142_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_1145_to_fp16 = const()[name = tensor<string, []>("op_1145_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20673920)))];
            tensor<fp16, [2, 320, 1, 4096]> input_55_cast = mul(x = var_1143_cast, y = var_1145_to_fp16);
            tensor<int32, [2]> var_1153 = const()[name = tensor<string, []>("op_1153"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1155 = const()[name = tensor<string, []>("op_1155"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_1157_pad_type_0 = const()[name = tensor<string, []>("op_1157_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1157_pad_0 = const()[name = tensor<string, []>("op_1157_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2560, 320, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [2560, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20674624)))];
            tensor<fp16, [2560]> down_blocks_0_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22313088)))];
            tensor<fp16, [2, 2560, 1, 4096]> var_1157_cast = conv(bias = down_blocks_0_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_1155, groups = var_115, pad = var_1157_pad_0, pad_type = var_1157_pad_type_0, strides = var_1153, weight = down_blocks_0_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_55_cast);
            tensor<int32, [2]> var_1158_split_sizes_0 = const()[name = tensor<string, []>("op_1158_split_sizes_0"), val = tensor<int32, [2]>([1280, 1280])];
            tensor<int32, []> var_1158_axis_0 = const()[name = tensor<string, []>("op_1158_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 1280, 1, 4096]> var_1158_cast_0, tensor<fp16, [2, 1280, 1, 4096]> var_1158_cast_1 = split(axis = var_1158_axis_0, split_sizes = var_1158_split_sizes_0, x = var_1157_cast);
            tensor<string, []> var_1160_mode_0 = const()[name = tensor<string, []>("op_1160_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 1280, 1, 4096]> var_1160_cast = gelu(mode = var_1160_mode_0, x = var_1158_cast_1);
            tensor<fp16, [2, 1280, 1, 4096]> input_57_cast = mul(x = var_1158_cast_0, y = var_1160_cast);
            tensor<int32, [2]> var_1164 = const()[name = tensor<string, []>("op_1164"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1166 = const()[name = tensor<string, []>("op_1166"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_1168_pad_type_0 = const()[name = tensor<string, []>("op_1168_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1168_pad_0 = const()[name = tensor<string, []>("op_1168_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> down_blocks_0_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22318272)))];
            tensor<fp16, [320]> down_blocks_0_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23137536)))];
            tensor<fp16, [2, 320, 1, 4096]> var_1168_cast = conv(bias = down_blocks_0_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_1166, groups = var_115, pad = var_1168_pad_0, pad_type = var_1168_pad_type_0, strides = var_1164, weight = down_blocks_0_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_57_cast);
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_33_cast = add(x = var_1168_cast, y = inputs_11_cast);
            tensor<int32, [4]> var_1170 = const()[name = tensor<string, []>("op_1170"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> input_59_cast = reshape(shape = var_1170, x = hidden_states_33_cast);
            tensor<int32, [2]> var_1174 = const()[name = tensor<string, []>("op_1174"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1176 = const()[name = tensor<string, []>("op_1176"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_35_pad_type_0 = const()[name = tensor<string, []>("hidden_states_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_35_pad_0 = const()[name = tensor<string, []>("hidden_states_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> down_blocks_0_attentions_1_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_proj_out_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23138240)))];
            tensor<fp16, [320]> down_blocks_0_attentions_1_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_attentions_1_proj_out_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23343104)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_35_cast = conv(bias = down_blocks_0_attentions_1_proj_out_bias_to_fp16, dilations = var_1176, groups = var_115, pad = hidden_states_35_pad_0, pad_type = hidden_states_35_pad_type_0, strides = var_1174, weight = down_blocks_0_attentions_1_proj_out_weight_to_fp16, x = input_59_cast);
            tensor<fp16, [2, 320, 64, 64]> input_61_cast = add(x = hidden_states_35_cast, y = hidden_states_23_cast);
            tensor<int32, [2]> var_1183 = const()[name = tensor<string, []>("op_1183"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_1185 = const()[name = tensor<string, []>("op_1185"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_63_pad_type_0 = const()[name = tensor<string, []>("input_63_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_63_pad_0 = const()[name = tensor<string, []>("input_63_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> down_blocks_0_downsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_downsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23343808)))];
            tensor<fp16, [320]> down_blocks_0_downsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_0_downsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25187072)))];
            tensor<fp16, [2, 320, 32, 32]> input_63_cast = conv(bias = down_blocks_0_downsamplers_0_conv_bias_to_fp16, dilations = var_1185, groups = var_115, pad = input_63_pad_0, pad_type = input_63_pad_type_0, strides = var_1183, weight = down_blocks_0_downsamplers_0_conv_weight_to_fp16, x = input_61_cast);
            tensor<bool, []> var_1208 = const()[name = tensor<string, []>("op_1208"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_1213 = const()[name = tensor<string, []>("op_1213"), val = tensor<int32, []>(1)];
            tensor<int32, [5]> reshape_24_shape_0 = const()[name = tensor<string, []>("reshape_24_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 32, 32])];
            tensor<fp16, [2, 32, 10, 32, 32]> reshape_24_cast = reshape(shape = reshape_24_shape_0, x = input_63_cast);
            tensor<int32, [3]> reduce_mean_18_axes_0 = const()[name = tensor<string, []>("reduce_mean_18_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_18_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_18_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_18_cast = reduce_mean(axes = reduce_mean_18_axes_0, keep_dims = reduce_mean_18_keep_dims_0, x = reshape_24_cast);
            tensor<fp16, [2, 32, 10, 32, 32]> sub_12_cast = sub(x = reshape_24_cast, y = reduce_mean_18_cast);
            tensor<fp16, [2, 32, 10, 32, 32]> square_6_cast = square(x = sub_12_cast);
            tensor<int32, [3]> reduce_mean_20_axes_0 = const()[name = tensor<string, []>("reduce_mean_20_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_20_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_20_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_20_cast = reduce_mean(axes = reduce_mean_20_axes_0, keep_dims = reduce_mean_20_keep_dims_0, x = square_6_cast);
            tensor<fp16, []> add_12_y_0_to_fp16 = const()[name = tensor<string, []>("add_12_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_12_cast = add(x = reduce_mean_20_cast, y = add_12_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_6_cast = sqrt(x = add_12_cast);
            tensor<fp16, [2, 32, 10, 32, 32]> real_div_6_cast = real_div(x = sub_12_cast, y = sqrt_6_cast);
            tensor<int32, [4]> reshape_25_shape_0 = const()[name = tensor<string, []>("reshape_25_shape_0"), val = tensor<int32, [4]>([2, 320, 32, 32])];
            tensor<fp16, [2, 320, 32, 32]> reshape_25_cast = reshape(shape = reshape_25_shape_0, x = real_div_6_cast);
            tensor<fp16, [320]> add_13_mean_0_to_fp16 = const()[name = tensor<string, []>("add_13_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25187776)))];
            tensor<fp16, [320]> add_13_variance_0_to_fp16 = const()[name = tensor<string, []>("add_13_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25188480)))];
            tensor<fp16, [320]> add_13_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_13_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25189184)))];
            tensor<fp16, [320]> add_13_beta_0_to_fp16 = const()[name = tensor<string, []>("add_13_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25189888)))];
            tensor<fp16, []> add_13_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_13_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 32, 32]> add_13_cast = batch_norm(beta = add_13_beta_0_to_fp16, epsilon = add_13_epsilon_0_to_fp16, gamma = add_13_gamma_0_to_fp16, mean = add_13_mean_0_to_fp16, variance = add_13_variance_0_to_fp16, x = reshape_25_cast);
            tensor<fp16, [2, 320, 32, 32]> input_67_cast = silu(x = add_13_cast);
            tensor<int32, [2]> var_1236 = const()[name = tensor<string, []>("op_1236"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1238 = const()[name = tensor<string, []>("op_1238"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_37_pad_type_0 = const()[name = tensor<string, []>("hidden_states_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_37_pad_0 = const()[name = tensor<string, []>("hidden_states_37_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 320, 3, 3]> down_blocks_1_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [640, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25190592)))];
            tensor<fp16, [640]> down_blocks_1_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28877056)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_37_cast = conv(bias = down_blocks_1_resnets_0_conv1_bias_to_fp16, dilations = var_1238, groups = var_1213, pad = hidden_states_37_pad_0, pad_type = hidden_states_37_pad_type_0, strides = var_1236, weight = down_blocks_1_resnets_0_conv1_weight_to_fp16, x = input_67_cast);
            tensor<int32, [2]> var_1244 = const()[name = tensor<string, []>("op_1244"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1246 = const()[name = tensor<string, []>("op_1246"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_5_pad_type_0 = const()[name = tensor<string, []>("temb_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_5_pad_0 = const()[name = tensor<string, []>("temb_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1280, 1, 1]> down_blocks_1_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [640, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28878400)))];
            tensor<fp16, [640]> down_blocks_1_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30516864)))];
            tensor<fp16, [2, 640, 1, 1]> temb_5_cast = conv(bias = down_blocks_1_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_1246, groups = var_1213, pad = temb_5_pad_0, pad_type = temb_5_pad_type_0, strides = var_1244, weight = down_blocks_1_resnets_0_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 640, 32, 32]> input_71_cast = add(x = hidden_states_37_cast, y = temb_5_cast);
            tensor<int32, [5]> reshape_28_shape_0 = const()[name = tensor<string, []>("reshape_28_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_28_cast = reshape(shape = reshape_28_shape_0, x = input_71_cast);
            tensor<int32, [3]> reduce_mean_21_axes_0 = const()[name = tensor<string, []>("reduce_mean_21_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_21_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_21_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_21_cast = reduce_mean(axes = reduce_mean_21_axes_0, keep_dims = reduce_mean_21_keep_dims_0, x = reshape_28_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_14_cast = sub(x = reshape_28_cast, y = reduce_mean_21_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_7_cast = square(x = sub_14_cast);
            tensor<int32, [3]> reduce_mean_23_axes_0 = const()[name = tensor<string, []>("reduce_mean_23_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_23_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_23_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_23_cast = reduce_mean(axes = reduce_mean_23_axes_0, keep_dims = reduce_mean_23_keep_dims_0, x = square_7_cast);
            tensor<fp16, []> add_14_y_0_to_fp16 = const()[name = tensor<string, []>("add_14_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_14_cast = add(x = reduce_mean_23_cast, y = add_14_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_7_cast = sqrt(x = add_14_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_7_cast = real_div(x = sub_14_cast, y = sqrt_7_cast);
            tensor<int32, [4]> reshape_29_shape_0 = const()[name = tensor<string, []>("reshape_29_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_29_cast = reshape(shape = reshape_29_shape_0, x = real_div_7_cast);
            tensor<fp16, [640]> add_15_mean_0_to_fp16 = const()[name = tensor<string, []>("add_15_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30518208)))];
            tensor<fp16, [640]> add_15_variance_0_to_fp16 = const()[name = tensor<string, []>("add_15_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30519552)))];
            tensor<fp16, [640]> add_15_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_15_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30520896)))];
            tensor<fp16, [640]> add_15_beta_0_to_fp16 = const()[name = tensor<string, []>("add_15_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30522240)))];
            tensor<fp16, []> add_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_15_cast = batch_norm(beta = add_15_beta_0_to_fp16, epsilon = add_15_epsilon_0_to_fp16, gamma = add_15_gamma_0_to_fp16, mean = add_15_mean_0_to_fp16, variance = add_15_variance_0_to_fp16, x = reshape_29_cast);
            tensor<fp16, [2, 640, 32, 32]> input_75_cast = silu(x = add_15_cast);
            tensor<int32, [2]> var_1256 = const()[name = tensor<string, []>("op_1256"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1258 = const()[name = tensor<string, []>("op_1258"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_39_pad_type_0 = const()[name = tensor<string, []>("hidden_states_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_39_pad_0 = const()[name = tensor<string, []>("hidden_states_39_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> down_blocks_1_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30523584)))];
            tensor<fp16, [640]> down_blocks_1_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37896448)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_39_cast = conv(bias = down_blocks_1_resnets_0_conv2_bias_to_fp16, dilations = var_1258, groups = var_1213, pad = hidden_states_39_pad_0, pad_type = hidden_states_39_pad_type_0, strides = var_1256, weight = down_blocks_1_resnets_0_conv2_weight_to_fp16, x = input_75_cast);
            tensor<int32, [2]> var_1263 = const()[name = tensor<string, []>("op_1263"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1265 = const()[name = tensor<string, []>("op_1265"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_1_pad_type_0 = const()[name = tensor<string, []>("x_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_1_pad_0 = const()[name = tensor<string, []>("x_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 320, 1, 1]> down_blocks_1_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [640, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37897792)))];
            tensor<fp16, [640]> down_blocks_1_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38307456)))];
            tensor<fp16, [2, 640, 32, 32]> x_1_cast = conv(bias = down_blocks_1_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_1265, groups = var_1213, pad = x_1_pad_0, pad_type = x_1_pad_type_0, strides = var_1263, weight = down_blocks_1_resnets_0_conv_shortcut_weight_to_fp16, x = input_63_cast);
            tensor<fp16, [2, 640, 32, 32]> hidden_states_41_cast = add(x = x_1_cast, y = hidden_states_39_cast);
            tensor<int32, [5]> reshape_32_shape_0 = const()[name = tensor<string, []>("reshape_32_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_32_cast = reshape(shape = reshape_32_shape_0, x = hidden_states_41_cast);
            tensor<int32, [3]> reduce_mean_24_axes_0 = const()[name = tensor<string, []>("reduce_mean_24_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_24_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_24_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_24_cast = reduce_mean(axes = reduce_mean_24_axes_0, keep_dims = reduce_mean_24_keep_dims_0, x = reshape_32_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_16_cast = sub(x = reshape_32_cast, y = reduce_mean_24_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_8_cast = square(x = sub_16_cast);
            tensor<int32, [3]> reduce_mean_26_axes_0 = const()[name = tensor<string, []>("reduce_mean_26_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_26_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_26_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_26_cast = reduce_mean(axes = reduce_mean_26_axes_0, keep_dims = reduce_mean_26_keep_dims_0, x = square_8_cast);
            tensor<fp16, []> add_16_y_0_to_fp16 = const()[name = tensor<string, []>("add_16_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_16_cast = add(x = reduce_mean_26_cast, y = add_16_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_8_cast = sqrt(x = add_16_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_8_cast = real_div(x = sub_16_cast, y = sqrt_8_cast);
            tensor<int32, [4]> reshape_33_shape_0 = const()[name = tensor<string, []>("reshape_33_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_33_cast = reshape(shape = reshape_33_shape_0, x = real_div_8_cast);
            tensor<fp16, [640]> add_17_mean_0_to_fp16 = const()[name = tensor<string, []>("add_17_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38308800)))];
            tensor<fp16, [640]> add_17_variance_0_to_fp16 = const()[name = tensor<string, []>("add_17_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38310144)))];
            tensor<fp16, [640]> add_17_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_17_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38311488)))];
            tensor<fp16, [640]> add_17_beta_0_to_fp16 = const()[name = tensor<string, []>("add_17_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38312832)))];
            tensor<fp16, []> add_17_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_17_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_17_cast = batch_norm(beta = add_17_beta_0_to_fp16, epsilon = add_17_epsilon_0_to_fp16, gamma = add_17_gamma_0_to_fp16, mean = add_17_mean_0_to_fp16, variance = add_17_variance_0_to_fp16, x = reshape_33_cast);
            tensor<int32, [2]> var_1285 = const()[name = tensor<string, []>("op_1285"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1287 = const()[name = tensor<string, []>("op_1287"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_43_pad_type_0 = const()[name = tensor<string, []>("hidden_states_43_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_43_pad_0 = const()[name = tensor<string, []>("hidden_states_43_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_proj_in_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38314176)))];
            tensor<fp16, [640]> down_blocks_1_attentions_0_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_proj_in_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39133440)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_43_cast = conv(bias = down_blocks_1_attentions_0_proj_in_bias_to_fp16, dilations = var_1287, groups = var_1213, pad = hidden_states_43_pad_0, pad_type = hidden_states_43_pad_type_0, strides = var_1285, weight = down_blocks_1_attentions_0_proj_in_weight_to_fp16, x = add_17_cast);
            tensor<int32, [4]> var_1292 = const()[name = tensor<string, []>("op_1292"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<fp16, [2, 640, 1, 1024]> inputs_13_cast = reshape(shape = var_1292, x = hidden_states_43_cast);
            tensor<int32, [1]> var_1302 = const()[name = tensor<string, []>("op_1302"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_13_cast = reduce_mean(axes = var_1302, keep_dims = var_1208, x = inputs_13_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_13_cast = sub(x = inputs_13_cast, y = channels_mean_13_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_13_cast = mul(x = zero_mean_13_cast, y = zero_mean_13_cast);
            tensor<int32, [1]> var_1306 = const()[name = tensor<string, []>("op_1306"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_1307_cast = reduce_mean(axes = var_1306, keep_dims = var_1208, x = zero_mean_sq_13_cast);
            tensor<fp16, []> var_1308_to_fp16 = const()[name = tensor<string, []>("op_1308_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_1309_cast = add(x = var_1307_cast, y = var_1308_to_fp16);
            tensor<fp16, []> denom_13_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_13_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_13_cast = rsqrt(epsilon = denom_13_epsilon_0_to_fp16, x = var_1309_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_13_cast = mul(x = zero_mean_13_cast, y = denom_13_cast);
            tensor<fp16, [1, 640, 1, 1]> var_1313_to_fp16 = const()[name = tensor<string, []>("op_1313_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39134784)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1314_cast = add(x = out_13_cast, y = var_1313_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_1316_to_fp16 = const()[name = tensor<string, []>("op_1316_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39136128)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_45_cast = mul(x = var_1314_cast, y = var_1316_to_fp16);
            tensor<int32, [2]> var_1323 = const()[name = tensor<string, []>("op_1323"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1325 = const()[name = tensor<string, []>("op_1325"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_9_pad_type_0 = const()[name = tensor<string, []>("q_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_9_pad_0 = const()[name = tensor<string, []>("q_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39137472)))];
            tensor<fp16, [2, 640, 1, 1024]> q_9_cast = conv(dilations = var_1325, groups = var_1213, pad = q_9_pad_0, pad_type = q_9_pad_type_0, strides = var_1323, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_45_cast);
            tensor<int32, [2]> var_1329 = const()[name = tensor<string, []>("op_1329"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1331 = const()[name = tensor<string, []>("op_1331"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_17_pad_type_0 = const()[name = tensor<string, []>("k_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_17_pad_0 = const()[name = tensor<string, []>("k_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39956736)))];
            tensor<fp16, [2, 640, 1, 1024]> k_17_cast = conv(dilations = var_1331, groups = var_1213, pad = k_17_pad_0, pad_type = k_17_pad_type_0, strides = var_1329, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_45_cast);
            tensor<int32, [2]> var_1335 = const()[name = tensor<string, []>("op_1335"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1337 = const()[name = tensor<string, []>("op_1337"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_9_pad_type_0 = const()[name = tensor<string, []>("v_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_9_pad_0 = const()[name = tensor<string, []>("v_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(40776000)))];
            tensor<fp16, [2, 640, 1, 1024]> v_9_cast = conv(dilations = var_1337, groups = var_1213, pad = v_9_pad_0, pad_type = v_9_pad_type_0, strides = var_1335, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_45_cast);
            tensor<int32, [4]> var_1341_begin_0 = const()[name = tensor<string, []>("op_1341_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1341_end_0 = const()[name = tensor<string, []>("op_1341_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_1341_end_mask_0 = const()[name = tensor<string, []>("op_1341_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1341_cast = slice_by_index(begin = var_1341_begin_0, end = var_1341_end_0, end_mask = var_1341_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1345_begin_0 = const()[name = tensor<string, []>("op_1345_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_1345_end_0 = const()[name = tensor<string, []>("op_1345_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_1345_end_mask_0 = const()[name = tensor<string, []>("op_1345_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1345_cast = slice_by_index(begin = var_1345_begin_0, end = var_1345_end_0, end_mask = var_1345_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1349_begin_0 = const()[name = tensor<string, []>("op_1349_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_1349_end_0 = const()[name = tensor<string, []>("op_1349_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_1349_end_mask_0 = const()[name = tensor<string, []>("op_1349_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1349_cast = slice_by_index(begin = var_1349_begin_0, end = var_1349_end_0, end_mask = var_1349_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1353_begin_0 = const()[name = tensor<string, []>("op_1353_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_1353_end_0 = const()[name = tensor<string, []>("op_1353_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_1353_end_mask_0 = const()[name = tensor<string, []>("op_1353_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1353_cast = slice_by_index(begin = var_1353_begin_0, end = var_1353_end_0, end_mask = var_1353_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1357_begin_0 = const()[name = tensor<string, []>("op_1357_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1357_end_0 = const()[name = tensor<string, []>("op_1357_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_1357_end_mask_0 = const()[name = tensor<string, []>("op_1357_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1357_cast = slice_by_index(begin = var_1357_begin_0, end = var_1357_end_0, end_mask = var_1357_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1361_begin_0 = const()[name = tensor<string, []>("op_1361_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_1361_end_0 = const()[name = tensor<string, []>("op_1361_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_1361_end_mask_0 = const()[name = tensor<string, []>("op_1361_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1361_cast = slice_by_index(begin = var_1361_begin_0, end = var_1361_end_0, end_mask = var_1361_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1365_begin_0 = const()[name = tensor<string, []>("op_1365_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_1365_end_0 = const()[name = tensor<string, []>("op_1365_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_1365_end_mask_0 = const()[name = tensor<string, []>("op_1365_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1365_cast = slice_by_index(begin = var_1365_begin_0, end = var_1365_end_0, end_mask = var_1365_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> var_1369_begin_0 = const()[name = tensor<string, []>("op_1369_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_1369_end_0 = const()[name = tensor<string, []>("op_1369_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_1369_end_mask_0 = const()[name = tensor<string, []>("op_1369_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1369_cast = slice_by_index(begin = var_1369_begin_0, end = var_1369_end_0, end_mask = var_1369_end_mask_0, x = q_9_cast);
            tensor<int32, [4]> k_19_perm_0 = const()[name = tensor<string, []>("k_19_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_1376_begin_0 = const()[name = tensor<string, []>("op_1376_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1376_end_0 = const()[name = tensor<string, []>("op_1376_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 80])];
            tensor<bool, [4]> var_1376_end_mask_0 = const()[name = tensor<string, []>("op_1376_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 640]> transpose_27 = transpose(perm = k_19_perm_0, x = k_17_cast);
            tensor<fp16, [2, 1024, 1, 80]> var_1376_cast = slice_by_index(begin = var_1376_begin_0, end = var_1376_end_0, end_mask = var_1376_end_mask_0, x = transpose_27);
            tensor<int32, [4]> var_1380_begin_0 = const()[name = tensor<string, []>("op_1380_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_1380_end_0 = const()[name = tensor<string, []>("op_1380_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 160])];
            tensor<bool, [4]> var_1380_end_mask_0 = const()[name = tensor<string, []>("op_1380_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1380_cast = slice_by_index(begin = var_1380_begin_0, end = var_1380_end_0, end_mask = var_1380_end_mask_0, x = transpose_27);
            tensor<int32, [4]> var_1384_begin_0 = const()[name = tensor<string, []>("op_1384_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_1384_end_0 = const()[name = tensor<string, []>("op_1384_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 240])];
            tensor<bool, [4]> var_1384_end_mask_0 = const()[name = tensor<string, []>("op_1384_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1384_cast = slice_by_index(begin = var_1384_begin_0, end = var_1384_end_0, end_mask = var_1384_end_mask_0, x = transpose_27);
            tensor<int32, [4]> var_1388_begin_0 = const()[name = tensor<string, []>("op_1388_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_1388_end_0 = const()[name = tensor<string, []>("op_1388_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 320])];
            tensor<bool, [4]> var_1388_end_mask_0 = const()[name = tensor<string, []>("op_1388_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1388_cast = slice_by_index(begin = var_1388_begin_0, end = var_1388_end_0, end_mask = var_1388_end_mask_0, x = transpose_27);
            tensor<int32, [4]> var_1392_begin_0 = const()[name = tensor<string, []>("op_1392_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_1392_end_0 = const()[name = tensor<string, []>("op_1392_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 400])];
            tensor<bool, [4]> var_1392_end_mask_0 = const()[name = tensor<string, []>("op_1392_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1392_cast = slice_by_index(begin = var_1392_begin_0, end = var_1392_end_0, end_mask = var_1392_end_mask_0, x = transpose_27);
            tensor<int32, [4]> var_1396_begin_0 = const()[name = tensor<string, []>("op_1396_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 400])];
            tensor<int32, [4]> var_1396_end_0 = const()[name = tensor<string, []>("op_1396_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 480])];
            tensor<bool, [4]> var_1396_end_mask_0 = const()[name = tensor<string, []>("op_1396_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1396_cast = slice_by_index(begin = var_1396_begin_0, end = var_1396_end_0, end_mask = var_1396_end_mask_0, x = transpose_27);
            tensor<int32, [4]> var_1400_begin_0 = const()[name = tensor<string, []>("op_1400_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_1400_end_0 = const()[name = tensor<string, []>("op_1400_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 560])];
            tensor<bool, [4]> var_1400_end_mask_0 = const()[name = tensor<string, []>("op_1400_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1400_cast = slice_by_index(begin = var_1400_begin_0, end = var_1400_end_0, end_mask = var_1400_end_mask_0, x = transpose_27);
            tensor<int32, [4]> var_1404_begin_0 = const()[name = tensor<string, []>("op_1404_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 560])];
            tensor<int32, [4]> var_1404_end_0 = const()[name = tensor<string, []>("op_1404_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 640])];
            tensor<bool, [4]> var_1404_end_mask_0 = const()[name = tensor<string, []>("op_1404_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1404_cast = slice_by_index(begin = var_1404_begin_0, end = var_1404_end_0, end_mask = var_1404_end_mask_0, x = transpose_27);
            tensor<int32, [4]> var_1406_begin_0 = const()[name = tensor<string, []>("op_1406_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1406_end_0 = const()[name = tensor<string, []>("op_1406_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_1406_end_mask_0 = const()[name = tensor<string, []>("op_1406_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1406_cast = slice_by_index(begin = var_1406_begin_0, end = var_1406_end_0, end_mask = var_1406_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1410_begin_0 = const()[name = tensor<string, []>("op_1410_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_1410_end_0 = const()[name = tensor<string, []>("op_1410_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_1410_end_mask_0 = const()[name = tensor<string, []>("op_1410_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1410_cast = slice_by_index(begin = var_1410_begin_0, end = var_1410_end_0, end_mask = var_1410_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1414_begin_0 = const()[name = tensor<string, []>("op_1414_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_1414_end_0 = const()[name = tensor<string, []>("op_1414_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_1414_end_mask_0 = const()[name = tensor<string, []>("op_1414_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1414_cast = slice_by_index(begin = var_1414_begin_0, end = var_1414_end_0, end_mask = var_1414_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1418_begin_0 = const()[name = tensor<string, []>("op_1418_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_1418_end_0 = const()[name = tensor<string, []>("op_1418_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_1418_end_mask_0 = const()[name = tensor<string, []>("op_1418_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1418_cast = slice_by_index(begin = var_1418_begin_0, end = var_1418_end_0, end_mask = var_1418_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1422_begin_0 = const()[name = tensor<string, []>("op_1422_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1422_end_0 = const()[name = tensor<string, []>("op_1422_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_1422_end_mask_0 = const()[name = tensor<string, []>("op_1422_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1422_cast = slice_by_index(begin = var_1422_begin_0, end = var_1422_end_0, end_mask = var_1422_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1426_begin_0 = const()[name = tensor<string, []>("op_1426_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_1426_end_0 = const()[name = tensor<string, []>("op_1426_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_1426_end_mask_0 = const()[name = tensor<string, []>("op_1426_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1426_cast = slice_by_index(begin = var_1426_begin_0, end = var_1426_end_0, end_mask = var_1426_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1430_begin_0 = const()[name = tensor<string, []>("op_1430_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_1430_end_0 = const()[name = tensor<string, []>("op_1430_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_1430_end_mask_0 = const()[name = tensor<string, []>("op_1430_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1430_cast = slice_by_index(begin = var_1430_begin_0, end = var_1430_end_0, end_mask = var_1430_end_mask_0, x = v_9_cast);
            tensor<int32, [4]> var_1434_begin_0 = const()[name = tensor<string, []>("op_1434_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_1434_end_0 = const()[name = tensor<string, []>("op_1434_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_1434_end_mask_0 = const()[name = tensor<string, []>("op_1434_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1434_cast = slice_by_index(begin = var_1434_begin_0, end = var_1434_end_0, end_mask = var_1434_end_mask_0, x = v_9_cast);
            tensor<string, []> var_1438_equation_0 = const()[name = tensor<string, []>("op_1438_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1438_cast = einsum(equation = var_1438_equation_0, values = (var_1376_cast, var_1341_cast));
            tensor<fp16, []> var_1439_to_fp16 = const()[name = tensor<string, []>("op_1439_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_65_cast = mul(x = var_1438_cast, y = var_1439_to_fp16);
            tensor<string, []> var_1442_equation_0 = const()[name = tensor<string, []>("op_1442_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1442_cast = einsum(equation = var_1442_equation_0, values = (var_1380_cast, var_1345_cast));
            tensor<fp16, []> var_1443_to_fp16 = const()[name = tensor<string, []>("op_1443_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_67_cast = mul(x = var_1442_cast, y = var_1443_to_fp16);
            tensor<string, []> var_1446_equation_0 = const()[name = tensor<string, []>("op_1446_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1446_cast = einsum(equation = var_1446_equation_0, values = (var_1384_cast, var_1349_cast));
            tensor<fp16, []> var_1447_to_fp16 = const()[name = tensor<string, []>("op_1447_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_69_cast = mul(x = var_1446_cast, y = var_1447_to_fp16);
            tensor<string, []> var_1450_equation_0 = const()[name = tensor<string, []>("op_1450_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1450_cast = einsum(equation = var_1450_equation_0, values = (var_1388_cast, var_1353_cast));
            tensor<fp16, []> var_1451_to_fp16 = const()[name = tensor<string, []>("op_1451_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_71_cast = mul(x = var_1450_cast, y = var_1451_to_fp16);
            tensor<string, []> var_1454_equation_0 = const()[name = tensor<string, []>("op_1454_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1454_cast = einsum(equation = var_1454_equation_0, values = (var_1392_cast, var_1357_cast));
            tensor<fp16, []> var_1455_to_fp16 = const()[name = tensor<string, []>("op_1455_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_73_cast = mul(x = var_1454_cast, y = var_1455_to_fp16);
            tensor<string, []> var_1458_equation_0 = const()[name = tensor<string, []>("op_1458_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1458_cast = einsum(equation = var_1458_equation_0, values = (var_1396_cast, var_1361_cast));
            tensor<fp16, []> var_1459_to_fp16 = const()[name = tensor<string, []>("op_1459_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_75_cast = mul(x = var_1458_cast, y = var_1459_to_fp16);
            tensor<string, []> var_1462_equation_0 = const()[name = tensor<string, []>("op_1462_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1462_cast = einsum(equation = var_1462_equation_0, values = (var_1400_cast, var_1365_cast));
            tensor<fp16, []> var_1463_to_fp16 = const()[name = tensor<string, []>("op_1463_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_77_cast = mul(x = var_1462_cast, y = var_1463_to_fp16);
            tensor<string, []> var_1466_equation_0 = const()[name = tensor<string, []>("op_1466_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1466_cast = einsum(equation = var_1466_equation_0, values = (var_1404_cast, var_1369_cast));
            tensor<fp16, []> var_1467_to_fp16 = const()[name = tensor<string, []>("op_1467_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_79_cast = mul(x = var_1466_cast, y = var_1467_to_fp16);
            tensor<fp16, [2, 1024, 1, 1024]> var_1469_cast = softmax(axis = var_1213, x = aw_65_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1470_cast = softmax(axis = var_1213, x = aw_67_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1471_cast = softmax(axis = var_1213, x = aw_69_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1472_cast = softmax(axis = var_1213, x = aw_71_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1473_cast = softmax(axis = var_1213, x = aw_73_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1474_cast = softmax(axis = var_1213, x = aw_75_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1475_cast = softmax(axis = var_1213, x = aw_77_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1476_cast = softmax(axis = var_1213, x = aw_79_cast);
            tensor<string, []> var_1478_equation_0 = const()[name = tensor<string, []>("op_1478_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1478_cast = einsum(equation = var_1478_equation_0, values = (var_1406_cast, var_1469_cast));
            tensor<string, []> var_1480_equation_0 = const()[name = tensor<string, []>("op_1480_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1480_cast = einsum(equation = var_1480_equation_0, values = (var_1410_cast, var_1470_cast));
            tensor<string, []> var_1482_equation_0 = const()[name = tensor<string, []>("op_1482_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1482_cast = einsum(equation = var_1482_equation_0, values = (var_1414_cast, var_1471_cast));
            tensor<string, []> var_1484_equation_0 = const()[name = tensor<string, []>("op_1484_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1484_cast = einsum(equation = var_1484_equation_0, values = (var_1418_cast, var_1472_cast));
            tensor<string, []> var_1486_equation_0 = const()[name = tensor<string, []>("op_1486_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1486_cast = einsum(equation = var_1486_equation_0, values = (var_1422_cast, var_1473_cast));
            tensor<string, []> var_1488_equation_0 = const()[name = tensor<string, []>("op_1488_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1488_cast = einsum(equation = var_1488_equation_0, values = (var_1426_cast, var_1474_cast));
            tensor<string, []> var_1490_equation_0 = const()[name = tensor<string, []>("op_1490_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1490_cast = einsum(equation = var_1490_equation_0, values = (var_1430_cast, var_1475_cast));
            tensor<string, []> var_1492_equation_0 = const()[name = tensor<string, []>("op_1492_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1492_cast = einsum(equation = var_1492_equation_0, values = (var_1434_cast, var_1476_cast));
            tensor<bool, []> input_79_interleave_0 = const()[name = tensor<string, []>("input_79_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_79_cast = concat(axis = var_1213, interleave = input_79_interleave_0, values = (var_1478_cast, var_1480_cast, var_1482_cast, var_1484_cast, var_1486_cast, var_1488_cast, var_1490_cast, var_1492_cast));
            tensor<int32, [2]> var_1498 = const()[name = tensor<string, []>("op_1498"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1500 = const()[name = tensor<string, []>("op_1500"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_1502_pad_type_0 = const()[name = tensor<string, []>("op_1502_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1502_pad_0 = const()[name = tensor<string, []>("op_1502_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41595264)))];
            tensor<fp16, [640]> down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42414528)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1502_cast = conv(bias = down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_1500, groups = var_1213, pad = var_1502_pad_0, pad_type = var_1502_pad_type_0, strides = var_1498, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_79_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_15_cast = add(x = var_1502_cast, y = inputs_13_cast);
            tensor<int32, [1]> var_1506 = const()[name = tensor<string, []>("op_1506"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_15_cast = reduce_mean(axes = var_1506, keep_dims = var_1208, x = inputs_15_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_15_cast = sub(x = inputs_15_cast, y = channels_mean_15_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_15_cast = mul(x = zero_mean_15_cast, y = zero_mean_15_cast);
            tensor<int32, [1]> var_1510 = const()[name = tensor<string, []>("op_1510"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_1511_cast = reduce_mean(axes = var_1510, keep_dims = var_1208, x = zero_mean_sq_15_cast);
            tensor<fp16, []> var_1512_to_fp16 = const()[name = tensor<string, []>("op_1512_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_1513_cast = add(x = var_1511_cast, y = var_1512_to_fp16);
            tensor<fp16, []> denom_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_15_cast = rsqrt(epsilon = denom_15_epsilon_0_to_fp16, x = var_1513_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_15_cast = mul(x = zero_mean_15_cast, y = denom_15_cast);
            tensor<fp16, [1, 640, 1, 1]> var_1517_to_fp16 = const()[name = tensor<string, []>("op_1517_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42415872)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1518_cast = add(x = out_15_cast, y = var_1517_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_1520_to_fp16 = const()[name = tensor<string, []>("op_1520_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42417216)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_47_cast = mul(x = var_1518_cast, y = var_1520_to_fp16);
            tensor<int32, [2]> var_1527 = const()[name = tensor<string, []>("op_1527"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1529 = const()[name = tensor<string, []>("op_1529"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_11_pad_type_0 = const()[name = tensor<string, []>("q_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_11_pad_0 = const()[name = tensor<string, []>("q_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42418560)))];
            tensor<fp16, [2, 640, 1, 1024]> q_11_cast = conv(dilations = var_1529, groups = var_1213, pad = q_11_pad_0, pad_type = q_11_pad_type_0, strides = var_1527, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_47_cast);
            tensor<int32, [2]> var_1533 = const()[name = tensor<string, []>("op_1533"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1535 = const()[name = tensor<string, []>("op_1535"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_21_pad_type_0 = const()[name = tensor<string, []>("k_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_21_pad_0 = const()[name = tensor<string, []>("k_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 768, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [640, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43237824)))];
            tensor<fp16, [2, 640, 1, 77]> k_21_cast = conv(dilations = var_1535, groups = var_1213, pad = k_21_pad_0, pad_type = k_21_pad_type_0, strides = var_1533, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_1539 = const()[name = tensor<string, []>("op_1539"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1541 = const()[name = tensor<string, []>("op_1541"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_11_pad_type_0 = const()[name = tensor<string, []>("v_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_11_pad_0 = const()[name = tensor<string, []>("v_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 768, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [640, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(44220928)))];
            tensor<fp16, [2, 640, 1, 77]> v_11_cast = conv(dilations = var_1541, groups = var_1213, pad = v_11_pad_0, pad_type = v_11_pad_type_0, strides = var_1539, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_1545_begin_0 = const()[name = tensor<string, []>("op_1545_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1545_end_0 = const()[name = tensor<string, []>("op_1545_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_1545_end_mask_0 = const()[name = tensor<string, []>("op_1545_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1545_cast = slice_by_index(begin = var_1545_begin_0, end = var_1545_end_0, end_mask = var_1545_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1549_begin_0 = const()[name = tensor<string, []>("op_1549_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_1549_end_0 = const()[name = tensor<string, []>("op_1549_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_1549_end_mask_0 = const()[name = tensor<string, []>("op_1549_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1549_cast = slice_by_index(begin = var_1549_begin_0, end = var_1549_end_0, end_mask = var_1549_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1553_begin_0 = const()[name = tensor<string, []>("op_1553_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_1553_end_0 = const()[name = tensor<string, []>("op_1553_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_1553_end_mask_0 = const()[name = tensor<string, []>("op_1553_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1553_cast = slice_by_index(begin = var_1553_begin_0, end = var_1553_end_0, end_mask = var_1553_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1557_begin_0 = const()[name = tensor<string, []>("op_1557_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_1557_end_0 = const()[name = tensor<string, []>("op_1557_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_1557_end_mask_0 = const()[name = tensor<string, []>("op_1557_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1557_cast = slice_by_index(begin = var_1557_begin_0, end = var_1557_end_0, end_mask = var_1557_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1561_begin_0 = const()[name = tensor<string, []>("op_1561_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1561_end_0 = const()[name = tensor<string, []>("op_1561_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_1561_end_mask_0 = const()[name = tensor<string, []>("op_1561_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1561_cast = slice_by_index(begin = var_1561_begin_0, end = var_1561_end_0, end_mask = var_1561_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1565_begin_0 = const()[name = tensor<string, []>("op_1565_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_1565_end_0 = const()[name = tensor<string, []>("op_1565_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_1565_end_mask_0 = const()[name = tensor<string, []>("op_1565_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1565_cast = slice_by_index(begin = var_1565_begin_0, end = var_1565_end_0, end_mask = var_1565_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1569_begin_0 = const()[name = tensor<string, []>("op_1569_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_1569_end_0 = const()[name = tensor<string, []>("op_1569_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_1569_end_mask_0 = const()[name = tensor<string, []>("op_1569_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1569_cast = slice_by_index(begin = var_1569_begin_0, end = var_1569_end_0, end_mask = var_1569_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> var_1573_begin_0 = const()[name = tensor<string, []>("op_1573_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_1573_end_0 = const()[name = tensor<string, []>("op_1573_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_1573_end_mask_0 = const()[name = tensor<string, []>("op_1573_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1573_cast = slice_by_index(begin = var_1573_begin_0, end = var_1573_end_0, end_mask = var_1573_end_mask_0, x = q_11_cast);
            tensor<int32, [4]> k_23_perm_0 = const()[name = tensor<string, []>("k_23_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_1580_begin_0 = const()[name = tensor<string, []>("op_1580_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1580_end_0 = const()[name = tensor<string, []>("op_1580_end_0"), val = tensor<int32, [4]>([2, 77, 1, 80])];
            tensor<bool, [4]> var_1580_end_mask_0 = const()[name = tensor<string, []>("op_1580_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 640]> transpose_26 = transpose(perm = k_23_perm_0, x = k_21_cast);
            tensor<fp16, [2, 77, 1, 80]> var_1580_cast = slice_by_index(begin = var_1580_begin_0, end = var_1580_end_0, end_mask = var_1580_end_mask_0, x = transpose_26);
            tensor<int32, [4]> var_1584_begin_0 = const()[name = tensor<string, []>("op_1584_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_1584_end_0 = const()[name = tensor<string, []>("op_1584_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_1584_end_mask_0 = const()[name = tensor<string, []>("op_1584_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_1584_cast = slice_by_index(begin = var_1584_begin_0, end = var_1584_end_0, end_mask = var_1584_end_mask_0, x = transpose_26);
            tensor<int32, [4]> var_1588_begin_0 = const()[name = tensor<string, []>("op_1588_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_1588_end_0 = const()[name = tensor<string, []>("op_1588_end_0"), val = tensor<int32, [4]>([2, 77, 1, 240])];
            tensor<bool, [4]> var_1588_end_mask_0 = const()[name = tensor<string, []>("op_1588_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_1588_cast = slice_by_index(begin = var_1588_begin_0, end = var_1588_end_0, end_mask = var_1588_end_mask_0, x = transpose_26);
            tensor<int32, [4]> var_1592_begin_0 = const()[name = tensor<string, []>("op_1592_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_1592_end_0 = const()[name = tensor<string, []>("op_1592_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_1592_end_mask_0 = const()[name = tensor<string, []>("op_1592_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_1592_cast = slice_by_index(begin = var_1592_begin_0, end = var_1592_end_0, end_mask = var_1592_end_mask_0, x = transpose_26);
            tensor<int32, [4]> var_1596_begin_0 = const()[name = tensor<string, []>("op_1596_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_1596_end_0 = const()[name = tensor<string, []>("op_1596_end_0"), val = tensor<int32, [4]>([2, 77, 1, 400])];
            tensor<bool, [4]> var_1596_end_mask_0 = const()[name = tensor<string, []>("op_1596_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_1596_cast = slice_by_index(begin = var_1596_begin_0, end = var_1596_end_0, end_mask = var_1596_end_mask_0, x = transpose_26);
            tensor<int32, [4]> var_1600_begin_0 = const()[name = tensor<string, []>("op_1600_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 400])];
            tensor<int32, [4]> var_1600_end_0 = const()[name = tensor<string, []>("op_1600_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_1600_end_mask_0 = const()[name = tensor<string, []>("op_1600_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_1600_cast = slice_by_index(begin = var_1600_begin_0, end = var_1600_end_0, end_mask = var_1600_end_mask_0, x = transpose_26);
            tensor<int32, [4]> var_1604_begin_0 = const()[name = tensor<string, []>("op_1604_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_1604_end_0 = const()[name = tensor<string, []>("op_1604_end_0"), val = tensor<int32, [4]>([2, 77, 1, 560])];
            tensor<bool, [4]> var_1604_end_mask_0 = const()[name = tensor<string, []>("op_1604_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_1604_cast = slice_by_index(begin = var_1604_begin_0, end = var_1604_end_0, end_mask = var_1604_end_mask_0, x = transpose_26);
            tensor<int32, [4]> var_1608_begin_0 = const()[name = tensor<string, []>("op_1608_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 560])];
            tensor<int32, [4]> var_1608_end_0 = const()[name = tensor<string, []>("op_1608_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_1608_end_mask_0 = const()[name = tensor<string, []>("op_1608_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_1608_cast = slice_by_index(begin = var_1608_begin_0, end = var_1608_end_0, end_mask = var_1608_end_mask_0, x = transpose_26);
            tensor<int32, [4]> var_1610_begin_0 = const()[name = tensor<string, []>("op_1610_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1610_end_0 = const()[name = tensor<string, []>("op_1610_end_0"), val = tensor<int32, [4]>([2, 80, 1, 77])];
            tensor<bool, [4]> var_1610_end_mask_0 = const()[name = tensor<string, []>("op_1610_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_1610_cast = slice_by_index(begin = var_1610_begin_0, end = var_1610_end_0, end_mask = var_1610_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1614_begin_0 = const()[name = tensor<string, []>("op_1614_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_1614_end_0 = const()[name = tensor<string, []>("op_1614_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_1614_end_mask_0 = const()[name = tensor<string, []>("op_1614_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_1614_cast = slice_by_index(begin = var_1614_begin_0, end = var_1614_end_0, end_mask = var_1614_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1618_begin_0 = const()[name = tensor<string, []>("op_1618_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_1618_end_0 = const()[name = tensor<string, []>("op_1618_end_0"), val = tensor<int32, [4]>([2, 240, 1, 77])];
            tensor<bool, [4]> var_1618_end_mask_0 = const()[name = tensor<string, []>("op_1618_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_1618_cast = slice_by_index(begin = var_1618_begin_0, end = var_1618_end_0, end_mask = var_1618_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1622_begin_0 = const()[name = tensor<string, []>("op_1622_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_1622_end_0 = const()[name = tensor<string, []>("op_1622_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_1622_end_mask_0 = const()[name = tensor<string, []>("op_1622_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_1622_cast = slice_by_index(begin = var_1622_begin_0, end = var_1622_end_0, end_mask = var_1622_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1626_begin_0 = const()[name = tensor<string, []>("op_1626_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1626_end_0 = const()[name = tensor<string, []>("op_1626_end_0"), val = tensor<int32, [4]>([2, 400, 1, 77])];
            tensor<bool, [4]> var_1626_end_mask_0 = const()[name = tensor<string, []>("op_1626_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_1626_cast = slice_by_index(begin = var_1626_begin_0, end = var_1626_end_0, end_mask = var_1626_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1630_begin_0 = const()[name = tensor<string, []>("op_1630_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_1630_end_0 = const()[name = tensor<string, []>("op_1630_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_1630_end_mask_0 = const()[name = tensor<string, []>("op_1630_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_1630_cast = slice_by_index(begin = var_1630_begin_0, end = var_1630_end_0, end_mask = var_1630_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1634_begin_0 = const()[name = tensor<string, []>("op_1634_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_1634_end_0 = const()[name = tensor<string, []>("op_1634_end_0"), val = tensor<int32, [4]>([2, 560, 1, 77])];
            tensor<bool, [4]> var_1634_end_mask_0 = const()[name = tensor<string, []>("op_1634_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_1634_cast = slice_by_index(begin = var_1634_begin_0, end = var_1634_end_0, end_mask = var_1634_end_mask_0, x = v_11_cast);
            tensor<int32, [4]> var_1638_begin_0 = const()[name = tensor<string, []>("op_1638_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_1638_end_0 = const()[name = tensor<string, []>("op_1638_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_1638_end_mask_0 = const()[name = tensor<string, []>("op_1638_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_1638_cast = slice_by_index(begin = var_1638_begin_0, end = var_1638_end_0, end_mask = var_1638_end_mask_0, x = v_11_cast);
            tensor<string, []> var_1642_equation_0 = const()[name = tensor<string, []>("op_1642_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1642_cast = einsum(equation = var_1642_equation_0, values = (var_1580_cast, var_1545_cast));
            tensor<fp16, []> var_1643_to_fp16 = const()[name = tensor<string, []>("op_1643_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_81_cast = mul(x = var_1642_cast, y = var_1643_to_fp16);
            tensor<string, []> var_1646_equation_0 = const()[name = tensor<string, []>("op_1646_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1646_cast = einsum(equation = var_1646_equation_0, values = (var_1584_cast, var_1549_cast));
            tensor<fp16, []> var_1647_to_fp16 = const()[name = tensor<string, []>("op_1647_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_83_cast = mul(x = var_1646_cast, y = var_1647_to_fp16);
            tensor<string, []> var_1650_equation_0 = const()[name = tensor<string, []>("op_1650_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1650_cast = einsum(equation = var_1650_equation_0, values = (var_1588_cast, var_1553_cast));
            tensor<fp16, []> var_1651_to_fp16 = const()[name = tensor<string, []>("op_1651_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_85_cast = mul(x = var_1650_cast, y = var_1651_to_fp16);
            tensor<string, []> var_1654_equation_0 = const()[name = tensor<string, []>("op_1654_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1654_cast = einsum(equation = var_1654_equation_0, values = (var_1592_cast, var_1557_cast));
            tensor<fp16, []> var_1655_to_fp16 = const()[name = tensor<string, []>("op_1655_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_87_cast = mul(x = var_1654_cast, y = var_1655_to_fp16);
            tensor<string, []> var_1658_equation_0 = const()[name = tensor<string, []>("op_1658_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1658_cast = einsum(equation = var_1658_equation_0, values = (var_1596_cast, var_1561_cast));
            tensor<fp16, []> var_1659_to_fp16 = const()[name = tensor<string, []>("op_1659_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_89_cast = mul(x = var_1658_cast, y = var_1659_to_fp16);
            tensor<string, []> var_1662_equation_0 = const()[name = tensor<string, []>("op_1662_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1662_cast = einsum(equation = var_1662_equation_0, values = (var_1600_cast, var_1565_cast));
            tensor<fp16, []> var_1663_to_fp16 = const()[name = tensor<string, []>("op_1663_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_91_cast = mul(x = var_1662_cast, y = var_1663_to_fp16);
            tensor<string, []> var_1666_equation_0 = const()[name = tensor<string, []>("op_1666_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1666_cast = einsum(equation = var_1666_equation_0, values = (var_1604_cast, var_1569_cast));
            tensor<fp16, []> var_1667_to_fp16 = const()[name = tensor<string, []>("op_1667_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_93_cast = mul(x = var_1666_cast, y = var_1667_to_fp16);
            tensor<string, []> var_1670_equation_0 = const()[name = tensor<string, []>("op_1670_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_1670_cast = einsum(equation = var_1670_equation_0, values = (var_1608_cast, var_1573_cast));
            tensor<fp16, []> var_1671_to_fp16 = const()[name = tensor<string, []>("op_1671_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_95_cast = mul(x = var_1670_cast, y = var_1671_to_fp16);
            tensor<fp16, [2, 77, 1, 1024]> var_1673_cast = softmax(axis = var_1213, x = aw_81_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1674_cast = softmax(axis = var_1213, x = aw_83_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1675_cast = softmax(axis = var_1213, x = aw_85_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1676_cast = softmax(axis = var_1213, x = aw_87_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1677_cast = softmax(axis = var_1213, x = aw_89_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1678_cast = softmax(axis = var_1213, x = aw_91_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1679_cast = softmax(axis = var_1213, x = aw_93_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_1680_cast = softmax(axis = var_1213, x = aw_95_cast);
            tensor<string, []> var_1682_equation_0 = const()[name = tensor<string, []>("op_1682_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1682_cast = einsum(equation = var_1682_equation_0, values = (var_1610_cast, var_1673_cast));
            tensor<string, []> var_1684_equation_0 = const()[name = tensor<string, []>("op_1684_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1684_cast = einsum(equation = var_1684_equation_0, values = (var_1614_cast, var_1674_cast));
            tensor<string, []> var_1686_equation_0 = const()[name = tensor<string, []>("op_1686_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1686_cast = einsum(equation = var_1686_equation_0, values = (var_1618_cast, var_1675_cast));
            tensor<string, []> var_1688_equation_0 = const()[name = tensor<string, []>("op_1688_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1688_cast = einsum(equation = var_1688_equation_0, values = (var_1622_cast, var_1676_cast));
            tensor<string, []> var_1690_equation_0 = const()[name = tensor<string, []>("op_1690_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1690_cast = einsum(equation = var_1690_equation_0, values = (var_1626_cast, var_1677_cast));
            tensor<string, []> var_1692_equation_0 = const()[name = tensor<string, []>("op_1692_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1692_cast = einsum(equation = var_1692_equation_0, values = (var_1630_cast, var_1678_cast));
            tensor<string, []> var_1694_equation_0 = const()[name = tensor<string, []>("op_1694_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1694_cast = einsum(equation = var_1694_equation_0, values = (var_1634_cast, var_1679_cast));
            tensor<string, []> var_1696_equation_0 = const()[name = tensor<string, []>("op_1696_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_1696_cast = einsum(equation = var_1696_equation_0, values = (var_1638_cast, var_1680_cast));
            tensor<bool, []> input_81_interleave_0 = const()[name = tensor<string, []>("input_81_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_81_cast = concat(axis = var_1213, interleave = input_81_interleave_0, values = (var_1682_cast, var_1684_cast, var_1686_cast, var_1688_cast, var_1690_cast, var_1692_cast, var_1694_cast, var_1696_cast));
            tensor<int32, [2]> var_1702 = const()[name = tensor<string, []>("op_1702"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1704 = const()[name = tensor<string, []>("op_1704"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_1706_pad_type_0 = const()[name = tensor<string, []>("op_1706_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1706_pad_0 = const()[name = tensor<string, []>("op_1706_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(45204032)))];
            tensor<fp16, [640]> down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46023296)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1706_cast = conv(bias = down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_1704, groups = var_1213, pad = var_1706_pad_0, pad_type = var_1706_pad_type_0, strides = var_1702, weight = down_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_81_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_17_cast = add(x = var_1706_cast, y = inputs_15_cast);
            tensor<int32, [1]> var_1710 = const()[name = tensor<string, []>("op_1710"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_17_cast = reduce_mean(axes = var_1710, keep_dims = var_1208, x = inputs_17_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_17_cast = sub(x = inputs_17_cast, y = channels_mean_17_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_17_cast = mul(x = zero_mean_17_cast, y = zero_mean_17_cast);
            tensor<int32, [1]> var_1714 = const()[name = tensor<string, []>("op_1714"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_1715_cast = reduce_mean(axes = var_1714, keep_dims = var_1208, x = zero_mean_sq_17_cast);
            tensor<fp16, []> var_1716_to_fp16 = const()[name = tensor<string, []>("op_1716_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_1717_cast = add(x = var_1715_cast, y = var_1716_to_fp16);
            tensor<fp16, []> denom_17_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_17_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_17_cast = rsqrt(epsilon = denom_17_epsilon_0_to_fp16, x = var_1717_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_17_cast = mul(x = zero_mean_17_cast, y = denom_17_cast);
            tensor<fp16, [1, 640, 1, 1]> var_1721_to_fp16 = const()[name = tensor<string, []>("op_1721_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46024640)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1722_cast = add(x = out_17_cast, y = var_1721_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_1724_to_fp16 = const()[name = tensor<string, []>("op_1724_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46025984)))];
            tensor<fp16, [2, 640, 1, 1024]> input_83_cast = mul(x = var_1722_cast, y = var_1724_to_fp16);
            tensor<int32, [2]> var_1732 = const()[name = tensor<string, []>("op_1732"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1734 = const()[name = tensor<string, []>("op_1734"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_1736_pad_type_0 = const()[name = tensor<string, []>("op_1736_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1736_pad_0 = const()[name = tensor<string, []>("op_1736_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [5120, 640, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [5120, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46027328)))];
            tensor<fp16, [5120]> down_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(52580992)))];
            tensor<fp16, [2, 5120, 1, 1024]> var_1736_cast = conv(bias = down_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_1734, groups = var_1213, pad = var_1736_pad_0, pad_type = var_1736_pad_type_0, strides = var_1732, weight = down_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_83_cast);
            tensor<int32, [2]> var_1737_split_sizes_0 = const()[name = tensor<string, []>("op_1737_split_sizes_0"), val = tensor<int32, [2]>([2560, 2560])];
            tensor<int32, []> var_1737_axis_0 = const()[name = tensor<string, []>("op_1737_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 2560, 1, 1024]> var_1737_cast_0, tensor<fp16, [2, 2560, 1, 1024]> var_1737_cast_1 = split(axis = var_1737_axis_0, split_sizes = var_1737_split_sizes_0, x = var_1736_cast);
            tensor<string, []> var_1739_mode_0 = const()[name = tensor<string, []>("op_1739_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 2560, 1, 1024]> var_1739_cast = gelu(mode = var_1739_mode_0, x = var_1737_cast_1);
            tensor<fp16, [2, 2560, 1, 1024]> input_85_cast = mul(x = var_1737_cast_0, y = var_1739_cast);
            tensor<int32, [2]> var_1743 = const()[name = tensor<string, []>("op_1743"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1745 = const()[name = tensor<string, []>("op_1745"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_1747_pad_type_0 = const()[name = tensor<string, []>("op_1747_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1747_pad_0 = const()[name = tensor<string, []>("op_1747_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 2560, 1, 1]> down_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [640, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(52591296)))];
            tensor<fp16, [640]> down_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55868160)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1747_cast = conv(bias = down_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_1745, groups = var_1213, pad = var_1747_pad_0, pad_type = var_1747_pad_type_0, strides = var_1743, weight = down_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_85_cast);
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_51_cast = add(x = var_1747_cast, y = inputs_17_cast);
            tensor<int32, [4]> var_1749 = const()[name = tensor<string, []>("op_1749"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> input_87_cast = reshape(shape = var_1749, x = hidden_states_51_cast);
            tensor<int32, [2]> var_1753 = const()[name = tensor<string, []>("op_1753"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1755 = const()[name = tensor<string, []>("op_1755"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_53_pad_type_0 = const()[name = tensor<string, []>("hidden_states_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_53_pad_0 = const()[name = tensor<string, []>("hidden_states_53_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_0_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_proj_out_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55869504)))];
            tensor<fp16, [640]> down_blocks_1_attentions_0_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_0_proj_out_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56688768)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_53_cast = conv(bias = down_blocks_1_attentions_0_proj_out_bias_to_fp16, dilations = var_1755, groups = var_1213, pad = hidden_states_53_pad_0, pad_type = hidden_states_53_pad_type_0, strides = var_1753, weight = down_blocks_1_attentions_0_proj_out_weight_to_fp16, x = input_87_cast);
            tensor<fp16, [2, 640, 32, 32]> input_89_cast = add(x = hidden_states_53_cast, y = hidden_states_41_cast);
            tensor<int32, [5]> reshape_36_shape_0 = const()[name = tensor<string, []>("reshape_36_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_36_cast = reshape(shape = reshape_36_shape_0, x = input_89_cast);
            tensor<int32, [3]> reduce_mean_27_axes_0 = const()[name = tensor<string, []>("reduce_mean_27_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_27_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_27_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_27_cast = reduce_mean(axes = reduce_mean_27_axes_0, keep_dims = reduce_mean_27_keep_dims_0, x = reshape_36_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_18_cast = sub(x = reshape_36_cast, y = reduce_mean_27_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_9_cast = square(x = sub_18_cast);
            tensor<int32, [3]> reduce_mean_29_axes_0 = const()[name = tensor<string, []>("reduce_mean_29_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_29_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_29_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_29_cast = reduce_mean(axes = reduce_mean_29_axes_0, keep_dims = reduce_mean_29_keep_dims_0, x = square_9_cast);
            tensor<fp16, []> add_18_y_0_to_fp16 = const()[name = tensor<string, []>("add_18_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_18_cast = add(x = reduce_mean_29_cast, y = add_18_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_9_cast = sqrt(x = add_18_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_9_cast = real_div(x = sub_18_cast, y = sqrt_9_cast);
            tensor<int32, [4]> reshape_37_shape_0 = const()[name = tensor<string, []>("reshape_37_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_37_cast = reshape(shape = reshape_37_shape_0, x = real_div_9_cast);
            tensor<fp16, [640]> add_19_mean_0_to_fp16 = const()[name = tensor<string, []>("add_19_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56690112)))];
            tensor<fp16, [640]> add_19_variance_0_to_fp16 = const()[name = tensor<string, []>("add_19_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56691456)))];
            tensor<fp16, [640]> add_19_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_19_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56692800)))];
            tensor<fp16, [640]> add_19_beta_0_to_fp16 = const()[name = tensor<string, []>("add_19_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56694144)))];
            tensor<fp16, []> add_19_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_19_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_19_cast = batch_norm(beta = add_19_beta_0_to_fp16, epsilon = add_19_epsilon_0_to_fp16, gamma = add_19_gamma_0_to_fp16, mean = add_19_mean_0_to_fp16, variance = add_19_variance_0_to_fp16, x = reshape_37_cast);
            tensor<fp16, [2, 640, 32, 32]> input_93_cast = silu(x = add_19_cast);
            tensor<int32, [2]> var_1770 = const()[name = tensor<string, []>("op_1770"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1772 = const()[name = tensor<string, []>("op_1772"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_55_pad_type_0 = const()[name = tensor<string, []>("hidden_states_55_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_55_pad_0 = const()[name = tensor<string, []>("hidden_states_55_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> down_blocks_1_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56695488)))];
            tensor<fp16, [640]> down_blocks_1_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64068352)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_55_cast = conv(bias = down_blocks_1_resnets_1_conv1_bias_to_fp16, dilations = var_1772, groups = var_1213, pad = hidden_states_55_pad_0, pad_type = hidden_states_55_pad_type_0, strides = var_1770, weight = down_blocks_1_resnets_1_conv1_weight_to_fp16, x = input_93_cast);
            tensor<int32, [2]> var_1778 = const()[name = tensor<string, []>("op_1778"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1780 = const()[name = tensor<string, []>("op_1780"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_7_pad_type_0 = const()[name = tensor<string, []>("temb_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_7_pad_0 = const()[name = tensor<string, []>("temb_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1280, 1, 1]> down_blocks_1_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [640, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64069696)))];
            tensor<fp16, [640]> down_blocks_1_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65708160)))];
            tensor<fp16, [2, 640, 1, 1]> temb_7_cast = conv(bias = down_blocks_1_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_1780, groups = var_1213, pad = temb_7_pad_0, pad_type = temb_7_pad_type_0, strides = var_1778, weight = down_blocks_1_resnets_1_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 640, 32, 32]> input_97_cast = add(x = hidden_states_55_cast, y = temb_7_cast);
            tensor<int32, [5]> reshape_40_shape_0 = const()[name = tensor<string, []>("reshape_40_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_40_cast = reshape(shape = reshape_40_shape_0, x = input_97_cast);
            tensor<int32, [3]> reduce_mean_30_axes_0 = const()[name = tensor<string, []>("reduce_mean_30_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_30_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_30_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_30_cast = reduce_mean(axes = reduce_mean_30_axes_0, keep_dims = reduce_mean_30_keep_dims_0, x = reshape_40_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_20_cast = sub(x = reshape_40_cast, y = reduce_mean_30_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_10_cast = square(x = sub_20_cast);
            tensor<int32, [3]> reduce_mean_32_axes_0 = const()[name = tensor<string, []>("reduce_mean_32_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_32_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_32_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_32_cast = reduce_mean(axes = reduce_mean_32_axes_0, keep_dims = reduce_mean_32_keep_dims_0, x = square_10_cast);
            tensor<fp16, []> add_20_y_0_to_fp16 = const()[name = tensor<string, []>("add_20_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_20_cast = add(x = reduce_mean_32_cast, y = add_20_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_10_cast = sqrt(x = add_20_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_10_cast = real_div(x = sub_20_cast, y = sqrt_10_cast);
            tensor<int32, [4]> reshape_41_shape_0 = const()[name = tensor<string, []>("reshape_41_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_41_cast = reshape(shape = reshape_41_shape_0, x = real_div_10_cast);
            tensor<fp16, [640]> add_21_mean_0_to_fp16 = const()[name = tensor<string, []>("add_21_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65709504)))];
            tensor<fp16, [640]> add_21_variance_0_to_fp16 = const()[name = tensor<string, []>("add_21_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65710848)))];
            tensor<fp16, [640]> add_21_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_21_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65712192)))];
            tensor<fp16, [640]> add_21_beta_0_to_fp16 = const()[name = tensor<string, []>("add_21_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65713536)))];
            tensor<fp16, []> add_21_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_21_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_21_cast = batch_norm(beta = add_21_beta_0_to_fp16, epsilon = add_21_epsilon_0_to_fp16, gamma = add_21_gamma_0_to_fp16, mean = add_21_mean_0_to_fp16, variance = add_21_variance_0_to_fp16, x = reshape_41_cast);
            tensor<fp16, [2, 640, 32, 32]> input_101_cast = silu(x = add_21_cast);
            tensor<int32, [2]> var_1790 = const()[name = tensor<string, []>("op_1790"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1792 = const()[name = tensor<string, []>("op_1792"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_57_pad_type_0 = const()[name = tensor<string, []>("hidden_states_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_57_pad_0 = const()[name = tensor<string, []>("hidden_states_57_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> down_blocks_1_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65714880)))];
            tensor<fp16, [640]> down_blocks_1_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73087744)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_57_cast = conv(bias = down_blocks_1_resnets_1_conv2_bias_to_fp16, dilations = var_1792, groups = var_1213, pad = hidden_states_57_pad_0, pad_type = hidden_states_57_pad_type_0, strides = var_1790, weight = down_blocks_1_resnets_1_conv2_weight_to_fp16, x = input_101_cast);
            tensor<fp16, [2, 640, 32, 32]> hidden_states_59_cast = add(x = input_89_cast, y = hidden_states_57_cast);
            tensor<int32, [5]> reshape_44_shape_0 = const()[name = tensor<string, []>("reshape_44_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_44_cast = reshape(shape = reshape_44_shape_0, x = hidden_states_59_cast);
            tensor<int32, [3]> reduce_mean_33_axes_0 = const()[name = tensor<string, []>("reduce_mean_33_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_33_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_33_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_33_cast = reduce_mean(axes = reduce_mean_33_axes_0, keep_dims = reduce_mean_33_keep_dims_0, x = reshape_44_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_22_cast = sub(x = reshape_44_cast, y = reduce_mean_33_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_11_cast = square(x = sub_22_cast);
            tensor<int32, [3]> reduce_mean_35_axes_0 = const()[name = tensor<string, []>("reduce_mean_35_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_35_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_35_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_35_cast = reduce_mean(axes = reduce_mean_35_axes_0, keep_dims = reduce_mean_35_keep_dims_0, x = square_11_cast);
            tensor<fp16, []> add_22_y_0_to_fp16 = const()[name = tensor<string, []>("add_22_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_22_cast = add(x = reduce_mean_35_cast, y = add_22_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_11_cast = sqrt(x = add_22_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_11_cast = real_div(x = sub_22_cast, y = sqrt_11_cast);
            tensor<int32, [4]> reshape_45_shape_0 = const()[name = tensor<string, []>("reshape_45_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_45_cast = reshape(shape = reshape_45_shape_0, x = real_div_11_cast);
            tensor<fp16, [640]> add_23_mean_0_to_fp16 = const()[name = tensor<string, []>("add_23_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73089088)))];
            tensor<fp16, [640]> add_23_variance_0_to_fp16 = const()[name = tensor<string, []>("add_23_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73090432)))];
            tensor<fp16, [640]> add_23_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_23_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73091776)))];
            tensor<fp16, [640]> add_23_beta_0_to_fp16 = const()[name = tensor<string, []>("add_23_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73093120)))];
            tensor<fp16, []> add_23_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_23_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_23_cast = batch_norm(beta = add_23_beta_0_to_fp16, epsilon = add_23_epsilon_0_to_fp16, gamma = add_23_gamma_0_to_fp16, mean = add_23_mean_0_to_fp16, variance = add_23_variance_0_to_fp16, x = reshape_45_cast);
            tensor<int32, [2]> var_1812 = const()[name = tensor<string, []>("op_1812"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1814 = const()[name = tensor<string, []>("op_1814"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_61_pad_type_0 = const()[name = tensor<string, []>("hidden_states_61_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_61_pad_0 = const()[name = tensor<string, []>("hidden_states_61_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_proj_in_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73094464)))];
            tensor<fp16, [640]> down_blocks_1_attentions_1_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_proj_in_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73913728)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_61_cast = conv(bias = down_blocks_1_attentions_1_proj_in_bias_to_fp16, dilations = var_1814, groups = var_1213, pad = hidden_states_61_pad_0, pad_type = hidden_states_61_pad_type_0, strides = var_1812, weight = down_blocks_1_attentions_1_proj_in_weight_to_fp16, x = add_23_cast);
            tensor<int32, [4]> var_1819 = const()[name = tensor<string, []>("op_1819"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<fp16, [2, 640, 1, 1024]> inputs_19_cast = reshape(shape = var_1819, x = hidden_states_61_cast);
            tensor<int32, [1]> var_1829 = const()[name = tensor<string, []>("op_1829"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_19_cast = reduce_mean(axes = var_1829, keep_dims = var_1208, x = inputs_19_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_19_cast = sub(x = inputs_19_cast, y = channels_mean_19_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_19_cast = mul(x = zero_mean_19_cast, y = zero_mean_19_cast);
            tensor<int32, [1]> var_1833 = const()[name = tensor<string, []>("op_1833"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_1834_cast = reduce_mean(axes = var_1833, keep_dims = var_1208, x = zero_mean_sq_19_cast);
            tensor<fp16, []> var_1835_to_fp16 = const()[name = tensor<string, []>("op_1835_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_1836_cast = add(x = var_1834_cast, y = var_1835_to_fp16);
            tensor<fp16, []> denom_19_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_19_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_19_cast = rsqrt(epsilon = denom_19_epsilon_0_to_fp16, x = var_1836_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_19_cast = mul(x = zero_mean_19_cast, y = denom_19_cast);
            tensor<fp16, [1, 640, 1, 1]> var_1840_to_fp16 = const()[name = tensor<string, []>("op_1840_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73915072)))];
            tensor<fp16, [2, 640, 1, 1024]> var_1841_cast = add(x = out_19_cast, y = var_1840_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_1843_to_fp16 = const()[name = tensor<string, []>("op_1843_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73916416)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_63_cast = mul(x = var_1841_cast, y = var_1843_to_fp16);
            tensor<int32, [2]> var_1850 = const()[name = tensor<string, []>("op_1850"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1852 = const()[name = tensor<string, []>("op_1852"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_13_pad_type_0 = const()[name = tensor<string, []>("q_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_13_pad_0 = const()[name = tensor<string, []>("q_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73917760)))];
            tensor<fp16, [2, 640, 1, 1024]> q_13_cast = conv(dilations = var_1852, groups = var_1213, pad = q_13_pad_0, pad_type = q_13_pad_type_0, strides = var_1850, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_63_cast);
            tensor<int32, [2]> var_1856 = const()[name = tensor<string, []>("op_1856"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1858 = const()[name = tensor<string, []>("op_1858"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_25_pad_type_0 = const()[name = tensor<string, []>("k_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_25_pad_0 = const()[name = tensor<string, []>("k_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74737024)))];
            tensor<fp16, [2, 640, 1, 1024]> k_25_cast = conv(dilations = var_1858, groups = var_1213, pad = k_25_pad_0, pad_type = k_25_pad_type_0, strides = var_1856, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_63_cast);
            tensor<int32, [2]> var_1862 = const()[name = tensor<string, []>("op_1862"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1864 = const()[name = tensor<string, []>("op_1864"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_13_pad_type_0 = const()[name = tensor<string, []>("v_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_13_pad_0 = const()[name = tensor<string, []>("v_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(75556288)))];
            tensor<fp16, [2, 640, 1, 1024]> v_13_cast = conv(dilations = var_1864, groups = var_1213, pad = v_13_pad_0, pad_type = v_13_pad_type_0, strides = var_1862, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_63_cast);
            tensor<int32, [4]> var_1868_begin_0 = const()[name = tensor<string, []>("op_1868_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1868_end_0 = const()[name = tensor<string, []>("op_1868_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_1868_end_mask_0 = const()[name = tensor<string, []>("op_1868_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1868_cast = slice_by_index(begin = var_1868_begin_0, end = var_1868_end_0, end_mask = var_1868_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1872_begin_0 = const()[name = tensor<string, []>("op_1872_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_1872_end_0 = const()[name = tensor<string, []>("op_1872_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_1872_end_mask_0 = const()[name = tensor<string, []>("op_1872_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1872_cast = slice_by_index(begin = var_1872_begin_0, end = var_1872_end_0, end_mask = var_1872_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1876_begin_0 = const()[name = tensor<string, []>("op_1876_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_1876_end_0 = const()[name = tensor<string, []>("op_1876_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_1876_end_mask_0 = const()[name = tensor<string, []>("op_1876_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1876_cast = slice_by_index(begin = var_1876_begin_0, end = var_1876_end_0, end_mask = var_1876_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1880_begin_0 = const()[name = tensor<string, []>("op_1880_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_1880_end_0 = const()[name = tensor<string, []>("op_1880_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_1880_end_mask_0 = const()[name = tensor<string, []>("op_1880_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1880_cast = slice_by_index(begin = var_1880_begin_0, end = var_1880_end_0, end_mask = var_1880_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1884_begin_0 = const()[name = tensor<string, []>("op_1884_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1884_end_0 = const()[name = tensor<string, []>("op_1884_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_1884_end_mask_0 = const()[name = tensor<string, []>("op_1884_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1884_cast = slice_by_index(begin = var_1884_begin_0, end = var_1884_end_0, end_mask = var_1884_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1888_begin_0 = const()[name = tensor<string, []>("op_1888_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_1888_end_0 = const()[name = tensor<string, []>("op_1888_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_1888_end_mask_0 = const()[name = tensor<string, []>("op_1888_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1888_cast = slice_by_index(begin = var_1888_begin_0, end = var_1888_end_0, end_mask = var_1888_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1892_begin_0 = const()[name = tensor<string, []>("op_1892_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_1892_end_0 = const()[name = tensor<string, []>("op_1892_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_1892_end_mask_0 = const()[name = tensor<string, []>("op_1892_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1892_cast = slice_by_index(begin = var_1892_begin_0, end = var_1892_end_0, end_mask = var_1892_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> var_1896_begin_0 = const()[name = tensor<string, []>("op_1896_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_1896_end_0 = const()[name = tensor<string, []>("op_1896_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_1896_end_mask_0 = const()[name = tensor<string, []>("op_1896_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1896_cast = slice_by_index(begin = var_1896_begin_0, end = var_1896_end_0, end_mask = var_1896_end_mask_0, x = q_13_cast);
            tensor<int32, [4]> k_27_perm_0 = const()[name = tensor<string, []>("k_27_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_1903_begin_0 = const()[name = tensor<string, []>("op_1903_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1903_end_0 = const()[name = tensor<string, []>("op_1903_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 80])];
            tensor<bool, [4]> var_1903_end_mask_0 = const()[name = tensor<string, []>("op_1903_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 640]> transpose_25 = transpose(perm = k_27_perm_0, x = k_25_cast);
            tensor<fp16, [2, 1024, 1, 80]> var_1903_cast = slice_by_index(begin = var_1903_begin_0, end = var_1903_end_0, end_mask = var_1903_end_mask_0, x = transpose_25);
            tensor<int32, [4]> var_1907_begin_0 = const()[name = tensor<string, []>("op_1907_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_1907_end_0 = const()[name = tensor<string, []>("op_1907_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 160])];
            tensor<bool, [4]> var_1907_end_mask_0 = const()[name = tensor<string, []>("op_1907_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1907_cast = slice_by_index(begin = var_1907_begin_0, end = var_1907_end_0, end_mask = var_1907_end_mask_0, x = transpose_25);
            tensor<int32, [4]> var_1911_begin_0 = const()[name = tensor<string, []>("op_1911_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_1911_end_0 = const()[name = tensor<string, []>("op_1911_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 240])];
            tensor<bool, [4]> var_1911_end_mask_0 = const()[name = tensor<string, []>("op_1911_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1911_cast = slice_by_index(begin = var_1911_begin_0, end = var_1911_end_0, end_mask = var_1911_end_mask_0, x = transpose_25);
            tensor<int32, [4]> var_1915_begin_0 = const()[name = tensor<string, []>("op_1915_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_1915_end_0 = const()[name = tensor<string, []>("op_1915_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 320])];
            tensor<bool, [4]> var_1915_end_mask_0 = const()[name = tensor<string, []>("op_1915_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1915_cast = slice_by_index(begin = var_1915_begin_0, end = var_1915_end_0, end_mask = var_1915_end_mask_0, x = transpose_25);
            tensor<int32, [4]> var_1919_begin_0 = const()[name = tensor<string, []>("op_1919_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_1919_end_0 = const()[name = tensor<string, []>("op_1919_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 400])];
            tensor<bool, [4]> var_1919_end_mask_0 = const()[name = tensor<string, []>("op_1919_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1919_cast = slice_by_index(begin = var_1919_begin_0, end = var_1919_end_0, end_mask = var_1919_end_mask_0, x = transpose_25);
            tensor<int32, [4]> var_1923_begin_0 = const()[name = tensor<string, []>("op_1923_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 400])];
            tensor<int32, [4]> var_1923_end_0 = const()[name = tensor<string, []>("op_1923_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 480])];
            tensor<bool, [4]> var_1923_end_mask_0 = const()[name = tensor<string, []>("op_1923_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1923_cast = slice_by_index(begin = var_1923_begin_0, end = var_1923_end_0, end_mask = var_1923_end_mask_0, x = transpose_25);
            tensor<int32, [4]> var_1927_begin_0 = const()[name = tensor<string, []>("op_1927_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_1927_end_0 = const()[name = tensor<string, []>("op_1927_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 560])];
            tensor<bool, [4]> var_1927_end_mask_0 = const()[name = tensor<string, []>("op_1927_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1927_cast = slice_by_index(begin = var_1927_begin_0, end = var_1927_end_0, end_mask = var_1927_end_mask_0, x = transpose_25);
            tensor<int32, [4]> var_1931_begin_0 = const()[name = tensor<string, []>("op_1931_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 560])];
            tensor<int32, [4]> var_1931_end_0 = const()[name = tensor<string, []>("op_1931_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 640])];
            tensor<bool, [4]> var_1931_end_mask_0 = const()[name = tensor<string, []>("op_1931_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_1931_cast = slice_by_index(begin = var_1931_begin_0, end = var_1931_end_0, end_mask = var_1931_end_mask_0, x = transpose_25);
            tensor<int32, [4]> var_1933_begin_0 = const()[name = tensor<string, []>("op_1933_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1933_end_0 = const()[name = tensor<string, []>("op_1933_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_1933_end_mask_0 = const()[name = tensor<string, []>("op_1933_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1933_cast = slice_by_index(begin = var_1933_begin_0, end = var_1933_end_0, end_mask = var_1933_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1937_begin_0 = const()[name = tensor<string, []>("op_1937_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_1937_end_0 = const()[name = tensor<string, []>("op_1937_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_1937_end_mask_0 = const()[name = tensor<string, []>("op_1937_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1937_cast = slice_by_index(begin = var_1937_begin_0, end = var_1937_end_0, end_mask = var_1937_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1941_begin_0 = const()[name = tensor<string, []>("op_1941_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_1941_end_0 = const()[name = tensor<string, []>("op_1941_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_1941_end_mask_0 = const()[name = tensor<string, []>("op_1941_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1941_cast = slice_by_index(begin = var_1941_begin_0, end = var_1941_end_0, end_mask = var_1941_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1945_begin_0 = const()[name = tensor<string, []>("op_1945_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_1945_end_0 = const()[name = tensor<string, []>("op_1945_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_1945_end_mask_0 = const()[name = tensor<string, []>("op_1945_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1945_cast = slice_by_index(begin = var_1945_begin_0, end = var_1945_end_0, end_mask = var_1945_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1949_begin_0 = const()[name = tensor<string, []>("op_1949_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_1949_end_0 = const()[name = tensor<string, []>("op_1949_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_1949_end_mask_0 = const()[name = tensor<string, []>("op_1949_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1949_cast = slice_by_index(begin = var_1949_begin_0, end = var_1949_end_0, end_mask = var_1949_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1953_begin_0 = const()[name = tensor<string, []>("op_1953_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_1953_end_0 = const()[name = tensor<string, []>("op_1953_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_1953_end_mask_0 = const()[name = tensor<string, []>("op_1953_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1953_cast = slice_by_index(begin = var_1953_begin_0, end = var_1953_end_0, end_mask = var_1953_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1957_begin_0 = const()[name = tensor<string, []>("op_1957_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_1957_end_0 = const()[name = tensor<string, []>("op_1957_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_1957_end_mask_0 = const()[name = tensor<string, []>("op_1957_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1957_cast = slice_by_index(begin = var_1957_begin_0, end = var_1957_end_0, end_mask = var_1957_end_mask_0, x = v_13_cast);
            tensor<int32, [4]> var_1961_begin_0 = const()[name = tensor<string, []>("op_1961_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_1961_end_0 = const()[name = tensor<string, []>("op_1961_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_1961_end_mask_0 = const()[name = tensor<string, []>("op_1961_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_1961_cast = slice_by_index(begin = var_1961_begin_0, end = var_1961_end_0, end_mask = var_1961_end_mask_0, x = v_13_cast);
            tensor<string, []> var_1965_equation_0 = const()[name = tensor<string, []>("op_1965_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1965_cast = einsum(equation = var_1965_equation_0, values = (var_1903_cast, var_1868_cast));
            tensor<fp16, []> var_1966_to_fp16 = const()[name = tensor<string, []>("op_1966_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_97_cast = mul(x = var_1965_cast, y = var_1966_to_fp16);
            tensor<string, []> var_1969_equation_0 = const()[name = tensor<string, []>("op_1969_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1969_cast = einsum(equation = var_1969_equation_0, values = (var_1907_cast, var_1872_cast));
            tensor<fp16, []> var_1970_to_fp16 = const()[name = tensor<string, []>("op_1970_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_99_cast = mul(x = var_1969_cast, y = var_1970_to_fp16);
            tensor<string, []> var_1973_equation_0 = const()[name = tensor<string, []>("op_1973_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1973_cast = einsum(equation = var_1973_equation_0, values = (var_1911_cast, var_1876_cast));
            tensor<fp16, []> var_1974_to_fp16 = const()[name = tensor<string, []>("op_1974_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_101_cast = mul(x = var_1973_cast, y = var_1974_to_fp16);
            tensor<string, []> var_1977_equation_0 = const()[name = tensor<string, []>("op_1977_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1977_cast = einsum(equation = var_1977_equation_0, values = (var_1915_cast, var_1880_cast));
            tensor<fp16, []> var_1978_to_fp16 = const()[name = tensor<string, []>("op_1978_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_103_cast = mul(x = var_1977_cast, y = var_1978_to_fp16);
            tensor<string, []> var_1981_equation_0 = const()[name = tensor<string, []>("op_1981_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1981_cast = einsum(equation = var_1981_equation_0, values = (var_1919_cast, var_1884_cast));
            tensor<fp16, []> var_1982_to_fp16 = const()[name = tensor<string, []>("op_1982_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_105_cast = mul(x = var_1981_cast, y = var_1982_to_fp16);
            tensor<string, []> var_1985_equation_0 = const()[name = tensor<string, []>("op_1985_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1985_cast = einsum(equation = var_1985_equation_0, values = (var_1923_cast, var_1888_cast));
            tensor<fp16, []> var_1986_to_fp16 = const()[name = tensor<string, []>("op_1986_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_107_cast = mul(x = var_1985_cast, y = var_1986_to_fp16);
            tensor<string, []> var_1989_equation_0 = const()[name = tensor<string, []>("op_1989_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1989_cast = einsum(equation = var_1989_equation_0, values = (var_1927_cast, var_1892_cast));
            tensor<fp16, []> var_1990_to_fp16 = const()[name = tensor<string, []>("op_1990_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_109_cast = mul(x = var_1989_cast, y = var_1990_to_fp16);
            tensor<string, []> var_1993_equation_0 = const()[name = tensor<string, []>("op_1993_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_1993_cast = einsum(equation = var_1993_equation_0, values = (var_1931_cast, var_1896_cast));
            tensor<fp16, []> var_1994_to_fp16 = const()[name = tensor<string, []>("op_1994_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_111_cast = mul(x = var_1993_cast, y = var_1994_to_fp16);
            tensor<fp16, [2, 1024, 1, 1024]> var_1996_cast = softmax(axis = var_1213, x = aw_97_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1997_cast = softmax(axis = var_1213, x = aw_99_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1998_cast = softmax(axis = var_1213, x = aw_101_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_1999_cast = softmax(axis = var_1213, x = aw_103_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_2000_cast = softmax(axis = var_1213, x = aw_105_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_2001_cast = softmax(axis = var_1213, x = aw_107_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_2002_cast = softmax(axis = var_1213, x = aw_109_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_2003_cast = softmax(axis = var_1213, x = aw_111_cast);
            tensor<string, []> var_2005_equation_0 = const()[name = tensor<string, []>("op_2005_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2005_cast = einsum(equation = var_2005_equation_0, values = (var_1933_cast, var_1996_cast));
            tensor<string, []> var_2007_equation_0 = const()[name = tensor<string, []>("op_2007_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2007_cast = einsum(equation = var_2007_equation_0, values = (var_1937_cast, var_1997_cast));
            tensor<string, []> var_2009_equation_0 = const()[name = tensor<string, []>("op_2009_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2009_cast = einsum(equation = var_2009_equation_0, values = (var_1941_cast, var_1998_cast));
            tensor<string, []> var_2011_equation_0 = const()[name = tensor<string, []>("op_2011_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2011_cast = einsum(equation = var_2011_equation_0, values = (var_1945_cast, var_1999_cast));
            tensor<string, []> var_2013_equation_0 = const()[name = tensor<string, []>("op_2013_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2013_cast = einsum(equation = var_2013_equation_0, values = (var_1949_cast, var_2000_cast));
            tensor<string, []> var_2015_equation_0 = const()[name = tensor<string, []>("op_2015_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2015_cast = einsum(equation = var_2015_equation_0, values = (var_1953_cast, var_2001_cast));
            tensor<string, []> var_2017_equation_0 = const()[name = tensor<string, []>("op_2017_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2017_cast = einsum(equation = var_2017_equation_0, values = (var_1957_cast, var_2002_cast));
            tensor<string, []> var_2019_equation_0 = const()[name = tensor<string, []>("op_2019_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2019_cast = einsum(equation = var_2019_equation_0, values = (var_1961_cast, var_2003_cast));
            tensor<bool, []> input_105_interleave_0 = const()[name = tensor<string, []>("input_105_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_105_cast = concat(axis = var_1213, interleave = input_105_interleave_0, values = (var_2005_cast, var_2007_cast, var_2009_cast, var_2011_cast, var_2013_cast, var_2015_cast, var_2017_cast, var_2019_cast));
            tensor<int32, [2]> var_2025 = const()[name = tensor<string, []>("op_2025"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2027 = const()[name = tensor<string, []>("op_2027"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2029_pad_type_0 = const()[name = tensor<string, []>("op_2029_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2029_pad_0 = const()[name = tensor<string, []>("op_2029_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76375552)))];
            tensor<fp16, [640]> down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77194816)))];
            tensor<fp16, [2, 640, 1, 1024]> var_2029_cast = conv(bias = down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_2027, groups = var_1213, pad = var_2029_pad_0, pad_type = var_2029_pad_type_0, strides = var_2025, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_105_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_21_cast = add(x = var_2029_cast, y = inputs_19_cast);
            tensor<int32, [1]> var_2033 = const()[name = tensor<string, []>("op_2033"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_21_cast = reduce_mean(axes = var_2033, keep_dims = var_1208, x = inputs_21_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_21_cast = sub(x = inputs_21_cast, y = channels_mean_21_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_21_cast = mul(x = zero_mean_21_cast, y = zero_mean_21_cast);
            tensor<int32, [1]> var_2037 = const()[name = tensor<string, []>("op_2037"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_2038_cast = reduce_mean(axes = var_2037, keep_dims = var_1208, x = zero_mean_sq_21_cast);
            tensor<fp16, []> var_2039_to_fp16 = const()[name = tensor<string, []>("op_2039_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_2040_cast = add(x = var_2038_cast, y = var_2039_to_fp16);
            tensor<fp16, []> denom_21_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_21_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_21_cast = rsqrt(epsilon = denom_21_epsilon_0_to_fp16, x = var_2040_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_21_cast = mul(x = zero_mean_21_cast, y = denom_21_cast);
            tensor<fp16, [1, 640, 1, 1]> var_2044_to_fp16 = const()[name = tensor<string, []>("op_2044_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77196160)))];
            tensor<fp16, [2, 640, 1, 1024]> var_2045_cast = add(x = out_21_cast, y = var_2044_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_2047_to_fp16 = const()[name = tensor<string, []>("op_2047_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77197504)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_65_cast = mul(x = var_2045_cast, y = var_2047_to_fp16);
            tensor<int32, [2]> var_2054 = const()[name = tensor<string, []>("op_2054"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2056 = const()[name = tensor<string, []>("op_2056"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_15_pad_type_0 = const()[name = tensor<string, []>("q_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_15_pad_0 = const()[name = tensor<string, []>("q_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77198848)))];
            tensor<fp16, [2, 640, 1, 1024]> q_15_cast = conv(dilations = var_2056, groups = var_1213, pad = q_15_pad_0, pad_type = q_15_pad_type_0, strides = var_2054, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_65_cast);
            tensor<int32, [2]> var_2060 = const()[name = tensor<string, []>("op_2060"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2062 = const()[name = tensor<string, []>("op_2062"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_29_pad_type_0 = const()[name = tensor<string, []>("k_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_29_pad_0 = const()[name = tensor<string, []>("k_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 768, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [640, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(78018112)))];
            tensor<fp16, [2, 640, 1, 77]> k_29_cast = conv(dilations = var_2062, groups = var_1213, pad = k_29_pad_0, pad_type = k_29_pad_type_0, strides = var_2060, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_2066 = const()[name = tensor<string, []>("op_2066"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2068 = const()[name = tensor<string, []>("op_2068"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_15_pad_type_0 = const()[name = tensor<string, []>("v_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_15_pad_0 = const()[name = tensor<string, []>("v_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 768, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [640, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79001216)))];
            tensor<fp16, [2, 640, 1, 77]> v_15_cast = conv(dilations = var_2068, groups = var_1213, pad = v_15_pad_0, pad_type = v_15_pad_type_0, strides = var_2066, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_2072_begin_0 = const()[name = tensor<string, []>("op_2072_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2072_end_0 = const()[name = tensor<string, []>("op_2072_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_2072_end_mask_0 = const()[name = tensor<string, []>("op_2072_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_2072_cast = slice_by_index(begin = var_2072_begin_0, end = var_2072_end_0, end_mask = var_2072_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_2076_begin_0 = const()[name = tensor<string, []>("op_2076_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_2076_end_0 = const()[name = tensor<string, []>("op_2076_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_2076_end_mask_0 = const()[name = tensor<string, []>("op_2076_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_2076_cast = slice_by_index(begin = var_2076_begin_0, end = var_2076_end_0, end_mask = var_2076_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_2080_begin_0 = const()[name = tensor<string, []>("op_2080_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_2080_end_0 = const()[name = tensor<string, []>("op_2080_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_2080_end_mask_0 = const()[name = tensor<string, []>("op_2080_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_2080_cast = slice_by_index(begin = var_2080_begin_0, end = var_2080_end_0, end_mask = var_2080_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_2084_begin_0 = const()[name = tensor<string, []>("op_2084_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_2084_end_0 = const()[name = tensor<string, []>("op_2084_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_2084_end_mask_0 = const()[name = tensor<string, []>("op_2084_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_2084_cast = slice_by_index(begin = var_2084_begin_0, end = var_2084_end_0, end_mask = var_2084_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_2088_begin_0 = const()[name = tensor<string, []>("op_2088_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_2088_end_0 = const()[name = tensor<string, []>("op_2088_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_2088_end_mask_0 = const()[name = tensor<string, []>("op_2088_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_2088_cast = slice_by_index(begin = var_2088_begin_0, end = var_2088_end_0, end_mask = var_2088_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_2092_begin_0 = const()[name = tensor<string, []>("op_2092_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_2092_end_0 = const()[name = tensor<string, []>("op_2092_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_2092_end_mask_0 = const()[name = tensor<string, []>("op_2092_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_2092_cast = slice_by_index(begin = var_2092_begin_0, end = var_2092_end_0, end_mask = var_2092_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_2096_begin_0 = const()[name = tensor<string, []>("op_2096_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_2096_end_0 = const()[name = tensor<string, []>("op_2096_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_2096_end_mask_0 = const()[name = tensor<string, []>("op_2096_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_2096_cast = slice_by_index(begin = var_2096_begin_0, end = var_2096_end_0, end_mask = var_2096_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> var_2100_begin_0 = const()[name = tensor<string, []>("op_2100_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_2100_end_0 = const()[name = tensor<string, []>("op_2100_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_2100_end_mask_0 = const()[name = tensor<string, []>("op_2100_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_2100_cast = slice_by_index(begin = var_2100_begin_0, end = var_2100_end_0, end_mask = var_2100_end_mask_0, x = q_15_cast);
            tensor<int32, [4]> k_31_perm_0 = const()[name = tensor<string, []>("k_31_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_2107_begin_0 = const()[name = tensor<string, []>("op_2107_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2107_end_0 = const()[name = tensor<string, []>("op_2107_end_0"), val = tensor<int32, [4]>([2, 77, 1, 80])];
            tensor<bool, [4]> var_2107_end_mask_0 = const()[name = tensor<string, []>("op_2107_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 640]> transpose_24 = transpose(perm = k_31_perm_0, x = k_29_cast);
            tensor<fp16, [2, 77, 1, 80]> var_2107_cast = slice_by_index(begin = var_2107_begin_0, end = var_2107_end_0, end_mask = var_2107_end_mask_0, x = transpose_24);
            tensor<int32, [4]> var_2111_begin_0 = const()[name = tensor<string, []>("op_2111_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_2111_end_0 = const()[name = tensor<string, []>("op_2111_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_2111_end_mask_0 = const()[name = tensor<string, []>("op_2111_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_2111_cast = slice_by_index(begin = var_2111_begin_0, end = var_2111_end_0, end_mask = var_2111_end_mask_0, x = transpose_24);
            tensor<int32, [4]> var_2115_begin_0 = const()[name = tensor<string, []>("op_2115_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_2115_end_0 = const()[name = tensor<string, []>("op_2115_end_0"), val = tensor<int32, [4]>([2, 77, 1, 240])];
            tensor<bool, [4]> var_2115_end_mask_0 = const()[name = tensor<string, []>("op_2115_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_2115_cast = slice_by_index(begin = var_2115_begin_0, end = var_2115_end_0, end_mask = var_2115_end_mask_0, x = transpose_24);
            tensor<int32, [4]> var_2119_begin_0 = const()[name = tensor<string, []>("op_2119_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_2119_end_0 = const()[name = tensor<string, []>("op_2119_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_2119_end_mask_0 = const()[name = tensor<string, []>("op_2119_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_2119_cast = slice_by_index(begin = var_2119_begin_0, end = var_2119_end_0, end_mask = var_2119_end_mask_0, x = transpose_24);
            tensor<int32, [4]> var_2123_begin_0 = const()[name = tensor<string, []>("op_2123_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_2123_end_0 = const()[name = tensor<string, []>("op_2123_end_0"), val = tensor<int32, [4]>([2, 77, 1, 400])];
            tensor<bool, [4]> var_2123_end_mask_0 = const()[name = tensor<string, []>("op_2123_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_2123_cast = slice_by_index(begin = var_2123_begin_0, end = var_2123_end_0, end_mask = var_2123_end_mask_0, x = transpose_24);
            tensor<int32, [4]> var_2127_begin_0 = const()[name = tensor<string, []>("op_2127_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 400])];
            tensor<int32, [4]> var_2127_end_0 = const()[name = tensor<string, []>("op_2127_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_2127_end_mask_0 = const()[name = tensor<string, []>("op_2127_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_2127_cast = slice_by_index(begin = var_2127_begin_0, end = var_2127_end_0, end_mask = var_2127_end_mask_0, x = transpose_24);
            tensor<int32, [4]> var_2131_begin_0 = const()[name = tensor<string, []>("op_2131_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_2131_end_0 = const()[name = tensor<string, []>("op_2131_end_0"), val = tensor<int32, [4]>([2, 77, 1, 560])];
            tensor<bool, [4]> var_2131_end_mask_0 = const()[name = tensor<string, []>("op_2131_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_2131_cast = slice_by_index(begin = var_2131_begin_0, end = var_2131_end_0, end_mask = var_2131_end_mask_0, x = transpose_24);
            tensor<int32, [4]> var_2135_begin_0 = const()[name = tensor<string, []>("op_2135_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 560])];
            tensor<int32, [4]> var_2135_end_0 = const()[name = tensor<string, []>("op_2135_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_2135_end_mask_0 = const()[name = tensor<string, []>("op_2135_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_2135_cast = slice_by_index(begin = var_2135_begin_0, end = var_2135_end_0, end_mask = var_2135_end_mask_0, x = transpose_24);
            tensor<int32, [4]> var_2137_begin_0 = const()[name = tensor<string, []>("op_2137_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2137_end_0 = const()[name = tensor<string, []>("op_2137_end_0"), val = tensor<int32, [4]>([2, 80, 1, 77])];
            tensor<bool, [4]> var_2137_end_mask_0 = const()[name = tensor<string, []>("op_2137_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_2137_cast = slice_by_index(begin = var_2137_begin_0, end = var_2137_end_0, end_mask = var_2137_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2141_begin_0 = const()[name = tensor<string, []>("op_2141_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_2141_end_0 = const()[name = tensor<string, []>("op_2141_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_2141_end_mask_0 = const()[name = tensor<string, []>("op_2141_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_2141_cast = slice_by_index(begin = var_2141_begin_0, end = var_2141_end_0, end_mask = var_2141_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2145_begin_0 = const()[name = tensor<string, []>("op_2145_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_2145_end_0 = const()[name = tensor<string, []>("op_2145_end_0"), val = tensor<int32, [4]>([2, 240, 1, 77])];
            tensor<bool, [4]> var_2145_end_mask_0 = const()[name = tensor<string, []>("op_2145_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_2145_cast = slice_by_index(begin = var_2145_begin_0, end = var_2145_end_0, end_mask = var_2145_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2149_begin_0 = const()[name = tensor<string, []>("op_2149_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_2149_end_0 = const()[name = tensor<string, []>("op_2149_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_2149_end_mask_0 = const()[name = tensor<string, []>("op_2149_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_2149_cast = slice_by_index(begin = var_2149_begin_0, end = var_2149_end_0, end_mask = var_2149_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2153_begin_0 = const()[name = tensor<string, []>("op_2153_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_2153_end_0 = const()[name = tensor<string, []>("op_2153_end_0"), val = tensor<int32, [4]>([2, 400, 1, 77])];
            tensor<bool, [4]> var_2153_end_mask_0 = const()[name = tensor<string, []>("op_2153_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_2153_cast = slice_by_index(begin = var_2153_begin_0, end = var_2153_end_0, end_mask = var_2153_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2157_begin_0 = const()[name = tensor<string, []>("op_2157_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_2157_end_0 = const()[name = tensor<string, []>("op_2157_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_2157_end_mask_0 = const()[name = tensor<string, []>("op_2157_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_2157_cast = slice_by_index(begin = var_2157_begin_0, end = var_2157_end_0, end_mask = var_2157_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2161_begin_0 = const()[name = tensor<string, []>("op_2161_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_2161_end_0 = const()[name = tensor<string, []>("op_2161_end_0"), val = tensor<int32, [4]>([2, 560, 1, 77])];
            tensor<bool, [4]> var_2161_end_mask_0 = const()[name = tensor<string, []>("op_2161_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_2161_cast = slice_by_index(begin = var_2161_begin_0, end = var_2161_end_0, end_mask = var_2161_end_mask_0, x = v_15_cast);
            tensor<int32, [4]> var_2165_begin_0 = const()[name = tensor<string, []>("op_2165_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_2165_end_0 = const()[name = tensor<string, []>("op_2165_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_2165_end_mask_0 = const()[name = tensor<string, []>("op_2165_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_2165_cast = slice_by_index(begin = var_2165_begin_0, end = var_2165_end_0, end_mask = var_2165_end_mask_0, x = v_15_cast);
            tensor<string, []> var_2169_equation_0 = const()[name = tensor<string, []>("op_2169_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2169_cast = einsum(equation = var_2169_equation_0, values = (var_2107_cast, var_2072_cast));
            tensor<fp16, []> var_2170_to_fp16 = const()[name = tensor<string, []>("op_2170_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_113_cast = mul(x = var_2169_cast, y = var_2170_to_fp16);
            tensor<string, []> var_2173_equation_0 = const()[name = tensor<string, []>("op_2173_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2173_cast = einsum(equation = var_2173_equation_0, values = (var_2111_cast, var_2076_cast));
            tensor<fp16, []> var_2174_to_fp16 = const()[name = tensor<string, []>("op_2174_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_115_cast = mul(x = var_2173_cast, y = var_2174_to_fp16);
            tensor<string, []> var_2177_equation_0 = const()[name = tensor<string, []>("op_2177_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2177_cast = einsum(equation = var_2177_equation_0, values = (var_2115_cast, var_2080_cast));
            tensor<fp16, []> var_2178_to_fp16 = const()[name = tensor<string, []>("op_2178_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_117_cast = mul(x = var_2177_cast, y = var_2178_to_fp16);
            tensor<string, []> var_2181_equation_0 = const()[name = tensor<string, []>("op_2181_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2181_cast = einsum(equation = var_2181_equation_0, values = (var_2119_cast, var_2084_cast));
            tensor<fp16, []> var_2182_to_fp16 = const()[name = tensor<string, []>("op_2182_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_119_cast = mul(x = var_2181_cast, y = var_2182_to_fp16);
            tensor<string, []> var_2185_equation_0 = const()[name = tensor<string, []>("op_2185_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2185_cast = einsum(equation = var_2185_equation_0, values = (var_2123_cast, var_2088_cast));
            tensor<fp16, []> var_2186_to_fp16 = const()[name = tensor<string, []>("op_2186_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_121_cast = mul(x = var_2185_cast, y = var_2186_to_fp16);
            tensor<string, []> var_2189_equation_0 = const()[name = tensor<string, []>("op_2189_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2189_cast = einsum(equation = var_2189_equation_0, values = (var_2127_cast, var_2092_cast));
            tensor<fp16, []> var_2190_to_fp16 = const()[name = tensor<string, []>("op_2190_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_123_cast = mul(x = var_2189_cast, y = var_2190_to_fp16);
            tensor<string, []> var_2193_equation_0 = const()[name = tensor<string, []>("op_2193_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2193_cast = einsum(equation = var_2193_equation_0, values = (var_2131_cast, var_2096_cast));
            tensor<fp16, []> var_2194_to_fp16 = const()[name = tensor<string, []>("op_2194_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_125_cast = mul(x = var_2193_cast, y = var_2194_to_fp16);
            tensor<string, []> var_2197_equation_0 = const()[name = tensor<string, []>("op_2197_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_2197_cast = einsum(equation = var_2197_equation_0, values = (var_2135_cast, var_2100_cast));
            tensor<fp16, []> var_2198_to_fp16 = const()[name = tensor<string, []>("op_2198_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_127_cast = mul(x = var_2197_cast, y = var_2198_to_fp16);
            tensor<fp16, [2, 77, 1, 1024]> var_2200_cast = softmax(axis = var_1213, x = aw_113_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2201_cast = softmax(axis = var_1213, x = aw_115_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2202_cast = softmax(axis = var_1213, x = aw_117_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2203_cast = softmax(axis = var_1213, x = aw_119_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2204_cast = softmax(axis = var_1213, x = aw_121_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2205_cast = softmax(axis = var_1213, x = aw_123_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2206_cast = softmax(axis = var_1213, x = aw_125_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_2207_cast = softmax(axis = var_1213, x = aw_127_cast);
            tensor<string, []> var_2209_equation_0 = const()[name = tensor<string, []>("op_2209_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2209_cast = einsum(equation = var_2209_equation_0, values = (var_2137_cast, var_2200_cast));
            tensor<string, []> var_2211_equation_0 = const()[name = tensor<string, []>("op_2211_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2211_cast = einsum(equation = var_2211_equation_0, values = (var_2141_cast, var_2201_cast));
            tensor<string, []> var_2213_equation_0 = const()[name = tensor<string, []>("op_2213_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2213_cast = einsum(equation = var_2213_equation_0, values = (var_2145_cast, var_2202_cast));
            tensor<string, []> var_2215_equation_0 = const()[name = tensor<string, []>("op_2215_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2215_cast = einsum(equation = var_2215_equation_0, values = (var_2149_cast, var_2203_cast));
            tensor<string, []> var_2217_equation_0 = const()[name = tensor<string, []>("op_2217_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2217_cast = einsum(equation = var_2217_equation_0, values = (var_2153_cast, var_2204_cast));
            tensor<string, []> var_2219_equation_0 = const()[name = tensor<string, []>("op_2219_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2219_cast = einsum(equation = var_2219_equation_0, values = (var_2157_cast, var_2205_cast));
            tensor<string, []> var_2221_equation_0 = const()[name = tensor<string, []>("op_2221_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2221_cast = einsum(equation = var_2221_equation_0, values = (var_2161_cast, var_2206_cast));
            tensor<string, []> var_2223_equation_0 = const()[name = tensor<string, []>("op_2223_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_2223_cast = einsum(equation = var_2223_equation_0, values = (var_2165_cast, var_2207_cast));
            tensor<bool, []> input_107_interleave_0 = const()[name = tensor<string, []>("input_107_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_107_cast = concat(axis = var_1213, interleave = input_107_interleave_0, values = (var_2209_cast, var_2211_cast, var_2213_cast, var_2215_cast, var_2217_cast, var_2219_cast, var_2221_cast, var_2223_cast));
            tensor<int32, [2]> var_2229 = const()[name = tensor<string, []>("op_2229"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2231 = const()[name = tensor<string, []>("op_2231"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2233_pad_type_0 = const()[name = tensor<string, []>("op_2233_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2233_pad_0 = const()[name = tensor<string, []>("op_2233_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79984320)))];
            tensor<fp16, [640]> down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80803584)))];
            tensor<fp16, [2, 640, 1, 1024]> var_2233_cast = conv(bias = down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_2231, groups = var_1213, pad = var_2233_pad_0, pad_type = var_2233_pad_type_0, strides = var_2229, weight = down_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_107_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_23_cast = add(x = var_2233_cast, y = inputs_21_cast);
            tensor<int32, [1]> var_2237 = const()[name = tensor<string, []>("op_2237"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_23_cast = reduce_mean(axes = var_2237, keep_dims = var_1208, x = inputs_23_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_23_cast = sub(x = inputs_23_cast, y = channels_mean_23_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_23_cast = mul(x = zero_mean_23_cast, y = zero_mean_23_cast);
            tensor<int32, [1]> var_2241 = const()[name = tensor<string, []>("op_2241"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_2242_cast = reduce_mean(axes = var_2241, keep_dims = var_1208, x = zero_mean_sq_23_cast);
            tensor<fp16, []> var_2243_to_fp16 = const()[name = tensor<string, []>("op_2243_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_2244_cast = add(x = var_2242_cast, y = var_2243_to_fp16);
            tensor<fp16, []> denom_23_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_23_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_23_cast = rsqrt(epsilon = denom_23_epsilon_0_to_fp16, x = var_2244_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_23_cast = mul(x = zero_mean_23_cast, y = denom_23_cast);
            tensor<fp16, [1, 640, 1, 1]> var_2248_to_fp16 = const()[name = tensor<string, []>("op_2248_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80804928)))];
            tensor<fp16, [2, 640, 1, 1024]> var_2249_cast = add(x = out_23_cast, y = var_2248_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_2251_to_fp16 = const()[name = tensor<string, []>("op_2251_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80806272)))];
            tensor<fp16, [2, 640, 1, 1024]> input_109_cast = mul(x = var_2249_cast, y = var_2251_to_fp16);
            tensor<int32, [2]> var_2259 = const()[name = tensor<string, []>("op_2259"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2261 = const()[name = tensor<string, []>("op_2261"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2263_pad_type_0 = const()[name = tensor<string, []>("op_2263_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2263_pad_0 = const()[name = tensor<string, []>("op_2263_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [5120, 640, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [5120, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80807616)))];
            tensor<fp16, [5120]> down_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(87361280)))];
            tensor<fp16, [2, 5120, 1, 1024]> var_2263_cast = conv(bias = down_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_2261, groups = var_1213, pad = var_2263_pad_0, pad_type = var_2263_pad_type_0, strides = var_2259, weight = down_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_109_cast);
            tensor<int32, [2]> var_2264_split_sizes_0 = const()[name = tensor<string, []>("op_2264_split_sizes_0"), val = tensor<int32, [2]>([2560, 2560])];
            tensor<int32, []> var_2264_axis_0 = const()[name = tensor<string, []>("op_2264_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 2560, 1, 1024]> var_2264_cast_0, tensor<fp16, [2, 2560, 1, 1024]> var_2264_cast_1 = split(axis = var_2264_axis_0, split_sizes = var_2264_split_sizes_0, x = var_2263_cast);
            tensor<string, []> var_2266_mode_0 = const()[name = tensor<string, []>("op_2266_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 2560, 1, 1024]> var_2266_cast = gelu(mode = var_2266_mode_0, x = var_2264_cast_1);
            tensor<fp16, [2, 2560, 1, 1024]> input_111_cast = mul(x = var_2264_cast_0, y = var_2266_cast);
            tensor<int32, [2]> var_2270 = const()[name = tensor<string, []>("op_2270"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2272 = const()[name = tensor<string, []>("op_2272"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2274_pad_type_0 = const()[name = tensor<string, []>("op_2274_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2274_pad_0 = const()[name = tensor<string, []>("op_2274_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 2560, 1, 1]> down_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [640, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(87371584)))];
            tensor<fp16, [640]> down_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(90648448)))];
            tensor<fp16, [2, 640, 1, 1024]> var_2274_cast = conv(bias = down_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_2272, groups = var_1213, pad = var_2274_pad_0, pad_type = var_2274_pad_type_0, strides = var_2270, weight = down_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_111_cast);
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_69_cast = add(x = var_2274_cast, y = inputs_23_cast);
            tensor<int32, [4]> var_2276 = const()[name = tensor<string, []>("op_2276"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> input_113_cast = reshape(shape = var_2276, x = hidden_states_69_cast);
            tensor<int32, [2]> var_2280 = const()[name = tensor<string, []>("op_2280"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2282 = const()[name = tensor<string, []>("op_2282"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_71_pad_type_0 = const()[name = tensor<string, []>("hidden_states_71_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_71_pad_0 = const()[name = tensor<string, []>("hidden_states_71_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> down_blocks_1_attentions_1_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_proj_out_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(90649792)))];
            tensor<fp16, [640]> down_blocks_1_attentions_1_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_attentions_1_proj_out_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(91469056)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_71_cast = conv(bias = down_blocks_1_attentions_1_proj_out_bias_to_fp16, dilations = var_2282, groups = var_1213, pad = hidden_states_71_pad_0, pad_type = hidden_states_71_pad_type_0, strides = var_2280, weight = down_blocks_1_attentions_1_proj_out_weight_to_fp16, x = input_113_cast);
            tensor<fp16, [2, 640, 32, 32]> input_115_cast = add(x = hidden_states_71_cast, y = hidden_states_59_cast);
            tensor<int32, [2]> var_2289 = const()[name = tensor<string, []>("op_2289"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_2291 = const()[name = tensor<string, []>("op_2291"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_117_pad_type_0 = const()[name = tensor<string, []>("input_117_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_117_pad_0 = const()[name = tensor<string, []>("input_117_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> down_blocks_1_downsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_downsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(91470400)))];
            tensor<fp16, [640]> down_blocks_1_downsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_1_downsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98843264)))];
            tensor<fp16, [2, 640, 16, 16]> input_117_cast = conv(bias = down_blocks_1_downsamplers_0_conv_bias_to_fp16, dilations = var_2291, groups = var_1213, pad = input_117_pad_0, pad_type = input_117_pad_type_0, strides = var_2289, weight = down_blocks_1_downsamplers_0_conv_weight_to_fp16, x = input_115_cast);
            tensor<bool, []> var_2314 = const()[name = tensor<string, []>("op_2314"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_2319 = const()[name = tensor<string, []>("op_2319"), val = tensor<int32, []>(1)];
            tensor<int32, [5]> reshape_48_shape_0 = const()[name = tensor<string, []>("reshape_48_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 16, 16])];
            tensor<fp16, [2, 32, 20, 16, 16]> reshape_48_cast = reshape(shape = reshape_48_shape_0, x = input_117_cast);
            tensor<int32, [3]> reduce_mean_36_axes_0 = const()[name = tensor<string, []>("reduce_mean_36_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_36_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_36_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_36_cast = reduce_mean(axes = reduce_mean_36_axes_0, keep_dims = reduce_mean_36_keep_dims_0, x = reshape_48_cast);
            tensor<fp16, [2, 32, 20, 16, 16]> sub_24_cast = sub(x = reshape_48_cast, y = reduce_mean_36_cast);
            tensor<fp16, [2, 32, 20, 16, 16]> square_12_cast = square(x = sub_24_cast);
            tensor<int32, [3]> reduce_mean_38_axes_0 = const()[name = tensor<string, []>("reduce_mean_38_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_38_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_38_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_38_cast = reduce_mean(axes = reduce_mean_38_axes_0, keep_dims = reduce_mean_38_keep_dims_0, x = square_12_cast);
            tensor<fp16, []> add_24_y_0_to_fp16 = const()[name = tensor<string, []>("add_24_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_24_cast = add(x = reduce_mean_38_cast, y = add_24_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_12_cast = sqrt(x = add_24_cast);
            tensor<fp16, [2, 32, 20, 16, 16]> real_div_12_cast = real_div(x = sub_24_cast, y = sqrt_12_cast);
            tensor<int32, [4]> reshape_49_shape_0 = const()[name = tensor<string, []>("reshape_49_shape_0"), val = tensor<int32, [4]>([2, 640, 16, 16])];
            tensor<fp16, [2, 640, 16, 16]> reshape_49_cast = reshape(shape = reshape_49_shape_0, x = real_div_12_cast);
            tensor<fp16, [640]> add_25_mean_0_to_fp16 = const()[name = tensor<string, []>("add_25_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98844608)))];
            tensor<fp16, [640]> add_25_variance_0_to_fp16 = const()[name = tensor<string, []>("add_25_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98845952)))];
            tensor<fp16, [640]> add_25_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_25_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98847296)))];
            tensor<fp16, [640]> add_25_beta_0_to_fp16 = const()[name = tensor<string, []>("add_25_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98848640)))];
            tensor<fp16, []> add_25_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_25_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 16, 16]> add_25_cast = batch_norm(beta = add_25_beta_0_to_fp16, epsilon = add_25_epsilon_0_to_fp16, gamma = add_25_gamma_0_to_fp16, mean = add_25_mean_0_to_fp16, variance = add_25_variance_0_to_fp16, x = reshape_49_cast);
            tensor<fp16, [2, 640, 16, 16]> input_121_cast = silu(x = add_25_cast);
            tensor<int32, [2]> var_2342 = const()[name = tensor<string, []>("op_2342"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2344 = const()[name = tensor<string, []>("op_2344"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_73_pad_type_0 = const()[name = tensor<string, []>("hidden_states_73_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_73_pad_0 = const()[name = tensor<string, []>("hidden_states_73_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 640, 3, 3]> down_blocks_2_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(98849984)))];
            tensor<fp16, [1280]> down_blocks_2_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(113595648)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_73_cast = conv(bias = down_blocks_2_resnets_0_conv1_bias_to_fp16, dilations = var_2344, groups = var_2319, pad = hidden_states_73_pad_0, pad_type = hidden_states_73_pad_type_0, strides = var_2342, weight = down_blocks_2_resnets_0_conv1_weight_to_fp16, x = input_121_cast);
            tensor<int32, [2]> var_2350 = const()[name = tensor<string, []>("op_2350"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2352 = const()[name = tensor<string, []>("op_2352"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_9_pad_type_0 = const()[name = tensor<string, []>("temb_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_9_pad_0 = const()[name = tensor<string, []>("temb_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(113598272)))];
            tensor<fp16, [1280]> down_blocks_2_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(116875136)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_9_cast = conv(bias = down_blocks_2_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_2352, groups = var_2319, pad = temb_9_pad_0, pad_type = temb_9_pad_type_0, strides = var_2350, weight = down_blocks_2_resnets_0_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_125_cast = add(x = hidden_states_73_cast, y = temb_9_cast);
            tensor<int32, [5]> reshape_52_shape_0 = const()[name = tensor<string, []>("reshape_52_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_52_cast = reshape(shape = reshape_52_shape_0, x = input_125_cast);
            tensor<int32, [3]> reduce_mean_39_axes_0 = const()[name = tensor<string, []>("reduce_mean_39_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_39_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_39_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_39_cast = reduce_mean(axes = reduce_mean_39_axes_0, keep_dims = reduce_mean_39_keep_dims_0, x = reshape_52_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_26_cast = sub(x = reshape_52_cast, y = reduce_mean_39_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_13_cast = square(x = sub_26_cast);
            tensor<int32, [3]> reduce_mean_41_axes_0 = const()[name = tensor<string, []>("reduce_mean_41_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_41_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_41_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_41_cast = reduce_mean(axes = reduce_mean_41_axes_0, keep_dims = reduce_mean_41_keep_dims_0, x = square_13_cast);
            tensor<fp16, []> add_26_y_0_to_fp16 = const()[name = tensor<string, []>("add_26_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_26_cast = add(x = reduce_mean_41_cast, y = add_26_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_13_cast = sqrt(x = add_26_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_13_cast = real_div(x = sub_26_cast, y = sqrt_13_cast);
            tensor<int32, [4]> reshape_53_shape_0 = const()[name = tensor<string, []>("reshape_53_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_53_cast = reshape(shape = reshape_53_shape_0, x = real_div_13_cast);
            tensor<fp16, [1280]> add_27_mean_0_to_fp16 = const()[name = tensor<string, []>("add_27_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(116877760)))];
            tensor<fp16, [1280]> add_27_variance_0_to_fp16 = const()[name = tensor<string, []>("add_27_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(116880384)))];
            tensor<fp16, [1280]> add_27_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_27_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(116883008)))];
            tensor<fp16, [1280]> add_27_beta_0_to_fp16 = const()[name = tensor<string, []>("add_27_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(116885632)))];
            tensor<fp16, []> add_27_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_27_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_27_cast = batch_norm(beta = add_27_beta_0_to_fp16, epsilon = add_27_epsilon_0_to_fp16, gamma = add_27_gamma_0_to_fp16, mean = add_27_mean_0_to_fp16, variance = add_27_variance_0_to_fp16, x = reshape_53_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_129_cast = silu(x = add_27_cast);
            tensor<int32, [2]> var_2362 = const()[name = tensor<string, []>("op_2362"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2364 = const()[name = tensor<string, []>("op_2364"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_75_pad_type_0 = const()[name = tensor<string, []>("hidden_states_75_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_75_pad_0 = const()[name = tensor<string, []>("hidden_states_75_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_2_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(116888256)))];
            tensor<fp16, [1280]> down_blocks_2_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(146379520)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_75_cast = conv(bias = down_blocks_2_resnets_0_conv2_bias_to_fp16, dilations = var_2364, groups = var_2319, pad = hidden_states_75_pad_0, pad_type = hidden_states_75_pad_type_0, strides = var_2362, weight = down_blocks_2_resnets_0_conv2_weight_to_fp16, x = input_129_cast);
            tensor<int32, [2]> var_2369 = const()[name = tensor<string, []>("op_2369"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2371 = const()[name = tensor<string, []>("op_2371"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_3_pad_type_0 = const()[name = tensor<string, []>("x_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_3_pad_0 = const()[name = tensor<string, []>("x_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 640, 1, 1]> down_blocks_2_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [1280, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(146382144)))];
            tensor<fp16, [1280]> down_blocks_2_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(148020608)))];
            tensor<fp16, [2, 1280, 16, 16]> x_3_cast = conv(bias = down_blocks_2_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_2371, groups = var_2319, pad = x_3_pad_0, pad_type = x_3_pad_type_0, strides = var_2369, weight = down_blocks_2_resnets_0_conv_shortcut_weight_to_fp16, x = input_117_cast);
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_77_cast = add(x = x_3_cast, y = hidden_states_75_cast);
            tensor<int32, [5]> reshape_56_shape_0 = const()[name = tensor<string, []>("reshape_56_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_56_cast = reshape(shape = reshape_56_shape_0, x = hidden_states_77_cast);
            tensor<int32, [3]> reduce_mean_42_axes_0 = const()[name = tensor<string, []>("reduce_mean_42_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_42_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_42_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_42_cast = reduce_mean(axes = reduce_mean_42_axes_0, keep_dims = reduce_mean_42_keep_dims_0, x = reshape_56_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_28_cast = sub(x = reshape_56_cast, y = reduce_mean_42_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_14_cast = square(x = sub_28_cast);
            tensor<int32, [3]> reduce_mean_44_axes_0 = const()[name = tensor<string, []>("reduce_mean_44_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_44_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_44_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_44_cast = reduce_mean(axes = reduce_mean_44_axes_0, keep_dims = reduce_mean_44_keep_dims_0, x = square_14_cast);
            tensor<fp16, []> add_28_y_0_to_fp16 = const()[name = tensor<string, []>("add_28_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_28_cast = add(x = reduce_mean_44_cast, y = add_28_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_14_cast = sqrt(x = add_28_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_14_cast = real_div(x = sub_28_cast, y = sqrt_14_cast);
            tensor<int32, [4]> reshape_57_shape_0 = const()[name = tensor<string, []>("reshape_57_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_57_cast = reshape(shape = reshape_57_shape_0, x = real_div_14_cast);
            tensor<fp16, [1280]> add_29_mean_0_to_fp16 = const()[name = tensor<string, []>("add_29_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(148023232)))];
            tensor<fp16, [1280]> add_29_variance_0_to_fp16 = const()[name = tensor<string, []>("add_29_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(148025856)))];
            tensor<fp16, [1280]> add_29_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_29_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(148028480)))];
            tensor<fp16, [1280]> add_29_beta_0_to_fp16 = const()[name = tensor<string, []>("add_29_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(148031104)))];
            tensor<fp16, []> add_29_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_29_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_29_cast = batch_norm(beta = add_29_beta_0_to_fp16, epsilon = add_29_epsilon_0_to_fp16, gamma = add_29_gamma_0_to_fp16, mean = add_29_mean_0_to_fp16, variance = add_29_variance_0_to_fp16, x = reshape_57_cast);
            tensor<int32, [2]> var_2391 = const()[name = tensor<string, []>("op_2391"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2393 = const()[name = tensor<string, []>("op_2393"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_79_pad_type_0 = const()[name = tensor<string, []>("hidden_states_79_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_79_pad_0 = const()[name = tensor<string, []>("hidden_states_79_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_proj_in_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(148033728)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_0_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_proj_in_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(151310592)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_79_cast = conv(bias = down_blocks_2_attentions_0_proj_in_bias_to_fp16, dilations = var_2393, groups = var_2319, pad = hidden_states_79_pad_0, pad_type = hidden_states_79_pad_type_0, strides = var_2391, weight = down_blocks_2_attentions_0_proj_in_weight_to_fp16, x = add_29_cast);
            tensor<int32, [4]> var_2398 = const()[name = tensor<string, []>("op_2398"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<fp16, [2, 1280, 1, 256]> inputs_25_cast = reshape(shape = var_2398, x = hidden_states_79_cast);
            tensor<int32, [1]> var_2408 = const()[name = tensor<string, []>("op_2408"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_25_cast = reduce_mean(axes = var_2408, keep_dims = var_2314, x = inputs_25_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_25_cast = sub(x = inputs_25_cast, y = channels_mean_25_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_25_cast = mul(x = zero_mean_25_cast, y = zero_mean_25_cast);
            tensor<int32, [1]> var_2412 = const()[name = tensor<string, []>("op_2412"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_2413_cast = reduce_mean(axes = var_2412, keep_dims = var_2314, x = zero_mean_sq_25_cast);
            tensor<fp16, []> var_2414_to_fp16 = const()[name = tensor<string, []>("op_2414_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_2415_cast = add(x = var_2413_cast, y = var_2414_to_fp16);
            tensor<fp16, []> denom_25_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_25_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_25_cast = rsqrt(epsilon = denom_25_epsilon_0_to_fp16, x = var_2415_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_25_cast = mul(x = zero_mean_25_cast, y = denom_25_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_2419_to_fp16 = const()[name = tensor<string, []>("op_2419_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(151313216)))];
            tensor<fp16, [2, 1280, 1, 256]> var_2420_cast = add(x = out_25_cast, y = var_2419_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_2422_to_fp16 = const()[name = tensor<string, []>("op_2422_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(151315840)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_81_cast = mul(x = var_2420_cast, y = var_2422_to_fp16);
            tensor<int32, [2]> var_2429 = const()[name = tensor<string, []>("op_2429"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2431 = const()[name = tensor<string, []>("op_2431"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_17_pad_type_0 = const()[name = tensor<string, []>("q_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_17_pad_0 = const()[name = tensor<string, []>("q_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(151318464)))];
            tensor<fp16, [2, 1280, 1, 256]> q_17_cast = conv(dilations = var_2431, groups = var_2319, pad = q_17_pad_0, pad_type = q_17_pad_type_0, strides = var_2429, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_81_cast);
            tensor<int32, [2]> var_2435 = const()[name = tensor<string, []>("op_2435"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2437 = const()[name = tensor<string, []>("op_2437"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_33_pad_type_0 = const()[name = tensor<string, []>("k_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_33_pad_0 = const()[name = tensor<string, []>("k_33_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(154595328)))];
            tensor<fp16, [2, 1280, 1, 256]> k_33_cast = conv(dilations = var_2437, groups = var_2319, pad = k_33_pad_0, pad_type = k_33_pad_type_0, strides = var_2435, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_81_cast);
            tensor<int32, [2]> var_2441 = const()[name = tensor<string, []>("op_2441"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2443 = const()[name = tensor<string, []>("op_2443"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_17_pad_type_0 = const()[name = tensor<string, []>("v_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_17_pad_0 = const()[name = tensor<string, []>("v_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(157872192)))];
            tensor<fp16, [2, 1280, 1, 256]> v_17_cast = conv(dilations = var_2443, groups = var_2319, pad = v_17_pad_0, pad_type = v_17_pad_type_0, strides = var_2441, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_81_cast);
            tensor<int32, [4]> var_2447_begin_0 = const()[name = tensor<string, []>("op_2447_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2447_end_0 = const()[name = tensor<string, []>("op_2447_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_2447_end_mask_0 = const()[name = tensor<string, []>("op_2447_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2447_cast = slice_by_index(begin = var_2447_begin_0, end = var_2447_end_0, end_mask = var_2447_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2451_begin_0 = const()[name = tensor<string, []>("op_2451_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_2451_end_0 = const()[name = tensor<string, []>("op_2451_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_2451_end_mask_0 = const()[name = tensor<string, []>("op_2451_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2451_cast = slice_by_index(begin = var_2451_begin_0, end = var_2451_end_0, end_mask = var_2451_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2455_begin_0 = const()[name = tensor<string, []>("op_2455_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_2455_end_0 = const()[name = tensor<string, []>("op_2455_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_2455_end_mask_0 = const()[name = tensor<string, []>("op_2455_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2455_cast = slice_by_index(begin = var_2455_begin_0, end = var_2455_end_0, end_mask = var_2455_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2459_begin_0 = const()[name = tensor<string, []>("op_2459_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_2459_end_0 = const()[name = tensor<string, []>("op_2459_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_2459_end_mask_0 = const()[name = tensor<string, []>("op_2459_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2459_cast = slice_by_index(begin = var_2459_begin_0, end = var_2459_end_0, end_mask = var_2459_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2463_begin_0 = const()[name = tensor<string, []>("op_2463_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_2463_end_0 = const()[name = tensor<string, []>("op_2463_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_2463_end_mask_0 = const()[name = tensor<string, []>("op_2463_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2463_cast = slice_by_index(begin = var_2463_begin_0, end = var_2463_end_0, end_mask = var_2463_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2467_begin_0 = const()[name = tensor<string, []>("op_2467_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_2467_end_0 = const()[name = tensor<string, []>("op_2467_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_2467_end_mask_0 = const()[name = tensor<string, []>("op_2467_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2467_cast = slice_by_index(begin = var_2467_begin_0, end = var_2467_end_0, end_mask = var_2467_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2471_begin_0 = const()[name = tensor<string, []>("op_2471_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_2471_end_0 = const()[name = tensor<string, []>("op_2471_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_2471_end_mask_0 = const()[name = tensor<string, []>("op_2471_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2471_cast = slice_by_index(begin = var_2471_begin_0, end = var_2471_end_0, end_mask = var_2471_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> var_2475_begin_0 = const()[name = tensor<string, []>("op_2475_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_2475_end_0 = const()[name = tensor<string, []>("op_2475_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_2475_end_mask_0 = const()[name = tensor<string, []>("op_2475_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2475_cast = slice_by_index(begin = var_2475_begin_0, end = var_2475_end_0, end_mask = var_2475_end_mask_0, x = q_17_cast);
            tensor<int32, [4]> k_35_perm_0 = const()[name = tensor<string, []>("k_35_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_2482_begin_0 = const()[name = tensor<string, []>("op_2482_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2482_end_0 = const()[name = tensor<string, []>("op_2482_end_0"), val = tensor<int32, [4]>([2, 256, 1, 160])];
            tensor<bool, [4]> var_2482_end_mask_0 = const()[name = tensor<string, []>("op_2482_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 1280]> transpose_23 = transpose(perm = k_35_perm_0, x = k_33_cast);
            tensor<fp16, [2, 256, 1, 160]> var_2482_cast = slice_by_index(begin = var_2482_begin_0, end = var_2482_end_0, end_mask = var_2482_end_mask_0, x = transpose_23);
            tensor<int32, [4]> var_2486_begin_0 = const()[name = tensor<string, []>("op_2486_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_2486_end_0 = const()[name = tensor<string, []>("op_2486_end_0"), val = tensor<int32, [4]>([2, 256, 1, 320])];
            tensor<bool, [4]> var_2486_end_mask_0 = const()[name = tensor<string, []>("op_2486_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_2486_cast = slice_by_index(begin = var_2486_begin_0, end = var_2486_end_0, end_mask = var_2486_end_mask_0, x = transpose_23);
            tensor<int32, [4]> var_2490_begin_0 = const()[name = tensor<string, []>("op_2490_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_2490_end_0 = const()[name = tensor<string, []>("op_2490_end_0"), val = tensor<int32, [4]>([2, 256, 1, 480])];
            tensor<bool, [4]> var_2490_end_mask_0 = const()[name = tensor<string, []>("op_2490_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_2490_cast = slice_by_index(begin = var_2490_begin_0, end = var_2490_end_0, end_mask = var_2490_end_mask_0, x = transpose_23);
            tensor<int32, [4]> var_2494_begin_0 = const()[name = tensor<string, []>("op_2494_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_2494_end_0 = const()[name = tensor<string, []>("op_2494_end_0"), val = tensor<int32, [4]>([2, 256, 1, 640])];
            tensor<bool, [4]> var_2494_end_mask_0 = const()[name = tensor<string, []>("op_2494_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_2494_cast = slice_by_index(begin = var_2494_begin_0, end = var_2494_end_0, end_mask = var_2494_end_mask_0, x = transpose_23);
            tensor<int32, [4]> var_2498_begin_0 = const()[name = tensor<string, []>("op_2498_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_2498_end_0 = const()[name = tensor<string, []>("op_2498_end_0"), val = tensor<int32, [4]>([2, 256, 1, 800])];
            tensor<bool, [4]> var_2498_end_mask_0 = const()[name = tensor<string, []>("op_2498_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_2498_cast = slice_by_index(begin = var_2498_begin_0, end = var_2498_end_0, end_mask = var_2498_end_mask_0, x = transpose_23);
            tensor<int32, [4]> var_2502_begin_0 = const()[name = tensor<string, []>("op_2502_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_2502_end_0 = const()[name = tensor<string, []>("op_2502_end_0"), val = tensor<int32, [4]>([2, 256, 1, 960])];
            tensor<bool, [4]> var_2502_end_mask_0 = const()[name = tensor<string, []>("op_2502_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_2502_cast = slice_by_index(begin = var_2502_begin_0, end = var_2502_end_0, end_mask = var_2502_end_mask_0, x = transpose_23);
            tensor<int32, [4]> var_2506_begin_0 = const()[name = tensor<string, []>("op_2506_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_2506_end_0 = const()[name = tensor<string, []>("op_2506_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1120])];
            tensor<bool, [4]> var_2506_end_mask_0 = const()[name = tensor<string, []>("op_2506_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_2506_cast = slice_by_index(begin = var_2506_begin_0, end = var_2506_end_0, end_mask = var_2506_end_mask_0, x = transpose_23);
            tensor<int32, [4]> var_2510_begin_0 = const()[name = tensor<string, []>("op_2510_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_2510_end_0 = const()[name = tensor<string, []>("op_2510_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1280])];
            tensor<bool, [4]> var_2510_end_mask_0 = const()[name = tensor<string, []>("op_2510_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_2510_cast = slice_by_index(begin = var_2510_begin_0, end = var_2510_end_0, end_mask = var_2510_end_mask_0, x = transpose_23);
            tensor<int32, [4]> var_2512_begin_0 = const()[name = tensor<string, []>("op_2512_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2512_end_0 = const()[name = tensor<string, []>("op_2512_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_2512_end_mask_0 = const()[name = tensor<string, []>("op_2512_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2512_cast = slice_by_index(begin = var_2512_begin_0, end = var_2512_end_0, end_mask = var_2512_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2516_begin_0 = const()[name = tensor<string, []>("op_2516_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_2516_end_0 = const()[name = tensor<string, []>("op_2516_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_2516_end_mask_0 = const()[name = tensor<string, []>("op_2516_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2516_cast = slice_by_index(begin = var_2516_begin_0, end = var_2516_end_0, end_mask = var_2516_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2520_begin_0 = const()[name = tensor<string, []>("op_2520_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_2520_end_0 = const()[name = tensor<string, []>("op_2520_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_2520_end_mask_0 = const()[name = tensor<string, []>("op_2520_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2520_cast = slice_by_index(begin = var_2520_begin_0, end = var_2520_end_0, end_mask = var_2520_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2524_begin_0 = const()[name = tensor<string, []>("op_2524_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_2524_end_0 = const()[name = tensor<string, []>("op_2524_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_2524_end_mask_0 = const()[name = tensor<string, []>("op_2524_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2524_cast = slice_by_index(begin = var_2524_begin_0, end = var_2524_end_0, end_mask = var_2524_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2528_begin_0 = const()[name = tensor<string, []>("op_2528_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_2528_end_0 = const()[name = tensor<string, []>("op_2528_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_2528_end_mask_0 = const()[name = tensor<string, []>("op_2528_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2528_cast = slice_by_index(begin = var_2528_begin_0, end = var_2528_end_0, end_mask = var_2528_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2532_begin_0 = const()[name = tensor<string, []>("op_2532_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_2532_end_0 = const()[name = tensor<string, []>("op_2532_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_2532_end_mask_0 = const()[name = tensor<string, []>("op_2532_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2532_cast = slice_by_index(begin = var_2532_begin_0, end = var_2532_end_0, end_mask = var_2532_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2536_begin_0 = const()[name = tensor<string, []>("op_2536_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_2536_end_0 = const()[name = tensor<string, []>("op_2536_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_2536_end_mask_0 = const()[name = tensor<string, []>("op_2536_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2536_cast = slice_by_index(begin = var_2536_begin_0, end = var_2536_end_0, end_mask = var_2536_end_mask_0, x = v_17_cast);
            tensor<int32, [4]> var_2540_begin_0 = const()[name = tensor<string, []>("op_2540_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_2540_end_0 = const()[name = tensor<string, []>("op_2540_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_2540_end_mask_0 = const()[name = tensor<string, []>("op_2540_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2540_cast = slice_by_index(begin = var_2540_begin_0, end = var_2540_end_0, end_mask = var_2540_end_mask_0, x = v_17_cast);
            tensor<string, []> var_2544_equation_0 = const()[name = tensor<string, []>("op_2544_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2544_cast = einsum(equation = var_2544_equation_0, values = (var_2482_cast, var_2447_cast));
            tensor<fp16, []> var_2545_to_fp16 = const()[name = tensor<string, []>("op_2545_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_129_cast = mul(x = var_2544_cast, y = var_2545_to_fp16);
            tensor<string, []> var_2548_equation_0 = const()[name = tensor<string, []>("op_2548_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2548_cast = einsum(equation = var_2548_equation_0, values = (var_2486_cast, var_2451_cast));
            tensor<fp16, []> var_2549_to_fp16 = const()[name = tensor<string, []>("op_2549_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_131_cast = mul(x = var_2548_cast, y = var_2549_to_fp16);
            tensor<string, []> var_2552_equation_0 = const()[name = tensor<string, []>("op_2552_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2552_cast = einsum(equation = var_2552_equation_0, values = (var_2490_cast, var_2455_cast));
            tensor<fp16, []> var_2553_to_fp16 = const()[name = tensor<string, []>("op_2553_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_133_cast = mul(x = var_2552_cast, y = var_2553_to_fp16);
            tensor<string, []> var_2556_equation_0 = const()[name = tensor<string, []>("op_2556_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2556_cast = einsum(equation = var_2556_equation_0, values = (var_2494_cast, var_2459_cast));
            tensor<fp16, []> var_2557_to_fp16 = const()[name = tensor<string, []>("op_2557_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_135_cast = mul(x = var_2556_cast, y = var_2557_to_fp16);
            tensor<string, []> var_2560_equation_0 = const()[name = tensor<string, []>("op_2560_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2560_cast = einsum(equation = var_2560_equation_0, values = (var_2498_cast, var_2463_cast));
            tensor<fp16, []> var_2561_to_fp16 = const()[name = tensor<string, []>("op_2561_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_137_cast = mul(x = var_2560_cast, y = var_2561_to_fp16);
            tensor<string, []> var_2564_equation_0 = const()[name = tensor<string, []>("op_2564_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2564_cast = einsum(equation = var_2564_equation_0, values = (var_2502_cast, var_2467_cast));
            tensor<fp16, []> var_2565_to_fp16 = const()[name = tensor<string, []>("op_2565_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_139_cast = mul(x = var_2564_cast, y = var_2565_to_fp16);
            tensor<string, []> var_2568_equation_0 = const()[name = tensor<string, []>("op_2568_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2568_cast = einsum(equation = var_2568_equation_0, values = (var_2506_cast, var_2471_cast));
            tensor<fp16, []> var_2569_to_fp16 = const()[name = tensor<string, []>("op_2569_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_141_cast = mul(x = var_2568_cast, y = var_2569_to_fp16);
            tensor<string, []> var_2572_equation_0 = const()[name = tensor<string, []>("op_2572_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_2572_cast = einsum(equation = var_2572_equation_0, values = (var_2510_cast, var_2475_cast));
            tensor<fp16, []> var_2573_to_fp16 = const()[name = tensor<string, []>("op_2573_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_143_cast = mul(x = var_2572_cast, y = var_2573_to_fp16);
            tensor<fp16, [2, 256, 1, 256]> var_2575_cast = softmax(axis = var_2319, x = aw_129_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2576_cast = softmax(axis = var_2319, x = aw_131_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2577_cast = softmax(axis = var_2319, x = aw_133_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2578_cast = softmax(axis = var_2319, x = aw_135_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2579_cast = softmax(axis = var_2319, x = aw_137_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2580_cast = softmax(axis = var_2319, x = aw_139_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2581_cast = softmax(axis = var_2319, x = aw_141_cast);
            tensor<fp16, [2, 256, 1, 256]> var_2582_cast = softmax(axis = var_2319, x = aw_143_cast);
            tensor<string, []> var_2584_equation_0 = const()[name = tensor<string, []>("op_2584_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2584_cast = einsum(equation = var_2584_equation_0, values = (var_2512_cast, var_2575_cast));
            tensor<string, []> var_2586_equation_0 = const()[name = tensor<string, []>("op_2586_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2586_cast = einsum(equation = var_2586_equation_0, values = (var_2516_cast, var_2576_cast));
            tensor<string, []> var_2588_equation_0 = const()[name = tensor<string, []>("op_2588_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2588_cast = einsum(equation = var_2588_equation_0, values = (var_2520_cast, var_2577_cast));
            tensor<string, []> var_2590_equation_0 = const()[name = tensor<string, []>("op_2590_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2590_cast = einsum(equation = var_2590_equation_0, values = (var_2524_cast, var_2578_cast));
            tensor<string, []> var_2592_equation_0 = const()[name = tensor<string, []>("op_2592_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2592_cast = einsum(equation = var_2592_equation_0, values = (var_2528_cast, var_2579_cast));
            tensor<string, []> var_2594_equation_0 = const()[name = tensor<string, []>("op_2594_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2594_cast = einsum(equation = var_2594_equation_0, values = (var_2532_cast, var_2580_cast));
            tensor<string, []> var_2596_equation_0 = const()[name = tensor<string, []>("op_2596_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2596_cast = einsum(equation = var_2596_equation_0, values = (var_2536_cast, var_2581_cast));
            tensor<string, []> var_2598_equation_0 = const()[name = tensor<string, []>("op_2598_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2598_cast = einsum(equation = var_2598_equation_0, values = (var_2540_cast, var_2582_cast));
            tensor<bool, []> input_133_interleave_0 = const()[name = tensor<string, []>("input_133_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_133_cast = concat(axis = var_2319, interleave = input_133_interleave_0, values = (var_2584_cast, var_2586_cast, var_2588_cast, var_2590_cast, var_2592_cast, var_2594_cast, var_2596_cast, var_2598_cast));
            tensor<int32, [2]> var_2604 = const()[name = tensor<string, []>("op_2604"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2606 = const()[name = tensor<string, []>("op_2606"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2608_pad_type_0 = const()[name = tensor<string, []>("op_2608_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2608_pad_0 = const()[name = tensor<string, []>("op_2608_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(161149056)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(164425920)))];
            tensor<fp16, [2, 1280, 1, 256]> var_2608_cast = conv(bias = down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_2606, groups = var_2319, pad = var_2608_pad_0, pad_type = var_2608_pad_type_0, strides = var_2604, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_133_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_27_cast = add(x = var_2608_cast, y = inputs_25_cast);
            tensor<int32, [1]> var_2612 = const()[name = tensor<string, []>("op_2612"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_27_cast = reduce_mean(axes = var_2612, keep_dims = var_2314, x = inputs_27_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_27_cast = sub(x = inputs_27_cast, y = channels_mean_27_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_27_cast = mul(x = zero_mean_27_cast, y = zero_mean_27_cast);
            tensor<int32, [1]> var_2616 = const()[name = tensor<string, []>("op_2616"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_2617_cast = reduce_mean(axes = var_2616, keep_dims = var_2314, x = zero_mean_sq_27_cast);
            tensor<fp16, []> var_2618_to_fp16 = const()[name = tensor<string, []>("op_2618_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_2619_cast = add(x = var_2617_cast, y = var_2618_to_fp16);
            tensor<fp16, []> denom_27_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_27_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_27_cast = rsqrt(epsilon = denom_27_epsilon_0_to_fp16, x = var_2619_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_27_cast = mul(x = zero_mean_27_cast, y = denom_27_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_2623_to_fp16 = const()[name = tensor<string, []>("op_2623_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(164428544)))];
            tensor<fp16, [2, 1280, 1, 256]> var_2624_cast = add(x = out_27_cast, y = var_2623_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_2626_to_fp16 = const()[name = tensor<string, []>("op_2626_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(164431168)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_83_cast = mul(x = var_2624_cast, y = var_2626_to_fp16);
            tensor<int32, [2]> var_2633 = const()[name = tensor<string, []>("op_2633"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2635 = const()[name = tensor<string, []>("op_2635"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_19_pad_type_0 = const()[name = tensor<string, []>("q_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_19_pad_0 = const()[name = tensor<string, []>("q_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(164433792)))];
            tensor<fp16, [2, 1280, 1, 256]> q_19_cast = conv(dilations = var_2635, groups = var_2319, pad = q_19_pad_0, pad_type = q_19_pad_type_0, strides = var_2633, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_83_cast);
            tensor<int32, [2]> var_2639 = const()[name = tensor<string, []>("op_2639"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2641 = const()[name = tensor<string, []>("op_2641"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_37_pad_type_0 = const()[name = tensor<string, []>("k_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_37_pad_0 = const()[name = tensor<string, []>("k_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(167710656)))];
            tensor<fp16, [2, 1280, 1, 77]> k_37_cast = conv(dilations = var_2641, groups = var_2319, pad = k_37_pad_0, pad_type = k_37_pad_type_0, strides = var_2639, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_2645 = const()[name = tensor<string, []>("op_2645"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2647 = const()[name = tensor<string, []>("op_2647"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_19_pad_type_0 = const()[name = tensor<string, []>("v_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_19_pad_0 = const()[name = tensor<string, []>("v_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(169676800)))];
            tensor<fp16, [2, 1280, 1, 77]> v_19_cast = conv(dilations = var_2647, groups = var_2319, pad = v_19_pad_0, pad_type = v_19_pad_type_0, strides = var_2645, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_2651_begin_0 = const()[name = tensor<string, []>("op_2651_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2651_end_0 = const()[name = tensor<string, []>("op_2651_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_2651_end_mask_0 = const()[name = tensor<string, []>("op_2651_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2651_cast = slice_by_index(begin = var_2651_begin_0, end = var_2651_end_0, end_mask = var_2651_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2655_begin_0 = const()[name = tensor<string, []>("op_2655_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_2655_end_0 = const()[name = tensor<string, []>("op_2655_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_2655_end_mask_0 = const()[name = tensor<string, []>("op_2655_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2655_cast = slice_by_index(begin = var_2655_begin_0, end = var_2655_end_0, end_mask = var_2655_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2659_begin_0 = const()[name = tensor<string, []>("op_2659_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_2659_end_0 = const()[name = tensor<string, []>("op_2659_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_2659_end_mask_0 = const()[name = tensor<string, []>("op_2659_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2659_cast = slice_by_index(begin = var_2659_begin_0, end = var_2659_end_0, end_mask = var_2659_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2663_begin_0 = const()[name = tensor<string, []>("op_2663_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_2663_end_0 = const()[name = tensor<string, []>("op_2663_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_2663_end_mask_0 = const()[name = tensor<string, []>("op_2663_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2663_cast = slice_by_index(begin = var_2663_begin_0, end = var_2663_end_0, end_mask = var_2663_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2667_begin_0 = const()[name = tensor<string, []>("op_2667_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_2667_end_0 = const()[name = tensor<string, []>("op_2667_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_2667_end_mask_0 = const()[name = tensor<string, []>("op_2667_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2667_cast = slice_by_index(begin = var_2667_begin_0, end = var_2667_end_0, end_mask = var_2667_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2671_begin_0 = const()[name = tensor<string, []>("op_2671_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_2671_end_0 = const()[name = tensor<string, []>("op_2671_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_2671_end_mask_0 = const()[name = tensor<string, []>("op_2671_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2671_cast = slice_by_index(begin = var_2671_begin_0, end = var_2671_end_0, end_mask = var_2671_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2675_begin_0 = const()[name = tensor<string, []>("op_2675_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_2675_end_0 = const()[name = tensor<string, []>("op_2675_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_2675_end_mask_0 = const()[name = tensor<string, []>("op_2675_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2675_cast = slice_by_index(begin = var_2675_begin_0, end = var_2675_end_0, end_mask = var_2675_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> var_2679_begin_0 = const()[name = tensor<string, []>("op_2679_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_2679_end_0 = const()[name = tensor<string, []>("op_2679_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_2679_end_mask_0 = const()[name = tensor<string, []>("op_2679_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2679_cast = slice_by_index(begin = var_2679_begin_0, end = var_2679_end_0, end_mask = var_2679_end_mask_0, x = q_19_cast);
            tensor<int32, [4]> k_39_perm_0 = const()[name = tensor<string, []>("k_39_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_2686_begin_0 = const()[name = tensor<string, []>("op_2686_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2686_end_0 = const()[name = tensor<string, []>("op_2686_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_2686_end_mask_0 = const()[name = tensor<string, []>("op_2686_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 1280]> transpose_22 = transpose(perm = k_39_perm_0, x = k_37_cast);
            tensor<fp16, [2, 77, 1, 160]> var_2686_cast = slice_by_index(begin = var_2686_begin_0, end = var_2686_end_0, end_mask = var_2686_end_mask_0, x = transpose_22);
            tensor<int32, [4]> var_2690_begin_0 = const()[name = tensor<string, []>("op_2690_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_2690_end_0 = const()[name = tensor<string, []>("op_2690_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_2690_end_mask_0 = const()[name = tensor<string, []>("op_2690_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_2690_cast = slice_by_index(begin = var_2690_begin_0, end = var_2690_end_0, end_mask = var_2690_end_mask_0, x = transpose_22);
            tensor<int32, [4]> var_2694_begin_0 = const()[name = tensor<string, []>("op_2694_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_2694_end_0 = const()[name = tensor<string, []>("op_2694_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_2694_end_mask_0 = const()[name = tensor<string, []>("op_2694_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_2694_cast = slice_by_index(begin = var_2694_begin_0, end = var_2694_end_0, end_mask = var_2694_end_mask_0, x = transpose_22);
            tensor<int32, [4]> var_2698_begin_0 = const()[name = tensor<string, []>("op_2698_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_2698_end_0 = const()[name = tensor<string, []>("op_2698_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_2698_end_mask_0 = const()[name = tensor<string, []>("op_2698_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_2698_cast = slice_by_index(begin = var_2698_begin_0, end = var_2698_end_0, end_mask = var_2698_end_mask_0, x = transpose_22);
            tensor<int32, [4]> var_2702_begin_0 = const()[name = tensor<string, []>("op_2702_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_2702_end_0 = const()[name = tensor<string, []>("op_2702_end_0"), val = tensor<int32, [4]>([2, 77, 1, 800])];
            tensor<bool, [4]> var_2702_end_mask_0 = const()[name = tensor<string, []>("op_2702_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_2702_cast = slice_by_index(begin = var_2702_begin_0, end = var_2702_end_0, end_mask = var_2702_end_mask_0, x = transpose_22);
            tensor<int32, [4]> var_2706_begin_0 = const()[name = tensor<string, []>("op_2706_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_2706_end_0 = const()[name = tensor<string, []>("op_2706_end_0"), val = tensor<int32, [4]>([2, 77, 1, 960])];
            tensor<bool, [4]> var_2706_end_mask_0 = const()[name = tensor<string, []>("op_2706_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_2706_cast = slice_by_index(begin = var_2706_begin_0, end = var_2706_end_0, end_mask = var_2706_end_mask_0, x = transpose_22);
            tensor<int32, [4]> var_2710_begin_0 = const()[name = tensor<string, []>("op_2710_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_2710_end_0 = const()[name = tensor<string, []>("op_2710_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1120])];
            tensor<bool, [4]> var_2710_end_mask_0 = const()[name = tensor<string, []>("op_2710_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_2710_cast = slice_by_index(begin = var_2710_begin_0, end = var_2710_end_0, end_mask = var_2710_end_mask_0, x = transpose_22);
            tensor<int32, [4]> var_2714_begin_0 = const()[name = tensor<string, []>("op_2714_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_2714_end_0 = const()[name = tensor<string, []>("op_2714_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1280])];
            tensor<bool, [4]> var_2714_end_mask_0 = const()[name = tensor<string, []>("op_2714_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_2714_cast = slice_by_index(begin = var_2714_begin_0, end = var_2714_end_0, end_mask = var_2714_end_mask_0, x = transpose_22);
            tensor<int32, [4]> var_2716_begin_0 = const()[name = tensor<string, []>("op_2716_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2716_end_0 = const()[name = tensor<string, []>("op_2716_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_2716_end_mask_0 = const()[name = tensor<string, []>("op_2716_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_2716_cast = slice_by_index(begin = var_2716_begin_0, end = var_2716_end_0, end_mask = var_2716_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_2720_begin_0 = const()[name = tensor<string, []>("op_2720_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_2720_end_0 = const()[name = tensor<string, []>("op_2720_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_2720_end_mask_0 = const()[name = tensor<string, []>("op_2720_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_2720_cast = slice_by_index(begin = var_2720_begin_0, end = var_2720_end_0, end_mask = var_2720_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_2724_begin_0 = const()[name = tensor<string, []>("op_2724_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_2724_end_0 = const()[name = tensor<string, []>("op_2724_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_2724_end_mask_0 = const()[name = tensor<string, []>("op_2724_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_2724_cast = slice_by_index(begin = var_2724_begin_0, end = var_2724_end_0, end_mask = var_2724_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_2728_begin_0 = const()[name = tensor<string, []>("op_2728_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_2728_end_0 = const()[name = tensor<string, []>("op_2728_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_2728_end_mask_0 = const()[name = tensor<string, []>("op_2728_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_2728_cast = slice_by_index(begin = var_2728_begin_0, end = var_2728_end_0, end_mask = var_2728_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_2732_begin_0 = const()[name = tensor<string, []>("op_2732_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_2732_end_0 = const()[name = tensor<string, []>("op_2732_end_0"), val = tensor<int32, [4]>([2, 800, 1, 77])];
            tensor<bool, [4]> var_2732_end_mask_0 = const()[name = tensor<string, []>("op_2732_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_2732_cast = slice_by_index(begin = var_2732_begin_0, end = var_2732_end_0, end_mask = var_2732_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_2736_begin_0 = const()[name = tensor<string, []>("op_2736_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_2736_end_0 = const()[name = tensor<string, []>("op_2736_end_0"), val = tensor<int32, [4]>([2, 960, 1, 77])];
            tensor<bool, [4]> var_2736_end_mask_0 = const()[name = tensor<string, []>("op_2736_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_2736_cast = slice_by_index(begin = var_2736_begin_0, end = var_2736_end_0, end_mask = var_2736_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_2740_begin_0 = const()[name = tensor<string, []>("op_2740_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_2740_end_0 = const()[name = tensor<string, []>("op_2740_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 77])];
            tensor<bool, [4]> var_2740_end_mask_0 = const()[name = tensor<string, []>("op_2740_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_2740_cast = slice_by_index(begin = var_2740_begin_0, end = var_2740_end_0, end_mask = var_2740_end_mask_0, x = v_19_cast);
            tensor<int32, [4]> var_2744_begin_0 = const()[name = tensor<string, []>("op_2744_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_2744_end_0 = const()[name = tensor<string, []>("op_2744_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 77])];
            tensor<bool, [4]> var_2744_end_mask_0 = const()[name = tensor<string, []>("op_2744_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_2744_cast = slice_by_index(begin = var_2744_begin_0, end = var_2744_end_0, end_mask = var_2744_end_mask_0, x = v_19_cast);
            tensor<string, []> var_2748_equation_0 = const()[name = tensor<string, []>("op_2748_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_2748_cast = einsum(equation = var_2748_equation_0, values = (var_2686_cast, var_2651_cast));
            tensor<fp16, []> var_2749_to_fp16 = const()[name = tensor<string, []>("op_2749_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_145_cast = mul(x = var_2748_cast, y = var_2749_to_fp16);
            tensor<string, []> var_2752_equation_0 = const()[name = tensor<string, []>("op_2752_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_2752_cast = einsum(equation = var_2752_equation_0, values = (var_2690_cast, var_2655_cast));
            tensor<fp16, []> var_2753_to_fp16 = const()[name = tensor<string, []>("op_2753_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_147_cast = mul(x = var_2752_cast, y = var_2753_to_fp16);
            tensor<string, []> var_2756_equation_0 = const()[name = tensor<string, []>("op_2756_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_2756_cast = einsum(equation = var_2756_equation_0, values = (var_2694_cast, var_2659_cast));
            tensor<fp16, []> var_2757_to_fp16 = const()[name = tensor<string, []>("op_2757_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_149_cast = mul(x = var_2756_cast, y = var_2757_to_fp16);
            tensor<string, []> var_2760_equation_0 = const()[name = tensor<string, []>("op_2760_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_2760_cast = einsum(equation = var_2760_equation_0, values = (var_2698_cast, var_2663_cast));
            tensor<fp16, []> var_2761_to_fp16 = const()[name = tensor<string, []>("op_2761_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_151_cast = mul(x = var_2760_cast, y = var_2761_to_fp16);
            tensor<string, []> var_2764_equation_0 = const()[name = tensor<string, []>("op_2764_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_2764_cast = einsum(equation = var_2764_equation_0, values = (var_2702_cast, var_2667_cast));
            tensor<fp16, []> var_2765_to_fp16 = const()[name = tensor<string, []>("op_2765_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_153_cast = mul(x = var_2764_cast, y = var_2765_to_fp16);
            tensor<string, []> var_2768_equation_0 = const()[name = tensor<string, []>("op_2768_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_2768_cast = einsum(equation = var_2768_equation_0, values = (var_2706_cast, var_2671_cast));
            tensor<fp16, []> var_2769_to_fp16 = const()[name = tensor<string, []>("op_2769_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_155_cast = mul(x = var_2768_cast, y = var_2769_to_fp16);
            tensor<string, []> var_2772_equation_0 = const()[name = tensor<string, []>("op_2772_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_2772_cast = einsum(equation = var_2772_equation_0, values = (var_2710_cast, var_2675_cast));
            tensor<fp16, []> var_2773_to_fp16 = const()[name = tensor<string, []>("op_2773_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_157_cast = mul(x = var_2772_cast, y = var_2773_to_fp16);
            tensor<string, []> var_2776_equation_0 = const()[name = tensor<string, []>("op_2776_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_2776_cast = einsum(equation = var_2776_equation_0, values = (var_2714_cast, var_2679_cast));
            tensor<fp16, []> var_2777_to_fp16 = const()[name = tensor<string, []>("op_2777_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_159_cast = mul(x = var_2776_cast, y = var_2777_to_fp16);
            tensor<fp16, [2, 77, 1, 256]> var_2779_cast = softmax(axis = var_2319, x = aw_145_cast);
            tensor<fp16, [2, 77, 1, 256]> var_2780_cast = softmax(axis = var_2319, x = aw_147_cast);
            tensor<fp16, [2, 77, 1, 256]> var_2781_cast = softmax(axis = var_2319, x = aw_149_cast);
            tensor<fp16, [2, 77, 1, 256]> var_2782_cast = softmax(axis = var_2319, x = aw_151_cast);
            tensor<fp16, [2, 77, 1, 256]> var_2783_cast = softmax(axis = var_2319, x = aw_153_cast);
            tensor<fp16, [2, 77, 1, 256]> var_2784_cast = softmax(axis = var_2319, x = aw_155_cast);
            tensor<fp16, [2, 77, 1, 256]> var_2785_cast = softmax(axis = var_2319, x = aw_157_cast);
            tensor<fp16, [2, 77, 1, 256]> var_2786_cast = softmax(axis = var_2319, x = aw_159_cast);
            tensor<string, []> var_2788_equation_0 = const()[name = tensor<string, []>("op_2788_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2788_cast = einsum(equation = var_2788_equation_0, values = (var_2716_cast, var_2779_cast));
            tensor<string, []> var_2790_equation_0 = const()[name = tensor<string, []>("op_2790_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2790_cast = einsum(equation = var_2790_equation_0, values = (var_2720_cast, var_2780_cast));
            tensor<string, []> var_2792_equation_0 = const()[name = tensor<string, []>("op_2792_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2792_cast = einsum(equation = var_2792_equation_0, values = (var_2724_cast, var_2781_cast));
            tensor<string, []> var_2794_equation_0 = const()[name = tensor<string, []>("op_2794_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2794_cast = einsum(equation = var_2794_equation_0, values = (var_2728_cast, var_2782_cast));
            tensor<string, []> var_2796_equation_0 = const()[name = tensor<string, []>("op_2796_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2796_cast = einsum(equation = var_2796_equation_0, values = (var_2732_cast, var_2783_cast));
            tensor<string, []> var_2798_equation_0 = const()[name = tensor<string, []>("op_2798_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2798_cast = einsum(equation = var_2798_equation_0, values = (var_2736_cast, var_2784_cast));
            tensor<string, []> var_2800_equation_0 = const()[name = tensor<string, []>("op_2800_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2800_cast = einsum(equation = var_2800_equation_0, values = (var_2740_cast, var_2785_cast));
            tensor<string, []> var_2802_equation_0 = const()[name = tensor<string, []>("op_2802_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_2802_cast = einsum(equation = var_2802_equation_0, values = (var_2744_cast, var_2786_cast));
            tensor<bool, []> input_135_interleave_0 = const()[name = tensor<string, []>("input_135_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_135_cast = concat(axis = var_2319, interleave = input_135_interleave_0, values = (var_2788_cast, var_2790_cast, var_2792_cast, var_2794_cast, var_2796_cast, var_2798_cast, var_2800_cast, var_2802_cast));
            tensor<int32, [2]> var_2808 = const()[name = tensor<string, []>("op_2808"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2810 = const()[name = tensor<string, []>("op_2810"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2812_pad_type_0 = const()[name = tensor<string, []>("op_2812_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2812_pad_0 = const()[name = tensor<string, []>("op_2812_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(171642944)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(174919808)))];
            tensor<fp16, [2, 1280, 1, 256]> var_2812_cast = conv(bias = down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_2810, groups = var_2319, pad = var_2812_pad_0, pad_type = var_2812_pad_type_0, strides = var_2808, weight = down_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_135_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_29_cast = add(x = var_2812_cast, y = inputs_27_cast);
            tensor<int32, [1]> var_2816 = const()[name = tensor<string, []>("op_2816"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_29_cast = reduce_mean(axes = var_2816, keep_dims = var_2314, x = inputs_29_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_29_cast = sub(x = inputs_29_cast, y = channels_mean_29_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_29_cast = mul(x = zero_mean_29_cast, y = zero_mean_29_cast);
            tensor<int32, [1]> var_2820 = const()[name = tensor<string, []>("op_2820"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_2821_cast = reduce_mean(axes = var_2820, keep_dims = var_2314, x = zero_mean_sq_29_cast);
            tensor<fp16, []> var_2822_to_fp16 = const()[name = tensor<string, []>("op_2822_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_2823_cast = add(x = var_2821_cast, y = var_2822_to_fp16);
            tensor<fp16, []> denom_29_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_29_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_29_cast = rsqrt(epsilon = denom_29_epsilon_0_to_fp16, x = var_2823_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_29_cast = mul(x = zero_mean_29_cast, y = denom_29_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_2827_to_fp16 = const()[name = tensor<string, []>("op_2827_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(174922432)))];
            tensor<fp16, [2, 1280, 1, 256]> var_2828_cast = add(x = out_29_cast, y = var_2827_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_2830_to_fp16 = const()[name = tensor<string, []>("op_2830_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(174925056)))];
            tensor<fp16, [2, 1280, 1, 256]> input_137_cast = mul(x = var_2828_cast, y = var_2830_to_fp16);
            tensor<int32, [2]> var_2838 = const()[name = tensor<string, []>("op_2838"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2840 = const()[name = tensor<string, []>("op_2840"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2842_pad_type_0 = const()[name = tensor<string, []>("op_2842_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2842_pad_0 = const()[name = tensor<string, []>("op_2842_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [10240, 1280, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [10240, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(174927680)))];
            tensor<fp16, [10240]> down_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [10240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(201142144)))];
            tensor<fp16, [2, 10240, 1, 256]> var_2842_cast = conv(bias = down_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_2840, groups = var_2319, pad = var_2842_pad_0, pad_type = var_2842_pad_type_0, strides = var_2838, weight = down_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_137_cast);
            tensor<int32, [2]> var_2843_split_sizes_0 = const()[name = tensor<string, []>("op_2843_split_sizes_0"), val = tensor<int32, [2]>([5120, 5120])];
            tensor<int32, []> var_2843_axis_0 = const()[name = tensor<string, []>("op_2843_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 5120, 1, 256]> var_2843_cast_0, tensor<fp16, [2, 5120, 1, 256]> var_2843_cast_1 = split(axis = var_2843_axis_0, split_sizes = var_2843_split_sizes_0, x = var_2842_cast);
            tensor<string, []> var_2845_mode_0 = const()[name = tensor<string, []>("op_2845_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 5120, 1, 256]> var_2845_cast = gelu(mode = var_2845_mode_0, x = var_2843_cast_1);
            tensor<fp16, [2, 5120, 1, 256]> input_139_cast = mul(x = var_2843_cast_0, y = var_2845_cast);
            tensor<int32, [2]> var_2849 = const()[name = tensor<string, []>("op_2849"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2851 = const()[name = tensor<string, []>("op_2851"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2853_pad_type_0 = const()[name = tensor<string, []>("op_2853_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2853_pad_0 = const()[name = tensor<string, []>("op_2853_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 5120, 1, 1]> down_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(201162688)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(214269952)))];
            tensor<fp16, [2, 1280, 1, 256]> var_2853_cast = conv(bias = down_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_2851, groups = var_2319, pad = var_2853_pad_0, pad_type = var_2853_pad_type_0, strides = var_2849, weight = down_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_139_cast);
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_87_cast = add(x = var_2853_cast, y = inputs_29_cast);
            tensor<int32, [4]> var_2855 = const()[name = tensor<string, []>("op_2855"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> input_141_cast = reshape(shape = var_2855, x = hidden_states_87_cast);
            tensor<int32, [2]> var_2859 = const()[name = tensor<string, []>("op_2859"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2861 = const()[name = tensor<string, []>("op_2861"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_89_pad_type_0 = const()[name = tensor<string, []>("hidden_states_89_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_89_pad_0 = const()[name = tensor<string, []>("hidden_states_89_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_0_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_proj_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(214272576)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_0_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_0_proj_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217549440)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_89_cast = conv(bias = down_blocks_2_attentions_0_proj_out_bias_to_fp16, dilations = var_2861, groups = var_2319, pad = hidden_states_89_pad_0, pad_type = hidden_states_89_pad_type_0, strides = var_2859, weight = down_blocks_2_attentions_0_proj_out_weight_to_fp16, x = input_141_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_143_cast = add(x = hidden_states_89_cast, y = hidden_states_77_cast);
            tensor<int32, [5]> reshape_60_shape_0 = const()[name = tensor<string, []>("reshape_60_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_60_cast = reshape(shape = reshape_60_shape_0, x = input_143_cast);
            tensor<int32, [3]> reduce_mean_45_axes_0 = const()[name = tensor<string, []>("reduce_mean_45_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_45_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_45_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_45_cast = reduce_mean(axes = reduce_mean_45_axes_0, keep_dims = reduce_mean_45_keep_dims_0, x = reshape_60_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_30_cast = sub(x = reshape_60_cast, y = reduce_mean_45_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_15_cast = square(x = sub_30_cast);
            tensor<int32, [3]> reduce_mean_47_axes_0 = const()[name = tensor<string, []>("reduce_mean_47_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_47_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_47_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_47_cast = reduce_mean(axes = reduce_mean_47_axes_0, keep_dims = reduce_mean_47_keep_dims_0, x = square_15_cast);
            tensor<fp16, []> add_30_y_0_to_fp16 = const()[name = tensor<string, []>("add_30_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_30_cast = add(x = reduce_mean_47_cast, y = add_30_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_15_cast = sqrt(x = add_30_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_15_cast = real_div(x = sub_30_cast, y = sqrt_15_cast);
            tensor<int32, [4]> reshape_61_shape_0 = const()[name = tensor<string, []>("reshape_61_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_61_cast = reshape(shape = reshape_61_shape_0, x = real_div_15_cast);
            tensor<fp16, [1280]> add_31_mean_0_to_fp16 = const()[name = tensor<string, []>("add_31_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217552064)))];
            tensor<fp16, [1280]> add_31_variance_0_to_fp16 = const()[name = tensor<string, []>("add_31_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217554688)))];
            tensor<fp16, [1280]> add_31_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_31_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217557312)))];
            tensor<fp16, [1280]> add_31_beta_0_to_fp16 = const()[name = tensor<string, []>("add_31_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217559936)))];
            tensor<fp16, []> add_31_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_31_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_31_cast = batch_norm(beta = add_31_beta_0_to_fp16, epsilon = add_31_epsilon_0_to_fp16, gamma = add_31_gamma_0_to_fp16, mean = add_31_mean_0_to_fp16, variance = add_31_variance_0_to_fp16, x = reshape_61_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_147_cast = silu(x = add_31_cast);
            tensor<int32, [2]> var_2876 = const()[name = tensor<string, []>("op_2876"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2878 = const()[name = tensor<string, []>("op_2878"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_91_pad_type_0 = const()[name = tensor<string, []>("hidden_states_91_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_91_pad_0 = const()[name = tensor<string, []>("hidden_states_91_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_2_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(217562560)))];
            tensor<fp16, [1280]> down_blocks_2_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(247053824)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_91_cast = conv(bias = down_blocks_2_resnets_1_conv1_bias_to_fp16, dilations = var_2878, groups = var_2319, pad = hidden_states_91_pad_0, pad_type = hidden_states_91_pad_type_0, strides = var_2876, weight = down_blocks_2_resnets_1_conv1_weight_to_fp16, x = input_147_cast);
            tensor<int32, [2]> var_2884 = const()[name = tensor<string, []>("op_2884"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2886 = const()[name = tensor<string, []>("op_2886"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_11_pad_type_0 = const()[name = tensor<string, []>("temb_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_11_pad_0 = const()[name = tensor<string, []>("temb_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(247056448)))];
            tensor<fp16, [1280]> down_blocks_2_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250333312)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_11_cast = conv(bias = down_blocks_2_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_2886, groups = var_2319, pad = temb_11_pad_0, pad_type = temb_11_pad_type_0, strides = var_2884, weight = down_blocks_2_resnets_1_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_151_cast = add(x = hidden_states_91_cast, y = temb_11_cast);
            tensor<int32, [5]> reshape_64_shape_0 = const()[name = tensor<string, []>("reshape_64_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_64_cast = reshape(shape = reshape_64_shape_0, x = input_151_cast);
            tensor<int32, [3]> reduce_mean_48_axes_0 = const()[name = tensor<string, []>("reduce_mean_48_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_48_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_48_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_48_cast = reduce_mean(axes = reduce_mean_48_axes_0, keep_dims = reduce_mean_48_keep_dims_0, x = reshape_64_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_32_cast = sub(x = reshape_64_cast, y = reduce_mean_48_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_16_cast = square(x = sub_32_cast);
            tensor<int32, [3]> reduce_mean_50_axes_0 = const()[name = tensor<string, []>("reduce_mean_50_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_50_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_50_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_50_cast = reduce_mean(axes = reduce_mean_50_axes_0, keep_dims = reduce_mean_50_keep_dims_0, x = square_16_cast);
            tensor<fp16, []> add_32_y_0_to_fp16 = const()[name = tensor<string, []>("add_32_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_32_cast = add(x = reduce_mean_50_cast, y = add_32_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_16_cast = sqrt(x = add_32_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_16_cast = real_div(x = sub_32_cast, y = sqrt_16_cast);
            tensor<int32, [4]> reshape_65_shape_0 = const()[name = tensor<string, []>("reshape_65_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_65_cast = reshape(shape = reshape_65_shape_0, x = real_div_16_cast);
            tensor<fp16, [1280]> add_33_mean_0_to_fp16 = const()[name = tensor<string, []>("add_33_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250335936)))];
            tensor<fp16, [1280]> add_33_variance_0_to_fp16 = const()[name = tensor<string, []>("add_33_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250338560)))];
            tensor<fp16, [1280]> add_33_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_33_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250341184)))];
            tensor<fp16, [1280]> add_33_beta_0_to_fp16 = const()[name = tensor<string, []>("add_33_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250343808)))];
            tensor<fp16, []> add_33_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_33_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_33_cast = batch_norm(beta = add_33_beta_0_to_fp16, epsilon = add_33_epsilon_0_to_fp16, gamma = add_33_gamma_0_to_fp16, mean = add_33_mean_0_to_fp16, variance = add_33_variance_0_to_fp16, x = reshape_65_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_155_cast = silu(x = add_33_cast);
            tensor<int32, [2]> var_2896 = const()[name = tensor<string, []>("op_2896"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2898 = const()[name = tensor<string, []>("op_2898"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_93_pad_type_0 = const()[name = tensor<string, []>("hidden_states_93_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_93_pad_0 = const()[name = tensor<string, []>("hidden_states_93_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_2_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(250346432)))];
            tensor<fp16, [1280]> down_blocks_2_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(279837696)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_93_cast = conv(bias = down_blocks_2_resnets_1_conv2_bias_to_fp16, dilations = var_2898, groups = var_2319, pad = hidden_states_93_pad_0, pad_type = hidden_states_93_pad_type_0, strides = var_2896, weight = down_blocks_2_resnets_1_conv2_weight_to_fp16, x = input_155_cast);
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_95_cast = add(x = input_143_cast, y = hidden_states_93_cast);
            tensor<int32, [5]> reshape_68_shape_0 = const()[name = tensor<string, []>("reshape_68_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_68_cast = reshape(shape = reshape_68_shape_0, x = hidden_states_95_cast);
            tensor<int32, [3]> reduce_mean_51_axes_0 = const()[name = tensor<string, []>("reduce_mean_51_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_51_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_51_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_51_cast = reduce_mean(axes = reduce_mean_51_axes_0, keep_dims = reduce_mean_51_keep_dims_0, x = reshape_68_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_34_cast = sub(x = reshape_68_cast, y = reduce_mean_51_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_17_cast = square(x = sub_34_cast);
            tensor<int32, [3]> reduce_mean_53_axes_0 = const()[name = tensor<string, []>("reduce_mean_53_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_53_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_53_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_53_cast = reduce_mean(axes = reduce_mean_53_axes_0, keep_dims = reduce_mean_53_keep_dims_0, x = square_17_cast);
            tensor<fp16, []> add_34_y_0_to_fp16 = const()[name = tensor<string, []>("add_34_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_34_cast = add(x = reduce_mean_53_cast, y = add_34_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_17_cast = sqrt(x = add_34_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_17_cast = real_div(x = sub_34_cast, y = sqrt_17_cast);
            tensor<int32, [4]> reshape_69_shape_0 = const()[name = tensor<string, []>("reshape_69_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_69_cast = reshape(shape = reshape_69_shape_0, x = real_div_17_cast);
            tensor<fp16, [1280]> add_35_mean_0_to_fp16 = const()[name = tensor<string, []>("add_35_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(279840320)))];
            tensor<fp16, [1280]> add_35_variance_0_to_fp16 = const()[name = tensor<string, []>("add_35_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(279842944)))];
            tensor<fp16, [1280]> add_35_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_35_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(279845568)))];
            tensor<fp16, [1280]> add_35_beta_0_to_fp16 = const()[name = tensor<string, []>("add_35_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(279848192)))];
            tensor<fp16, []> add_35_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_35_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_35_cast = batch_norm(beta = add_35_beta_0_to_fp16, epsilon = add_35_epsilon_0_to_fp16, gamma = add_35_gamma_0_to_fp16, mean = add_35_mean_0_to_fp16, variance = add_35_variance_0_to_fp16, x = reshape_69_cast);
            tensor<int32, [2]> var_2918 = const()[name = tensor<string, []>("op_2918"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2920 = const()[name = tensor<string, []>("op_2920"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_97_pad_type_0 = const()[name = tensor<string, []>("hidden_states_97_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_97_pad_0 = const()[name = tensor<string, []>("hidden_states_97_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_proj_in_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(279850816)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_1_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_proj_in_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(283127680)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_97_cast = conv(bias = down_blocks_2_attentions_1_proj_in_bias_to_fp16, dilations = var_2920, groups = var_2319, pad = hidden_states_97_pad_0, pad_type = hidden_states_97_pad_type_0, strides = var_2918, weight = down_blocks_2_attentions_1_proj_in_weight_to_fp16, x = add_35_cast);
            tensor<int32, [4]> var_2925 = const()[name = tensor<string, []>("op_2925"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<fp16, [2, 1280, 1, 256]> inputs_31_cast = reshape(shape = var_2925, x = hidden_states_97_cast);
            tensor<int32, [1]> var_2935 = const()[name = tensor<string, []>("op_2935"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_31_cast = reduce_mean(axes = var_2935, keep_dims = var_2314, x = inputs_31_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_31_cast = sub(x = inputs_31_cast, y = channels_mean_31_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_31_cast = mul(x = zero_mean_31_cast, y = zero_mean_31_cast);
            tensor<int32, [1]> var_2939 = const()[name = tensor<string, []>("op_2939"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_2940_cast = reduce_mean(axes = var_2939, keep_dims = var_2314, x = zero_mean_sq_31_cast);
            tensor<fp16, []> var_2941_to_fp16 = const()[name = tensor<string, []>("op_2941_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_2942_cast = add(x = var_2940_cast, y = var_2941_to_fp16);
            tensor<fp16, []> denom_31_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_31_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_31_cast = rsqrt(epsilon = denom_31_epsilon_0_to_fp16, x = var_2942_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_31_cast = mul(x = zero_mean_31_cast, y = denom_31_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_2946_to_fp16 = const()[name = tensor<string, []>("op_2946_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(283130304)))];
            tensor<fp16, [2, 1280, 1, 256]> var_2947_cast = add(x = out_31_cast, y = var_2946_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_2949_to_fp16 = const()[name = tensor<string, []>("op_2949_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(283132928)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_99_cast = mul(x = var_2947_cast, y = var_2949_to_fp16);
            tensor<int32, [2]> var_2956 = const()[name = tensor<string, []>("op_2956"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2958 = const()[name = tensor<string, []>("op_2958"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_21_pad_type_0 = const()[name = tensor<string, []>("q_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_21_pad_0 = const()[name = tensor<string, []>("q_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(283135552)))];
            tensor<fp16, [2, 1280, 1, 256]> q_21_cast = conv(dilations = var_2958, groups = var_2319, pad = q_21_pad_0, pad_type = q_21_pad_type_0, strides = var_2956, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_99_cast);
            tensor<int32, [2]> var_2962 = const()[name = tensor<string, []>("op_2962"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2964 = const()[name = tensor<string, []>("op_2964"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_41_pad_type_0 = const()[name = tensor<string, []>("k_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_41_pad_0 = const()[name = tensor<string, []>("k_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(286412416)))];
            tensor<fp16, [2, 1280, 1, 256]> k_41_cast = conv(dilations = var_2964, groups = var_2319, pad = k_41_pad_0, pad_type = k_41_pad_type_0, strides = var_2962, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_99_cast);
            tensor<int32, [2]> var_2968 = const()[name = tensor<string, []>("op_2968"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2970 = const()[name = tensor<string, []>("op_2970"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_21_pad_type_0 = const()[name = tensor<string, []>("v_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_21_pad_0 = const()[name = tensor<string, []>("v_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(289689280)))];
            tensor<fp16, [2, 1280, 1, 256]> v_21_cast = conv(dilations = var_2970, groups = var_2319, pad = v_21_pad_0, pad_type = v_21_pad_type_0, strides = var_2968, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_99_cast);
            tensor<int32, [4]> var_2974_begin_0 = const()[name = tensor<string, []>("op_2974_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2974_end_0 = const()[name = tensor<string, []>("op_2974_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_2974_end_mask_0 = const()[name = tensor<string, []>("op_2974_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2974_cast = slice_by_index(begin = var_2974_begin_0, end = var_2974_end_0, end_mask = var_2974_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_2978_begin_0 = const()[name = tensor<string, []>("op_2978_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_2978_end_0 = const()[name = tensor<string, []>("op_2978_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_2978_end_mask_0 = const()[name = tensor<string, []>("op_2978_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2978_cast = slice_by_index(begin = var_2978_begin_0, end = var_2978_end_0, end_mask = var_2978_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_2982_begin_0 = const()[name = tensor<string, []>("op_2982_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_2982_end_0 = const()[name = tensor<string, []>("op_2982_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_2982_end_mask_0 = const()[name = tensor<string, []>("op_2982_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2982_cast = slice_by_index(begin = var_2982_begin_0, end = var_2982_end_0, end_mask = var_2982_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_2986_begin_0 = const()[name = tensor<string, []>("op_2986_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_2986_end_0 = const()[name = tensor<string, []>("op_2986_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_2986_end_mask_0 = const()[name = tensor<string, []>("op_2986_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2986_cast = slice_by_index(begin = var_2986_begin_0, end = var_2986_end_0, end_mask = var_2986_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_2990_begin_0 = const()[name = tensor<string, []>("op_2990_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_2990_end_0 = const()[name = tensor<string, []>("op_2990_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_2990_end_mask_0 = const()[name = tensor<string, []>("op_2990_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2990_cast = slice_by_index(begin = var_2990_begin_0, end = var_2990_end_0, end_mask = var_2990_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_2994_begin_0 = const()[name = tensor<string, []>("op_2994_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_2994_end_0 = const()[name = tensor<string, []>("op_2994_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_2994_end_mask_0 = const()[name = tensor<string, []>("op_2994_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2994_cast = slice_by_index(begin = var_2994_begin_0, end = var_2994_end_0, end_mask = var_2994_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_2998_begin_0 = const()[name = tensor<string, []>("op_2998_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_2998_end_0 = const()[name = tensor<string, []>("op_2998_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_2998_end_mask_0 = const()[name = tensor<string, []>("op_2998_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_2998_cast = slice_by_index(begin = var_2998_begin_0, end = var_2998_end_0, end_mask = var_2998_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> var_3002_begin_0 = const()[name = tensor<string, []>("op_3002_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_3002_end_0 = const()[name = tensor<string, []>("op_3002_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_3002_end_mask_0 = const()[name = tensor<string, []>("op_3002_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3002_cast = slice_by_index(begin = var_3002_begin_0, end = var_3002_end_0, end_mask = var_3002_end_mask_0, x = q_21_cast);
            tensor<int32, [4]> k_43_perm_0 = const()[name = tensor<string, []>("k_43_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_3009_begin_0 = const()[name = tensor<string, []>("op_3009_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3009_end_0 = const()[name = tensor<string, []>("op_3009_end_0"), val = tensor<int32, [4]>([2, 256, 1, 160])];
            tensor<bool, [4]> var_3009_end_mask_0 = const()[name = tensor<string, []>("op_3009_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 1280]> transpose_21 = transpose(perm = k_43_perm_0, x = k_41_cast);
            tensor<fp16, [2, 256, 1, 160]> var_3009_cast = slice_by_index(begin = var_3009_begin_0, end = var_3009_end_0, end_mask = var_3009_end_mask_0, x = transpose_21);
            tensor<int32, [4]> var_3013_begin_0 = const()[name = tensor<string, []>("op_3013_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_3013_end_0 = const()[name = tensor<string, []>("op_3013_end_0"), val = tensor<int32, [4]>([2, 256, 1, 320])];
            tensor<bool, [4]> var_3013_end_mask_0 = const()[name = tensor<string, []>("op_3013_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_3013_cast = slice_by_index(begin = var_3013_begin_0, end = var_3013_end_0, end_mask = var_3013_end_mask_0, x = transpose_21);
            tensor<int32, [4]> var_3017_begin_0 = const()[name = tensor<string, []>("op_3017_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_3017_end_0 = const()[name = tensor<string, []>("op_3017_end_0"), val = tensor<int32, [4]>([2, 256, 1, 480])];
            tensor<bool, [4]> var_3017_end_mask_0 = const()[name = tensor<string, []>("op_3017_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_3017_cast = slice_by_index(begin = var_3017_begin_0, end = var_3017_end_0, end_mask = var_3017_end_mask_0, x = transpose_21);
            tensor<int32, [4]> var_3021_begin_0 = const()[name = tensor<string, []>("op_3021_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_3021_end_0 = const()[name = tensor<string, []>("op_3021_end_0"), val = tensor<int32, [4]>([2, 256, 1, 640])];
            tensor<bool, [4]> var_3021_end_mask_0 = const()[name = tensor<string, []>("op_3021_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_3021_cast = slice_by_index(begin = var_3021_begin_0, end = var_3021_end_0, end_mask = var_3021_end_mask_0, x = transpose_21);
            tensor<int32, [4]> var_3025_begin_0 = const()[name = tensor<string, []>("op_3025_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_3025_end_0 = const()[name = tensor<string, []>("op_3025_end_0"), val = tensor<int32, [4]>([2, 256, 1, 800])];
            tensor<bool, [4]> var_3025_end_mask_0 = const()[name = tensor<string, []>("op_3025_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_3025_cast = slice_by_index(begin = var_3025_begin_0, end = var_3025_end_0, end_mask = var_3025_end_mask_0, x = transpose_21);
            tensor<int32, [4]> var_3029_begin_0 = const()[name = tensor<string, []>("op_3029_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_3029_end_0 = const()[name = tensor<string, []>("op_3029_end_0"), val = tensor<int32, [4]>([2, 256, 1, 960])];
            tensor<bool, [4]> var_3029_end_mask_0 = const()[name = tensor<string, []>("op_3029_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_3029_cast = slice_by_index(begin = var_3029_begin_0, end = var_3029_end_0, end_mask = var_3029_end_mask_0, x = transpose_21);
            tensor<int32, [4]> var_3033_begin_0 = const()[name = tensor<string, []>("op_3033_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_3033_end_0 = const()[name = tensor<string, []>("op_3033_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1120])];
            tensor<bool, [4]> var_3033_end_mask_0 = const()[name = tensor<string, []>("op_3033_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_3033_cast = slice_by_index(begin = var_3033_begin_0, end = var_3033_end_0, end_mask = var_3033_end_mask_0, x = transpose_21);
            tensor<int32, [4]> var_3037_begin_0 = const()[name = tensor<string, []>("op_3037_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_3037_end_0 = const()[name = tensor<string, []>("op_3037_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1280])];
            tensor<bool, [4]> var_3037_end_mask_0 = const()[name = tensor<string, []>("op_3037_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_3037_cast = slice_by_index(begin = var_3037_begin_0, end = var_3037_end_0, end_mask = var_3037_end_mask_0, x = transpose_21);
            tensor<int32, [4]> var_3039_begin_0 = const()[name = tensor<string, []>("op_3039_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3039_end_0 = const()[name = tensor<string, []>("op_3039_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_3039_end_mask_0 = const()[name = tensor<string, []>("op_3039_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3039_cast = slice_by_index(begin = var_3039_begin_0, end = var_3039_end_0, end_mask = var_3039_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3043_begin_0 = const()[name = tensor<string, []>("op_3043_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_3043_end_0 = const()[name = tensor<string, []>("op_3043_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_3043_end_mask_0 = const()[name = tensor<string, []>("op_3043_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3043_cast = slice_by_index(begin = var_3043_begin_0, end = var_3043_end_0, end_mask = var_3043_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3047_begin_0 = const()[name = tensor<string, []>("op_3047_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_3047_end_0 = const()[name = tensor<string, []>("op_3047_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_3047_end_mask_0 = const()[name = tensor<string, []>("op_3047_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3047_cast = slice_by_index(begin = var_3047_begin_0, end = var_3047_end_0, end_mask = var_3047_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3051_begin_0 = const()[name = tensor<string, []>("op_3051_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_3051_end_0 = const()[name = tensor<string, []>("op_3051_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_3051_end_mask_0 = const()[name = tensor<string, []>("op_3051_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3051_cast = slice_by_index(begin = var_3051_begin_0, end = var_3051_end_0, end_mask = var_3051_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3055_begin_0 = const()[name = tensor<string, []>("op_3055_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_3055_end_0 = const()[name = tensor<string, []>("op_3055_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_3055_end_mask_0 = const()[name = tensor<string, []>("op_3055_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3055_cast = slice_by_index(begin = var_3055_begin_0, end = var_3055_end_0, end_mask = var_3055_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3059_begin_0 = const()[name = tensor<string, []>("op_3059_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_3059_end_0 = const()[name = tensor<string, []>("op_3059_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_3059_end_mask_0 = const()[name = tensor<string, []>("op_3059_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3059_cast = slice_by_index(begin = var_3059_begin_0, end = var_3059_end_0, end_mask = var_3059_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3063_begin_0 = const()[name = tensor<string, []>("op_3063_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_3063_end_0 = const()[name = tensor<string, []>("op_3063_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_3063_end_mask_0 = const()[name = tensor<string, []>("op_3063_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3063_cast = slice_by_index(begin = var_3063_begin_0, end = var_3063_end_0, end_mask = var_3063_end_mask_0, x = v_21_cast);
            tensor<int32, [4]> var_3067_begin_0 = const()[name = tensor<string, []>("op_3067_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_3067_end_0 = const()[name = tensor<string, []>("op_3067_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_3067_end_mask_0 = const()[name = tensor<string, []>("op_3067_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3067_cast = slice_by_index(begin = var_3067_begin_0, end = var_3067_end_0, end_mask = var_3067_end_mask_0, x = v_21_cast);
            tensor<string, []> var_3071_equation_0 = const()[name = tensor<string, []>("op_3071_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3071_cast = einsum(equation = var_3071_equation_0, values = (var_3009_cast, var_2974_cast));
            tensor<fp16, []> var_3072_to_fp16 = const()[name = tensor<string, []>("op_3072_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_161_cast = mul(x = var_3071_cast, y = var_3072_to_fp16);
            tensor<string, []> var_3075_equation_0 = const()[name = tensor<string, []>("op_3075_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3075_cast = einsum(equation = var_3075_equation_0, values = (var_3013_cast, var_2978_cast));
            tensor<fp16, []> var_3076_to_fp16 = const()[name = tensor<string, []>("op_3076_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_163_cast = mul(x = var_3075_cast, y = var_3076_to_fp16);
            tensor<string, []> var_3079_equation_0 = const()[name = tensor<string, []>("op_3079_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3079_cast = einsum(equation = var_3079_equation_0, values = (var_3017_cast, var_2982_cast));
            tensor<fp16, []> var_3080_to_fp16 = const()[name = tensor<string, []>("op_3080_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_165_cast = mul(x = var_3079_cast, y = var_3080_to_fp16);
            tensor<string, []> var_3083_equation_0 = const()[name = tensor<string, []>("op_3083_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3083_cast = einsum(equation = var_3083_equation_0, values = (var_3021_cast, var_2986_cast));
            tensor<fp16, []> var_3084_to_fp16 = const()[name = tensor<string, []>("op_3084_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_167_cast = mul(x = var_3083_cast, y = var_3084_to_fp16);
            tensor<string, []> var_3087_equation_0 = const()[name = tensor<string, []>("op_3087_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3087_cast = einsum(equation = var_3087_equation_0, values = (var_3025_cast, var_2990_cast));
            tensor<fp16, []> var_3088_to_fp16 = const()[name = tensor<string, []>("op_3088_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_169_cast = mul(x = var_3087_cast, y = var_3088_to_fp16);
            tensor<string, []> var_3091_equation_0 = const()[name = tensor<string, []>("op_3091_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3091_cast = einsum(equation = var_3091_equation_0, values = (var_3029_cast, var_2994_cast));
            tensor<fp16, []> var_3092_to_fp16 = const()[name = tensor<string, []>("op_3092_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_171_cast = mul(x = var_3091_cast, y = var_3092_to_fp16);
            tensor<string, []> var_3095_equation_0 = const()[name = tensor<string, []>("op_3095_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3095_cast = einsum(equation = var_3095_equation_0, values = (var_3033_cast, var_2998_cast));
            tensor<fp16, []> var_3096_to_fp16 = const()[name = tensor<string, []>("op_3096_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_173_cast = mul(x = var_3095_cast, y = var_3096_to_fp16);
            tensor<string, []> var_3099_equation_0 = const()[name = tensor<string, []>("op_3099_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_3099_cast = einsum(equation = var_3099_equation_0, values = (var_3037_cast, var_3002_cast));
            tensor<fp16, []> var_3100_to_fp16 = const()[name = tensor<string, []>("op_3100_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_175_cast = mul(x = var_3099_cast, y = var_3100_to_fp16);
            tensor<fp16, [2, 256, 1, 256]> var_3102_cast = softmax(axis = var_2319, x = aw_161_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3103_cast = softmax(axis = var_2319, x = aw_163_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3104_cast = softmax(axis = var_2319, x = aw_165_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3105_cast = softmax(axis = var_2319, x = aw_167_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3106_cast = softmax(axis = var_2319, x = aw_169_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3107_cast = softmax(axis = var_2319, x = aw_171_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3108_cast = softmax(axis = var_2319, x = aw_173_cast);
            tensor<fp16, [2, 256, 1, 256]> var_3109_cast = softmax(axis = var_2319, x = aw_175_cast);
            tensor<string, []> var_3111_equation_0 = const()[name = tensor<string, []>("op_3111_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3111_cast = einsum(equation = var_3111_equation_0, values = (var_3039_cast, var_3102_cast));
            tensor<string, []> var_3113_equation_0 = const()[name = tensor<string, []>("op_3113_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3113_cast = einsum(equation = var_3113_equation_0, values = (var_3043_cast, var_3103_cast));
            tensor<string, []> var_3115_equation_0 = const()[name = tensor<string, []>("op_3115_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3115_cast = einsum(equation = var_3115_equation_0, values = (var_3047_cast, var_3104_cast));
            tensor<string, []> var_3117_equation_0 = const()[name = tensor<string, []>("op_3117_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3117_cast = einsum(equation = var_3117_equation_0, values = (var_3051_cast, var_3105_cast));
            tensor<string, []> var_3119_equation_0 = const()[name = tensor<string, []>("op_3119_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3119_cast = einsum(equation = var_3119_equation_0, values = (var_3055_cast, var_3106_cast));
            tensor<string, []> var_3121_equation_0 = const()[name = tensor<string, []>("op_3121_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3121_cast = einsum(equation = var_3121_equation_0, values = (var_3059_cast, var_3107_cast));
            tensor<string, []> var_3123_equation_0 = const()[name = tensor<string, []>("op_3123_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3123_cast = einsum(equation = var_3123_equation_0, values = (var_3063_cast, var_3108_cast));
            tensor<string, []> var_3125_equation_0 = const()[name = tensor<string, []>("op_3125_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3125_cast = einsum(equation = var_3125_equation_0, values = (var_3067_cast, var_3109_cast));
            tensor<bool, []> input_159_interleave_0 = const()[name = tensor<string, []>("input_159_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_159_cast = concat(axis = var_2319, interleave = input_159_interleave_0, values = (var_3111_cast, var_3113_cast, var_3115_cast, var_3117_cast, var_3119_cast, var_3121_cast, var_3123_cast, var_3125_cast));
            tensor<int32, [2]> var_3131 = const()[name = tensor<string, []>("op_3131"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3133 = const()[name = tensor<string, []>("op_3133"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_3135_pad_type_0 = const()[name = tensor<string, []>("op_3135_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_3135_pad_0 = const()[name = tensor<string, []>("op_3135_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(292966144)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(296243008)))];
            tensor<fp16, [2, 1280, 1, 256]> var_3135_cast = conv(bias = down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_3133, groups = var_2319, pad = var_3135_pad_0, pad_type = var_3135_pad_type_0, strides = var_3131, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_159_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_33_cast = add(x = var_3135_cast, y = inputs_31_cast);
            tensor<int32, [1]> var_3139 = const()[name = tensor<string, []>("op_3139"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_33_cast = reduce_mean(axes = var_3139, keep_dims = var_2314, x = inputs_33_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_33_cast = sub(x = inputs_33_cast, y = channels_mean_33_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_33_cast = mul(x = zero_mean_33_cast, y = zero_mean_33_cast);
            tensor<int32, [1]> var_3143 = const()[name = tensor<string, []>("op_3143"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_3144_cast = reduce_mean(axes = var_3143, keep_dims = var_2314, x = zero_mean_sq_33_cast);
            tensor<fp16, []> var_3145_to_fp16 = const()[name = tensor<string, []>("op_3145_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_3146_cast = add(x = var_3144_cast, y = var_3145_to_fp16);
            tensor<fp16, []> denom_33_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_33_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_33_cast = rsqrt(epsilon = denom_33_epsilon_0_to_fp16, x = var_3146_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_33_cast = mul(x = zero_mean_33_cast, y = denom_33_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_3150_to_fp16 = const()[name = tensor<string, []>("op_3150_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(296245632)))];
            tensor<fp16, [2, 1280, 1, 256]> var_3151_cast = add(x = out_33_cast, y = var_3150_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_3153_to_fp16 = const()[name = tensor<string, []>("op_3153_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(296248256)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_101_cast = mul(x = var_3151_cast, y = var_3153_to_fp16);
            tensor<int32, [2]> var_3160 = const()[name = tensor<string, []>("op_3160"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3162 = const()[name = tensor<string, []>("op_3162"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_23_pad_type_0 = const()[name = tensor<string, []>("q_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_23_pad_0 = const()[name = tensor<string, []>("q_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(296250880)))];
            tensor<fp16, [2, 1280, 1, 256]> q_23_cast = conv(dilations = var_3162, groups = var_2319, pad = q_23_pad_0, pad_type = q_23_pad_type_0, strides = var_3160, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_101_cast);
            tensor<int32, [2]> var_3166 = const()[name = tensor<string, []>("op_3166"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3168 = const()[name = tensor<string, []>("op_3168"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_45_pad_type_0 = const()[name = tensor<string, []>("k_45_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_45_pad_0 = const()[name = tensor<string, []>("k_45_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(299527744)))];
            tensor<fp16, [2, 1280, 1, 77]> k_45_cast = conv(dilations = var_3168, groups = var_2319, pad = k_45_pad_0, pad_type = k_45_pad_type_0, strides = var_3166, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_3172 = const()[name = tensor<string, []>("op_3172"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3174 = const()[name = tensor<string, []>("op_3174"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_23_pad_type_0 = const()[name = tensor<string, []>("v_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_23_pad_0 = const()[name = tensor<string, []>("v_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(301493888)))];
            tensor<fp16, [2, 1280, 1, 77]> v_23_cast = conv(dilations = var_3174, groups = var_2319, pad = v_23_pad_0, pad_type = v_23_pad_type_0, strides = var_3172, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_3178_begin_0 = const()[name = tensor<string, []>("op_3178_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3178_end_0 = const()[name = tensor<string, []>("op_3178_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_3178_end_mask_0 = const()[name = tensor<string, []>("op_3178_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3178_cast = slice_by_index(begin = var_3178_begin_0, end = var_3178_end_0, end_mask = var_3178_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3182_begin_0 = const()[name = tensor<string, []>("op_3182_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_3182_end_0 = const()[name = tensor<string, []>("op_3182_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_3182_end_mask_0 = const()[name = tensor<string, []>("op_3182_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3182_cast = slice_by_index(begin = var_3182_begin_0, end = var_3182_end_0, end_mask = var_3182_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3186_begin_0 = const()[name = tensor<string, []>("op_3186_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_3186_end_0 = const()[name = tensor<string, []>("op_3186_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_3186_end_mask_0 = const()[name = tensor<string, []>("op_3186_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3186_cast = slice_by_index(begin = var_3186_begin_0, end = var_3186_end_0, end_mask = var_3186_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3190_begin_0 = const()[name = tensor<string, []>("op_3190_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_3190_end_0 = const()[name = tensor<string, []>("op_3190_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_3190_end_mask_0 = const()[name = tensor<string, []>("op_3190_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3190_cast = slice_by_index(begin = var_3190_begin_0, end = var_3190_end_0, end_mask = var_3190_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3194_begin_0 = const()[name = tensor<string, []>("op_3194_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_3194_end_0 = const()[name = tensor<string, []>("op_3194_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_3194_end_mask_0 = const()[name = tensor<string, []>("op_3194_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3194_cast = slice_by_index(begin = var_3194_begin_0, end = var_3194_end_0, end_mask = var_3194_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3198_begin_0 = const()[name = tensor<string, []>("op_3198_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_3198_end_0 = const()[name = tensor<string, []>("op_3198_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_3198_end_mask_0 = const()[name = tensor<string, []>("op_3198_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3198_cast = slice_by_index(begin = var_3198_begin_0, end = var_3198_end_0, end_mask = var_3198_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3202_begin_0 = const()[name = tensor<string, []>("op_3202_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_3202_end_0 = const()[name = tensor<string, []>("op_3202_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_3202_end_mask_0 = const()[name = tensor<string, []>("op_3202_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3202_cast = slice_by_index(begin = var_3202_begin_0, end = var_3202_end_0, end_mask = var_3202_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> var_3206_begin_0 = const()[name = tensor<string, []>("op_3206_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_3206_end_0 = const()[name = tensor<string, []>("op_3206_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_3206_end_mask_0 = const()[name = tensor<string, []>("op_3206_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_3206_cast = slice_by_index(begin = var_3206_begin_0, end = var_3206_end_0, end_mask = var_3206_end_mask_0, x = q_23_cast);
            tensor<int32, [4]> k_47_perm_0 = const()[name = tensor<string, []>("k_47_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_3213_begin_0 = const()[name = tensor<string, []>("op_3213_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3213_end_0 = const()[name = tensor<string, []>("op_3213_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_3213_end_mask_0 = const()[name = tensor<string, []>("op_3213_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 1280]> transpose_20 = transpose(perm = k_47_perm_0, x = k_45_cast);
            tensor<fp16, [2, 77, 1, 160]> var_3213_cast = slice_by_index(begin = var_3213_begin_0, end = var_3213_end_0, end_mask = var_3213_end_mask_0, x = transpose_20);
            tensor<int32, [4]> var_3217_begin_0 = const()[name = tensor<string, []>("op_3217_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_3217_end_0 = const()[name = tensor<string, []>("op_3217_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_3217_end_mask_0 = const()[name = tensor<string, []>("op_3217_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3217_cast = slice_by_index(begin = var_3217_begin_0, end = var_3217_end_0, end_mask = var_3217_end_mask_0, x = transpose_20);
            tensor<int32, [4]> var_3221_begin_0 = const()[name = tensor<string, []>("op_3221_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_3221_end_0 = const()[name = tensor<string, []>("op_3221_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_3221_end_mask_0 = const()[name = tensor<string, []>("op_3221_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3221_cast = slice_by_index(begin = var_3221_begin_0, end = var_3221_end_0, end_mask = var_3221_end_mask_0, x = transpose_20);
            tensor<int32, [4]> var_3225_begin_0 = const()[name = tensor<string, []>("op_3225_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_3225_end_0 = const()[name = tensor<string, []>("op_3225_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_3225_end_mask_0 = const()[name = tensor<string, []>("op_3225_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3225_cast = slice_by_index(begin = var_3225_begin_0, end = var_3225_end_0, end_mask = var_3225_end_mask_0, x = transpose_20);
            tensor<int32, [4]> var_3229_begin_0 = const()[name = tensor<string, []>("op_3229_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_3229_end_0 = const()[name = tensor<string, []>("op_3229_end_0"), val = tensor<int32, [4]>([2, 77, 1, 800])];
            tensor<bool, [4]> var_3229_end_mask_0 = const()[name = tensor<string, []>("op_3229_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3229_cast = slice_by_index(begin = var_3229_begin_0, end = var_3229_end_0, end_mask = var_3229_end_mask_0, x = transpose_20);
            tensor<int32, [4]> var_3233_begin_0 = const()[name = tensor<string, []>("op_3233_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_3233_end_0 = const()[name = tensor<string, []>("op_3233_end_0"), val = tensor<int32, [4]>([2, 77, 1, 960])];
            tensor<bool, [4]> var_3233_end_mask_0 = const()[name = tensor<string, []>("op_3233_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3233_cast = slice_by_index(begin = var_3233_begin_0, end = var_3233_end_0, end_mask = var_3233_end_mask_0, x = transpose_20);
            tensor<int32, [4]> var_3237_begin_0 = const()[name = tensor<string, []>("op_3237_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_3237_end_0 = const()[name = tensor<string, []>("op_3237_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1120])];
            tensor<bool, [4]> var_3237_end_mask_0 = const()[name = tensor<string, []>("op_3237_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3237_cast = slice_by_index(begin = var_3237_begin_0, end = var_3237_end_0, end_mask = var_3237_end_mask_0, x = transpose_20);
            tensor<int32, [4]> var_3241_begin_0 = const()[name = tensor<string, []>("op_3241_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_3241_end_0 = const()[name = tensor<string, []>("op_3241_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1280])];
            tensor<bool, [4]> var_3241_end_mask_0 = const()[name = tensor<string, []>("op_3241_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3241_cast = slice_by_index(begin = var_3241_begin_0, end = var_3241_end_0, end_mask = var_3241_end_mask_0, x = transpose_20);
            tensor<int32, [4]> var_3243_begin_0 = const()[name = tensor<string, []>("op_3243_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3243_end_0 = const()[name = tensor<string, []>("op_3243_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_3243_end_mask_0 = const()[name = tensor<string, []>("op_3243_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3243_cast = slice_by_index(begin = var_3243_begin_0, end = var_3243_end_0, end_mask = var_3243_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3247_begin_0 = const()[name = tensor<string, []>("op_3247_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_3247_end_0 = const()[name = tensor<string, []>("op_3247_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_3247_end_mask_0 = const()[name = tensor<string, []>("op_3247_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3247_cast = slice_by_index(begin = var_3247_begin_0, end = var_3247_end_0, end_mask = var_3247_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3251_begin_0 = const()[name = tensor<string, []>("op_3251_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_3251_end_0 = const()[name = tensor<string, []>("op_3251_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_3251_end_mask_0 = const()[name = tensor<string, []>("op_3251_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3251_cast = slice_by_index(begin = var_3251_begin_0, end = var_3251_end_0, end_mask = var_3251_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3255_begin_0 = const()[name = tensor<string, []>("op_3255_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_3255_end_0 = const()[name = tensor<string, []>("op_3255_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_3255_end_mask_0 = const()[name = tensor<string, []>("op_3255_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3255_cast = slice_by_index(begin = var_3255_begin_0, end = var_3255_end_0, end_mask = var_3255_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3259_begin_0 = const()[name = tensor<string, []>("op_3259_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_3259_end_0 = const()[name = tensor<string, []>("op_3259_end_0"), val = tensor<int32, [4]>([2, 800, 1, 77])];
            tensor<bool, [4]> var_3259_end_mask_0 = const()[name = tensor<string, []>("op_3259_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3259_cast = slice_by_index(begin = var_3259_begin_0, end = var_3259_end_0, end_mask = var_3259_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3263_begin_0 = const()[name = tensor<string, []>("op_3263_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_3263_end_0 = const()[name = tensor<string, []>("op_3263_end_0"), val = tensor<int32, [4]>([2, 960, 1, 77])];
            tensor<bool, [4]> var_3263_end_mask_0 = const()[name = tensor<string, []>("op_3263_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3263_cast = slice_by_index(begin = var_3263_begin_0, end = var_3263_end_0, end_mask = var_3263_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3267_begin_0 = const()[name = tensor<string, []>("op_3267_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_3267_end_0 = const()[name = tensor<string, []>("op_3267_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 77])];
            tensor<bool, [4]> var_3267_end_mask_0 = const()[name = tensor<string, []>("op_3267_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3267_cast = slice_by_index(begin = var_3267_begin_0, end = var_3267_end_0, end_mask = var_3267_end_mask_0, x = v_23_cast);
            tensor<int32, [4]> var_3271_begin_0 = const()[name = tensor<string, []>("op_3271_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_3271_end_0 = const()[name = tensor<string, []>("op_3271_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 77])];
            tensor<bool, [4]> var_3271_end_mask_0 = const()[name = tensor<string, []>("op_3271_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3271_cast = slice_by_index(begin = var_3271_begin_0, end = var_3271_end_0, end_mask = var_3271_end_mask_0, x = v_23_cast);
            tensor<string, []> var_3275_equation_0 = const()[name = tensor<string, []>("op_3275_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3275_cast = einsum(equation = var_3275_equation_0, values = (var_3213_cast, var_3178_cast));
            tensor<fp16, []> var_3276_to_fp16 = const()[name = tensor<string, []>("op_3276_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_177_cast = mul(x = var_3275_cast, y = var_3276_to_fp16);
            tensor<string, []> var_3279_equation_0 = const()[name = tensor<string, []>("op_3279_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3279_cast = einsum(equation = var_3279_equation_0, values = (var_3217_cast, var_3182_cast));
            tensor<fp16, []> var_3280_to_fp16 = const()[name = tensor<string, []>("op_3280_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_179_cast = mul(x = var_3279_cast, y = var_3280_to_fp16);
            tensor<string, []> var_3283_equation_0 = const()[name = tensor<string, []>("op_3283_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3283_cast = einsum(equation = var_3283_equation_0, values = (var_3221_cast, var_3186_cast));
            tensor<fp16, []> var_3284_to_fp16 = const()[name = tensor<string, []>("op_3284_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_181_cast = mul(x = var_3283_cast, y = var_3284_to_fp16);
            tensor<string, []> var_3287_equation_0 = const()[name = tensor<string, []>("op_3287_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3287_cast = einsum(equation = var_3287_equation_0, values = (var_3225_cast, var_3190_cast));
            tensor<fp16, []> var_3288_to_fp16 = const()[name = tensor<string, []>("op_3288_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_183_cast = mul(x = var_3287_cast, y = var_3288_to_fp16);
            tensor<string, []> var_3291_equation_0 = const()[name = tensor<string, []>("op_3291_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3291_cast = einsum(equation = var_3291_equation_0, values = (var_3229_cast, var_3194_cast));
            tensor<fp16, []> var_3292_to_fp16 = const()[name = tensor<string, []>("op_3292_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_185_cast = mul(x = var_3291_cast, y = var_3292_to_fp16);
            tensor<string, []> var_3295_equation_0 = const()[name = tensor<string, []>("op_3295_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3295_cast = einsum(equation = var_3295_equation_0, values = (var_3233_cast, var_3198_cast));
            tensor<fp16, []> var_3296_to_fp16 = const()[name = tensor<string, []>("op_3296_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_187_cast = mul(x = var_3295_cast, y = var_3296_to_fp16);
            tensor<string, []> var_3299_equation_0 = const()[name = tensor<string, []>("op_3299_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3299_cast = einsum(equation = var_3299_equation_0, values = (var_3237_cast, var_3202_cast));
            tensor<fp16, []> var_3300_to_fp16 = const()[name = tensor<string, []>("op_3300_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_189_cast = mul(x = var_3299_cast, y = var_3300_to_fp16);
            tensor<string, []> var_3303_equation_0 = const()[name = tensor<string, []>("op_3303_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_3303_cast = einsum(equation = var_3303_equation_0, values = (var_3241_cast, var_3206_cast));
            tensor<fp16, []> var_3304_to_fp16 = const()[name = tensor<string, []>("op_3304_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_191_cast = mul(x = var_3303_cast, y = var_3304_to_fp16);
            tensor<fp16, [2, 77, 1, 256]> var_3306_cast = softmax(axis = var_2319, x = aw_177_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3307_cast = softmax(axis = var_2319, x = aw_179_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3308_cast = softmax(axis = var_2319, x = aw_181_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3309_cast = softmax(axis = var_2319, x = aw_183_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3310_cast = softmax(axis = var_2319, x = aw_185_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3311_cast = softmax(axis = var_2319, x = aw_187_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3312_cast = softmax(axis = var_2319, x = aw_189_cast);
            tensor<fp16, [2, 77, 1, 256]> var_3313_cast = softmax(axis = var_2319, x = aw_191_cast);
            tensor<string, []> var_3315_equation_0 = const()[name = tensor<string, []>("op_3315_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3315_cast = einsum(equation = var_3315_equation_0, values = (var_3243_cast, var_3306_cast));
            tensor<string, []> var_3317_equation_0 = const()[name = tensor<string, []>("op_3317_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3317_cast = einsum(equation = var_3317_equation_0, values = (var_3247_cast, var_3307_cast));
            tensor<string, []> var_3319_equation_0 = const()[name = tensor<string, []>("op_3319_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3319_cast = einsum(equation = var_3319_equation_0, values = (var_3251_cast, var_3308_cast));
            tensor<string, []> var_3321_equation_0 = const()[name = tensor<string, []>("op_3321_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3321_cast = einsum(equation = var_3321_equation_0, values = (var_3255_cast, var_3309_cast));
            tensor<string, []> var_3323_equation_0 = const()[name = tensor<string, []>("op_3323_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3323_cast = einsum(equation = var_3323_equation_0, values = (var_3259_cast, var_3310_cast));
            tensor<string, []> var_3325_equation_0 = const()[name = tensor<string, []>("op_3325_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3325_cast = einsum(equation = var_3325_equation_0, values = (var_3263_cast, var_3311_cast));
            tensor<string, []> var_3327_equation_0 = const()[name = tensor<string, []>("op_3327_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3327_cast = einsum(equation = var_3327_equation_0, values = (var_3267_cast, var_3312_cast));
            tensor<string, []> var_3329_equation_0 = const()[name = tensor<string, []>("op_3329_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_3329_cast = einsum(equation = var_3329_equation_0, values = (var_3271_cast, var_3313_cast));
            tensor<bool, []> input_161_interleave_0 = const()[name = tensor<string, []>("input_161_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_161_cast = concat(axis = var_2319, interleave = input_161_interleave_0, values = (var_3315_cast, var_3317_cast, var_3319_cast, var_3321_cast, var_3323_cast, var_3325_cast, var_3327_cast, var_3329_cast));
            tensor<int32, [2]> var_3335 = const()[name = tensor<string, []>("op_3335"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3337 = const()[name = tensor<string, []>("op_3337"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_3339_pad_type_0 = const()[name = tensor<string, []>("op_3339_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_3339_pad_0 = const()[name = tensor<string, []>("op_3339_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(303460032)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(306736896)))];
            tensor<fp16, [2, 1280, 1, 256]> var_3339_cast = conv(bias = down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_3337, groups = var_2319, pad = var_3339_pad_0, pad_type = var_3339_pad_type_0, strides = var_3335, weight = down_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_161_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_35_cast = add(x = var_3339_cast, y = inputs_33_cast);
            tensor<int32, [1]> var_3343 = const()[name = tensor<string, []>("op_3343"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_35_cast = reduce_mean(axes = var_3343, keep_dims = var_2314, x = inputs_35_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_35_cast = sub(x = inputs_35_cast, y = channels_mean_35_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_35_cast = mul(x = zero_mean_35_cast, y = zero_mean_35_cast);
            tensor<int32, [1]> var_3347 = const()[name = tensor<string, []>("op_3347"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_3348_cast = reduce_mean(axes = var_3347, keep_dims = var_2314, x = zero_mean_sq_35_cast);
            tensor<fp16, []> var_3349_to_fp16 = const()[name = tensor<string, []>("op_3349_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_3350_cast = add(x = var_3348_cast, y = var_3349_to_fp16);
            tensor<fp16, []> denom_35_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_35_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_35_cast = rsqrt(epsilon = denom_35_epsilon_0_to_fp16, x = var_3350_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_35_cast = mul(x = zero_mean_35_cast, y = denom_35_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_3354_to_fp16 = const()[name = tensor<string, []>("op_3354_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(306739520)))];
            tensor<fp16, [2, 1280, 1, 256]> var_3355_cast = add(x = out_35_cast, y = var_3354_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_3357_to_fp16 = const()[name = tensor<string, []>("op_3357_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(306742144)))];
            tensor<fp16, [2, 1280, 1, 256]> input_163_cast = mul(x = var_3355_cast, y = var_3357_to_fp16);
            tensor<int32, [2]> var_3365 = const()[name = tensor<string, []>("op_3365"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3367 = const()[name = tensor<string, []>("op_3367"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_3369_pad_type_0 = const()[name = tensor<string, []>("op_3369_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_3369_pad_0 = const()[name = tensor<string, []>("op_3369_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [10240, 1280, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [10240, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(306744768)))];
            tensor<fp16, [10240]> down_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [10240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(332959232)))];
            tensor<fp16, [2, 10240, 1, 256]> var_3369_cast = conv(bias = down_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_3367, groups = var_2319, pad = var_3369_pad_0, pad_type = var_3369_pad_type_0, strides = var_3365, weight = down_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_163_cast);
            tensor<int32, [2]> var_3370_split_sizes_0 = const()[name = tensor<string, []>("op_3370_split_sizes_0"), val = tensor<int32, [2]>([5120, 5120])];
            tensor<int32, []> var_3370_axis_0 = const()[name = tensor<string, []>("op_3370_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 5120, 1, 256]> var_3370_cast_0, tensor<fp16, [2, 5120, 1, 256]> var_3370_cast_1 = split(axis = var_3370_axis_0, split_sizes = var_3370_split_sizes_0, x = var_3369_cast);
            tensor<string, []> var_3372_mode_0 = const()[name = tensor<string, []>("op_3372_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 5120, 1, 256]> var_3372_cast = gelu(mode = var_3372_mode_0, x = var_3370_cast_1);
            tensor<fp16, [2, 5120, 1, 256]> input_165_cast = mul(x = var_3370_cast_0, y = var_3372_cast);
            tensor<int32, [2]> var_3376 = const()[name = tensor<string, []>("op_3376"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3378 = const()[name = tensor<string, []>("op_3378"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_3380_pad_type_0 = const()[name = tensor<string, []>("op_3380_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_3380_pad_0 = const()[name = tensor<string, []>("op_3380_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 5120, 1, 1]> down_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(332979776)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(346087040)))];
            tensor<fp16, [2, 1280, 1, 256]> var_3380_cast = conv(bias = down_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_3378, groups = var_2319, pad = var_3380_pad_0, pad_type = var_3380_pad_type_0, strides = var_3376, weight = down_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_165_cast);
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_105_cast = add(x = var_3380_cast, y = inputs_35_cast);
            tensor<int32, [4]> var_3382 = const()[name = tensor<string, []>("op_3382"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> input_167_cast = reshape(shape = var_3382, x = hidden_states_105_cast);
            tensor<int32, [2]> var_3386 = const()[name = tensor<string, []>("op_3386"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3388 = const()[name = tensor<string, []>("op_3388"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_107_pad_type_0 = const()[name = tensor<string, []>("hidden_states_107_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_107_pad_0 = const()[name = tensor<string, []>("hidden_states_107_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_2_attentions_1_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_proj_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(346089664)))];
            tensor<fp16, [1280]> down_blocks_2_attentions_1_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_attentions_1_proj_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(349366528)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_107_cast = conv(bias = down_blocks_2_attentions_1_proj_out_bias_to_fp16, dilations = var_3388, groups = var_2319, pad = hidden_states_107_pad_0, pad_type = hidden_states_107_pad_type_0, strides = var_3386, weight = down_blocks_2_attentions_1_proj_out_weight_to_fp16, x = input_167_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_169_cast = add(x = hidden_states_107_cast, y = hidden_states_95_cast);
            tensor<int32, [2]> var_3395 = const()[name = tensor<string, []>("op_3395"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_3397 = const()[name = tensor<string, []>("op_3397"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_171_pad_type_0 = const()[name = tensor<string, []>("input_171_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_171_pad_0 = const()[name = tensor<string, []>("input_171_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_2_downsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_downsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(349369152)))];
            tensor<fp16, [1280]> down_blocks_2_downsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_2_downsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(378860416)))];
            tensor<fp16, [2, 1280, 8, 8]> input_171_cast = conv(bias = down_blocks_2_downsamplers_0_conv_bias_to_fp16, dilations = var_3397, groups = var_2319, pad = input_171_pad_0, pad_type = input_171_pad_type_0, strides = var_3395, weight = down_blocks_2_downsamplers_0_conv_weight_to_fp16, x = input_169_cast);
            tensor<int32, []> var_3409 = const()[name = tensor<string, []>("op_3409"), val = tensor<int32, []>(1)];
            tensor<int32, [5]> reshape_72_shape_0 = const()[name = tensor<string, []>("reshape_72_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_72_cast = reshape(shape = reshape_72_shape_0, x = input_171_cast);
            tensor<int32, [3]> reduce_mean_54_axes_0 = const()[name = tensor<string, []>("reduce_mean_54_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_54_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_54_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_54_cast = reduce_mean(axes = reduce_mean_54_axes_0, keep_dims = reduce_mean_54_keep_dims_0, x = reshape_72_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_36_cast = sub(x = reshape_72_cast, y = reduce_mean_54_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_18_cast = square(x = sub_36_cast);
            tensor<int32, [3]> reduce_mean_56_axes_0 = const()[name = tensor<string, []>("reduce_mean_56_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_56_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_56_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_56_cast = reduce_mean(axes = reduce_mean_56_axes_0, keep_dims = reduce_mean_56_keep_dims_0, x = square_18_cast);
            tensor<fp16, []> add_36_y_0_to_fp16 = const()[name = tensor<string, []>("add_36_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_36_cast = add(x = reduce_mean_56_cast, y = add_36_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_18_cast = sqrt(x = add_36_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_18_cast = real_div(x = sub_36_cast, y = sqrt_18_cast);
            tensor<int32, [4]> reshape_73_shape_0 = const()[name = tensor<string, []>("reshape_73_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_73_cast = reshape(shape = reshape_73_shape_0, x = real_div_18_cast);
            tensor<fp16, [1280]> add_37_mean_0_to_fp16 = const()[name = tensor<string, []>("add_37_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(378863040)))];
            tensor<fp16, [1280]> add_37_variance_0_to_fp16 = const()[name = tensor<string, []>("add_37_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(378865664)))];
            tensor<fp16, [1280]> add_37_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_37_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(378868288)))];
            tensor<fp16, [1280]> add_37_beta_0_to_fp16 = const()[name = tensor<string, []>("add_37_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(378870912)))];
            tensor<fp16, []> add_37_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_37_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_37_cast = batch_norm(beta = add_37_beta_0_to_fp16, epsilon = add_37_epsilon_0_to_fp16, gamma = add_37_gamma_0_to_fp16, mean = add_37_mean_0_to_fp16, variance = add_37_variance_0_to_fp16, x = reshape_73_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_175_cast = silu(x = add_37_cast);
            tensor<int32, [2]> var_3425 = const()[name = tensor<string, []>("op_3425"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3427 = const()[name = tensor<string, []>("op_3427"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_109_pad_type_0 = const()[name = tensor<string, []>("hidden_states_109_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_109_pad_0 = const()[name = tensor<string, []>("hidden_states_109_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_3_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(378873536)))];
            tensor<fp16, [1280]> down_blocks_3_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(408364800)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_109_cast = conv(bias = down_blocks_3_resnets_0_conv1_bias_to_fp16, dilations = var_3427, groups = var_3409, pad = hidden_states_109_pad_0, pad_type = hidden_states_109_pad_type_0, strides = var_3425, weight = down_blocks_3_resnets_0_conv1_weight_to_fp16, x = input_175_cast);
            tensor<int32, [2]> var_3433 = const()[name = tensor<string, []>("op_3433"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3435 = const()[name = tensor<string, []>("op_3435"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_13_pad_type_0 = const()[name = tensor<string, []>("temb_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_13_pad_0 = const()[name = tensor<string, []>("temb_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_3_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(408367424)))];
            tensor<fp16, [1280]> down_blocks_3_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(411644288)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_13_cast = conv(bias = down_blocks_3_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_3435, groups = var_3409, pad = temb_13_pad_0, pad_type = temb_13_pad_type_0, strides = var_3433, weight = down_blocks_3_resnets_0_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_179_cast = add(x = hidden_states_109_cast, y = temb_13_cast);
            tensor<int32, [5]> reshape_76_shape_0 = const()[name = tensor<string, []>("reshape_76_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_76_cast = reshape(shape = reshape_76_shape_0, x = input_179_cast);
            tensor<int32, [3]> reduce_mean_57_axes_0 = const()[name = tensor<string, []>("reduce_mean_57_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_57_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_57_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_57_cast = reduce_mean(axes = reduce_mean_57_axes_0, keep_dims = reduce_mean_57_keep_dims_0, x = reshape_76_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_38_cast = sub(x = reshape_76_cast, y = reduce_mean_57_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_19_cast = square(x = sub_38_cast);
            tensor<int32, [3]> reduce_mean_59_axes_0 = const()[name = tensor<string, []>("reduce_mean_59_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_59_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_59_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_59_cast = reduce_mean(axes = reduce_mean_59_axes_0, keep_dims = reduce_mean_59_keep_dims_0, x = square_19_cast);
            tensor<fp16, []> add_38_y_0_to_fp16 = const()[name = tensor<string, []>("add_38_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_38_cast = add(x = reduce_mean_59_cast, y = add_38_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_19_cast = sqrt(x = add_38_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_19_cast = real_div(x = sub_38_cast, y = sqrt_19_cast);
            tensor<int32, [4]> reshape_77_shape_0 = const()[name = tensor<string, []>("reshape_77_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_77_cast = reshape(shape = reshape_77_shape_0, x = real_div_19_cast);
            tensor<fp16, [1280]> add_39_mean_0_to_fp16 = const()[name = tensor<string, []>("add_39_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(411646912)))];
            tensor<fp16, [1280]> add_39_variance_0_to_fp16 = const()[name = tensor<string, []>("add_39_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(411649536)))];
            tensor<fp16, [1280]> add_39_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_39_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(411652160)))];
            tensor<fp16, [1280]> add_39_beta_0_to_fp16 = const()[name = tensor<string, []>("add_39_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(411654784)))];
            tensor<fp16, []> add_39_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_39_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_39_cast = batch_norm(beta = add_39_beta_0_to_fp16, epsilon = add_39_epsilon_0_to_fp16, gamma = add_39_gamma_0_to_fp16, mean = add_39_mean_0_to_fp16, variance = add_39_variance_0_to_fp16, x = reshape_77_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_183_cast = silu(x = add_39_cast);
            tensor<int32, [2]> var_3445 = const()[name = tensor<string, []>("op_3445"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3447 = const()[name = tensor<string, []>("op_3447"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_111_pad_type_0 = const()[name = tensor<string, []>("hidden_states_111_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_111_pad_0 = const()[name = tensor<string, []>("hidden_states_111_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_3_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(411657408)))];
            tensor<fp16, [1280]> down_blocks_3_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(441148672)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_111_cast = conv(bias = down_blocks_3_resnets_0_conv2_bias_to_fp16, dilations = var_3447, groups = var_3409, pad = hidden_states_111_pad_0, pad_type = hidden_states_111_pad_type_0, strides = var_3445, weight = down_blocks_3_resnets_0_conv2_weight_to_fp16, x = input_183_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_185_cast = add(x = input_171_cast, y = hidden_states_111_cast);
            tensor<int32, [5]> reshape_80_shape_0 = const()[name = tensor<string, []>("reshape_80_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_80_cast = reshape(shape = reshape_80_shape_0, x = input_185_cast);
            tensor<int32, [3]> reduce_mean_60_axes_0 = const()[name = tensor<string, []>("reduce_mean_60_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_60_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_60_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_60_cast = reduce_mean(axes = reduce_mean_60_axes_0, keep_dims = reduce_mean_60_keep_dims_0, x = reshape_80_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_40_cast = sub(x = reshape_80_cast, y = reduce_mean_60_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_20_cast = square(x = sub_40_cast);
            tensor<int32, [3]> reduce_mean_62_axes_0 = const()[name = tensor<string, []>("reduce_mean_62_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_62_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_62_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_62_cast = reduce_mean(axes = reduce_mean_62_axes_0, keep_dims = reduce_mean_62_keep_dims_0, x = square_20_cast);
            tensor<fp16, []> add_40_y_0_to_fp16 = const()[name = tensor<string, []>("add_40_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_40_cast = add(x = reduce_mean_62_cast, y = add_40_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_20_cast = sqrt(x = add_40_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_20_cast = real_div(x = sub_40_cast, y = sqrt_20_cast);
            tensor<int32, [4]> reshape_81_shape_0 = const()[name = tensor<string, []>("reshape_81_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_81_cast = reshape(shape = reshape_81_shape_0, x = real_div_20_cast);
            tensor<fp16, [1280]> add_41_mean_0_to_fp16 = const()[name = tensor<string, []>("add_41_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(441151296)))];
            tensor<fp16, [1280]> add_41_variance_0_to_fp16 = const()[name = tensor<string, []>("add_41_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(441153920)))];
            tensor<fp16, [1280]> add_41_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_41_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(441156544)))];
            tensor<fp16, [1280]> add_41_beta_0_to_fp16 = const()[name = tensor<string, []>("add_41_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(441159168)))];
            tensor<fp16, []> add_41_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_41_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_41_cast = batch_norm(beta = add_41_beta_0_to_fp16, epsilon = add_41_epsilon_0_to_fp16, gamma = add_41_gamma_0_to_fp16, mean = add_41_mean_0_to_fp16, variance = add_41_variance_0_to_fp16, x = reshape_81_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_189_cast = silu(x = add_41_cast);
            tensor<int32, [2]> var_3462 = const()[name = tensor<string, []>("op_3462"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3464 = const()[name = tensor<string, []>("op_3464"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_113_pad_type_0 = const()[name = tensor<string, []>("hidden_states_113_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_113_pad_0 = const()[name = tensor<string, []>("hidden_states_113_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_3_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(441161792)))];
            tensor<fp16, [1280]> down_blocks_3_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(470653056)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_113_cast = conv(bias = down_blocks_3_resnets_1_conv1_bias_to_fp16, dilations = var_3464, groups = var_3409, pad = hidden_states_113_pad_0, pad_type = hidden_states_113_pad_type_0, strides = var_3462, weight = down_blocks_3_resnets_1_conv1_weight_to_fp16, x = input_189_cast);
            tensor<int32, [2]> var_3470 = const()[name = tensor<string, []>("op_3470"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3472 = const()[name = tensor<string, []>("op_3472"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_15_pad_type_0 = const()[name = tensor<string, []>("temb_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_15_pad_0 = const()[name = tensor<string, []>("temb_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> down_blocks_3_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(470655680)))];
            tensor<fp16, [1280]> down_blocks_3_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(473932544)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_15_cast = conv(bias = down_blocks_3_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_3472, groups = var_3409, pad = temb_15_pad_0, pad_type = temb_15_pad_type_0, strides = var_3470, weight = down_blocks_3_resnets_1_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_193_cast = add(x = hidden_states_113_cast, y = temb_15_cast);
            tensor<int32, [5]> reshape_84_shape_0 = const()[name = tensor<string, []>("reshape_84_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_84_cast = reshape(shape = reshape_84_shape_0, x = input_193_cast);
            tensor<int32, [3]> reduce_mean_63_axes_0 = const()[name = tensor<string, []>("reduce_mean_63_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_63_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_63_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_63_cast = reduce_mean(axes = reduce_mean_63_axes_0, keep_dims = reduce_mean_63_keep_dims_0, x = reshape_84_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_42_cast = sub(x = reshape_84_cast, y = reduce_mean_63_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_21_cast = square(x = sub_42_cast);
            tensor<int32, [3]> reduce_mean_65_axes_0 = const()[name = tensor<string, []>("reduce_mean_65_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_65_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_65_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_65_cast = reduce_mean(axes = reduce_mean_65_axes_0, keep_dims = reduce_mean_65_keep_dims_0, x = square_21_cast);
            tensor<fp16, []> add_42_y_0_to_fp16 = const()[name = tensor<string, []>("add_42_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_42_cast = add(x = reduce_mean_65_cast, y = add_42_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_21_cast = sqrt(x = add_42_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_21_cast = real_div(x = sub_42_cast, y = sqrt_21_cast);
            tensor<int32, [4]> reshape_85_shape_0 = const()[name = tensor<string, []>("reshape_85_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_85_cast = reshape(shape = reshape_85_shape_0, x = real_div_21_cast);
            tensor<fp16, [1280]> add_43_mean_0_to_fp16 = const()[name = tensor<string, []>("add_43_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(473935168)))];
            tensor<fp16, [1280]> add_43_variance_0_to_fp16 = const()[name = tensor<string, []>("add_43_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(473937792)))];
            tensor<fp16, [1280]> add_43_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_43_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(473940416)))];
            tensor<fp16, [1280]> add_43_beta_0_to_fp16 = const()[name = tensor<string, []>("add_43_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(473943040)))];
            tensor<fp16, []> add_43_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_43_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_43_cast = batch_norm(beta = add_43_beta_0_to_fp16, epsilon = add_43_epsilon_0_to_fp16, gamma = add_43_gamma_0_to_fp16, mean = add_43_mean_0_to_fp16, variance = add_43_variance_0_to_fp16, x = reshape_85_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_197_cast = silu(x = add_43_cast);
            tensor<int32, [2]> var_3482 = const()[name = tensor<string, []>("op_3482"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3484 = const()[name = tensor<string, []>("op_3484"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_115_pad_type_0 = const()[name = tensor<string, []>("hidden_states_115_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_115_pad_0 = const()[name = tensor<string, []>("hidden_states_115_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> down_blocks_3_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(473945664)))];
            tensor<fp16, [1280]> down_blocks_3_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("down_blocks_3_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(503436928)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_115_cast = conv(bias = down_blocks_3_resnets_1_conv2_bias_to_fp16, dilations = var_3484, groups = var_3409, pad = hidden_states_115_pad_0, pad_type = hidden_states_115_pad_type_0, strides = var_3482, weight = down_blocks_3_resnets_1_conv2_weight_to_fp16, x = input_197_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_199_cast = add(x = input_185_cast, y = hidden_states_115_cast);
            tensor<bool, []> var_3507 = const()[name = tensor<string, []>("op_3507"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_3512 = const()[name = tensor<string, []>("op_3512"), val = tensor<int32, []>(1)];
            tensor<int32, [5]> reshape_88_shape_0 = const()[name = tensor<string, []>("reshape_88_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_88_cast = reshape(shape = reshape_88_shape_0, x = input_199_cast);
            tensor<int32, [3]> reduce_mean_66_axes_0 = const()[name = tensor<string, []>("reduce_mean_66_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_66_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_66_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_66_cast = reduce_mean(axes = reduce_mean_66_axes_0, keep_dims = reduce_mean_66_keep_dims_0, x = reshape_88_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_44_cast = sub(x = reshape_88_cast, y = reduce_mean_66_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_22_cast = square(x = sub_44_cast);
            tensor<int32, [3]> reduce_mean_68_axes_0 = const()[name = tensor<string, []>("reduce_mean_68_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_68_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_68_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_68_cast = reduce_mean(axes = reduce_mean_68_axes_0, keep_dims = reduce_mean_68_keep_dims_0, x = square_22_cast);
            tensor<fp16, []> add_44_y_0_to_fp16 = const()[name = tensor<string, []>("add_44_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_44_cast = add(x = reduce_mean_68_cast, y = add_44_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_22_cast = sqrt(x = add_44_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_22_cast = real_div(x = sub_44_cast, y = sqrt_22_cast);
            tensor<int32, [4]> reshape_89_shape_0 = const()[name = tensor<string, []>("reshape_89_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_89_cast = reshape(shape = reshape_89_shape_0, x = real_div_22_cast);
            tensor<fp16, [1280]> add_45_mean_0_to_fp16 = const()[name = tensor<string, []>("add_45_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(503439552)))];
            tensor<fp16, [1280]> add_45_variance_0_to_fp16 = const()[name = tensor<string, []>("add_45_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(503442176)))];
            tensor<fp16, [1280]> add_45_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_45_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(503444800)))];
            tensor<fp16, [1280]> add_45_beta_0_to_fp16 = const()[name = tensor<string, []>("add_45_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(503447424)))];
            tensor<fp16, []> add_45_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_45_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_45_cast = batch_norm(beta = add_45_beta_0_to_fp16, epsilon = add_45_epsilon_0_to_fp16, gamma = add_45_gamma_0_to_fp16, mean = add_45_mean_0_to_fp16, variance = add_45_variance_0_to_fp16, x = reshape_89_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_203_cast = silu(x = add_45_cast);
            tensor<int32, [2]> var_3530 = const()[name = tensor<string, []>("op_3530"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3532 = const()[name = tensor<string, []>("op_3532"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_117_pad_type_0 = const()[name = tensor<string, []>("hidden_states_117_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_117_pad_0 = const()[name = tensor<string, []>("hidden_states_117_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> mid_block_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(503450048)))];
            tensor<fp16, [1280]> mid_block_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(532941312)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_117_cast = conv(bias = mid_block_resnets_0_conv1_bias_to_fp16, dilations = var_3532, groups = var_3512, pad = hidden_states_117_pad_0, pad_type = hidden_states_117_pad_type_0, strides = var_3530, weight = mid_block_resnets_0_conv1_weight_to_fp16, x = input_203_cast);
            tensor<int32, [2]> var_3538 = const()[name = tensor<string, []>("op_3538"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3540 = const()[name = tensor<string, []>("op_3540"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_17_pad_type_0 = const()[name = tensor<string, []>("temb_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_17_pad_0 = const()[name = tensor<string, []>("temb_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(532943936)))];
            tensor<fp16, [1280]> mid_block_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(536220800)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_17_cast = conv(bias = mid_block_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_3540, groups = var_3512, pad = temb_17_pad_0, pad_type = temb_17_pad_type_0, strides = var_3538, weight = mid_block_resnets_0_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_207_cast = add(x = hidden_states_117_cast, y = temb_17_cast);
            tensor<int32, [5]> reshape_92_shape_0 = const()[name = tensor<string, []>("reshape_92_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_92_cast = reshape(shape = reshape_92_shape_0, x = input_207_cast);
            tensor<int32, [3]> reduce_mean_69_axes_0 = const()[name = tensor<string, []>("reduce_mean_69_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_69_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_69_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_69_cast = reduce_mean(axes = reduce_mean_69_axes_0, keep_dims = reduce_mean_69_keep_dims_0, x = reshape_92_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_46_cast = sub(x = reshape_92_cast, y = reduce_mean_69_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_23_cast = square(x = sub_46_cast);
            tensor<int32, [3]> reduce_mean_71_axes_0 = const()[name = tensor<string, []>("reduce_mean_71_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_71_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_71_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_71_cast = reduce_mean(axes = reduce_mean_71_axes_0, keep_dims = reduce_mean_71_keep_dims_0, x = square_23_cast);
            tensor<fp16, []> add_46_y_0_to_fp16 = const()[name = tensor<string, []>("add_46_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_46_cast = add(x = reduce_mean_71_cast, y = add_46_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_23_cast = sqrt(x = add_46_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_23_cast = real_div(x = sub_46_cast, y = sqrt_23_cast);
            tensor<int32, [4]> reshape_93_shape_0 = const()[name = tensor<string, []>("reshape_93_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_93_cast = reshape(shape = reshape_93_shape_0, x = real_div_23_cast);
            tensor<fp16, [1280]> add_47_mean_0_to_fp16 = const()[name = tensor<string, []>("add_47_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(536223424)))];
            tensor<fp16, [1280]> add_47_variance_0_to_fp16 = const()[name = tensor<string, []>("add_47_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(536226048)))];
            tensor<fp16, [1280]> add_47_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_47_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(536228672)))];
            tensor<fp16, [1280]> add_47_beta_0_to_fp16 = const()[name = tensor<string, []>("add_47_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(536231296)))];
            tensor<fp16, []> add_47_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_47_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_47_cast = batch_norm(beta = add_47_beta_0_to_fp16, epsilon = add_47_epsilon_0_to_fp16, gamma = add_47_gamma_0_to_fp16, mean = add_47_mean_0_to_fp16, variance = add_47_variance_0_to_fp16, x = reshape_93_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_211_cast = silu(x = add_47_cast);
            tensor<int32, [2]> var_3550 = const()[name = tensor<string, []>("op_3550"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3552 = const()[name = tensor<string, []>("op_3552"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_119_pad_type_0 = const()[name = tensor<string, []>("hidden_states_119_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_119_pad_0 = const()[name = tensor<string, []>("hidden_states_119_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> mid_block_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(536233920)))];
            tensor<fp16, [1280]> mid_block_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565725184)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_119_cast = conv(bias = mid_block_resnets_0_conv2_bias_to_fp16, dilations = var_3552, groups = var_3512, pad = hidden_states_119_pad_0, pad_type = hidden_states_119_pad_type_0, strides = var_3550, weight = mid_block_resnets_0_conv2_weight_to_fp16, x = input_211_cast);
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_121_cast = add(x = input_199_cast, y = hidden_states_119_cast);
            tensor<int32, [5]> reshape_96_shape_0 = const()[name = tensor<string, []>("reshape_96_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_96_cast = reshape(shape = reshape_96_shape_0, x = hidden_states_121_cast);
            tensor<int32, [3]> reduce_mean_72_axes_0 = const()[name = tensor<string, []>("reduce_mean_72_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_72_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_72_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_72_cast = reduce_mean(axes = reduce_mean_72_axes_0, keep_dims = reduce_mean_72_keep_dims_0, x = reshape_96_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_48_cast = sub(x = reshape_96_cast, y = reduce_mean_72_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_24_cast = square(x = sub_48_cast);
            tensor<int32, [3]> reduce_mean_74_axes_0 = const()[name = tensor<string, []>("reduce_mean_74_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_74_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_74_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_74_cast = reduce_mean(axes = reduce_mean_74_axes_0, keep_dims = reduce_mean_74_keep_dims_0, x = square_24_cast);
            tensor<fp16, []> add_48_y_0_to_fp16 = const()[name = tensor<string, []>("add_48_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_48_cast = add(x = reduce_mean_74_cast, y = add_48_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_24_cast = sqrt(x = add_48_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_24_cast = real_div(x = sub_48_cast, y = sqrt_24_cast);
            tensor<int32, [4]> reshape_97_shape_0 = const()[name = tensor<string, []>("reshape_97_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_97_cast = reshape(shape = reshape_97_shape_0, x = real_div_24_cast);
            tensor<fp16, [1280]> add_49_mean_0_to_fp16 = const()[name = tensor<string, []>("add_49_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565727808)))];
            tensor<fp16, [1280]> add_49_variance_0_to_fp16 = const()[name = tensor<string, []>("add_49_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565730432)))];
            tensor<fp16, [1280]> add_49_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_49_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565733056)))];
            tensor<fp16, [1280]> add_49_beta_0_to_fp16 = const()[name = tensor<string, []>("add_49_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565735680)))];
            tensor<fp16, []> add_49_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_49_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_49_cast = batch_norm(beta = add_49_beta_0_to_fp16, epsilon = add_49_epsilon_0_to_fp16, gamma = add_49_gamma_0_to_fp16, mean = add_49_mean_0_to_fp16, variance = add_49_variance_0_to_fp16, x = reshape_97_cast);
            tensor<int32, [2]> var_3572 = const()[name = tensor<string, []>("op_3572"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3574 = const()[name = tensor<string, []>("op_3574"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_123_pad_type_0 = const()[name = tensor<string, []>("hidden_states_123_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_123_pad_0 = const()[name = tensor<string, []>("hidden_states_123_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_proj_in_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565738304)))];
            tensor<fp16, [1280]> mid_block_attentions_0_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_proj_in_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(569015168)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_123_cast = conv(bias = mid_block_attentions_0_proj_in_bias_to_fp16, dilations = var_3574, groups = var_3512, pad = hidden_states_123_pad_0, pad_type = hidden_states_123_pad_type_0, strides = var_3572, weight = mid_block_attentions_0_proj_in_weight_to_fp16, x = add_49_cast);
            tensor<int32, [4]> var_3579 = const()[name = tensor<string, []>("op_3579"), val = tensor<int32, [4]>([2, 1280, 1, 64])];
            tensor<fp16, [2, 1280, 1, 64]> inputs_37_cast = reshape(shape = var_3579, x = hidden_states_123_cast);
            tensor<int32, [1]> var_3589 = const()[name = tensor<string, []>("op_3589"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 64]> channels_mean_37_cast = reduce_mean(axes = var_3589, keep_dims = var_3507, x = inputs_37_cast);
            tensor<fp16, [2, 1280, 1, 64]> zero_mean_37_cast = sub(x = inputs_37_cast, y = channels_mean_37_cast);
            tensor<fp16, [2, 1280, 1, 64]> zero_mean_sq_37_cast = mul(x = zero_mean_37_cast, y = zero_mean_37_cast);
            tensor<int32, [1]> var_3593 = const()[name = tensor<string, []>("op_3593"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 64]> var_3594_cast = reduce_mean(axes = var_3593, keep_dims = var_3507, x = zero_mean_sq_37_cast);
            tensor<fp16, []> var_3595_to_fp16 = const()[name = tensor<string, []>("op_3595_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 64]> var_3596_cast = add(x = var_3594_cast, y = var_3595_to_fp16);
            tensor<fp16, []> denom_37_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_37_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 64]> denom_37_cast = rsqrt(epsilon = denom_37_epsilon_0_to_fp16, x = var_3596_cast);
            tensor<fp16, [2, 1280, 1, 64]> out_37_cast = mul(x = zero_mean_37_cast, y = denom_37_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_3600_to_fp16 = const()[name = tensor<string, []>("op_3600_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(569017792)))];
            tensor<fp16, [2, 1280, 1, 64]> var_3601_cast = add(x = out_37_cast, y = var_3600_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_3603_to_fp16 = const()[name = tensor<string, []>("op_3603_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(569020416)))];
            tensor<fp16, [2, 1280, 1, 64]> hidden_states_125_cast = mul(x = var_3601_cast, y = var_3603_to_fp16);
            tensor<int32, [2]> var_3610 = const()[name = tensor<string, []>("op_3610"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3612 = const()[name = tensor<string, []>("op_3612"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_25_pad_type_0 = const()[name = tensor<string, []>("q_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_25_pad_0 = const()[name = tensor<string, []>("q_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(569023040)))];
            tensor<fp16, [2, 1280, 1, 64]> q_25_cast = conv(dilations = var_3612, groups = var_3512, pad = q_25_pad_0, pad_type = q_25_pad_type_0, strides = var_3610, weight = mid_block_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_125_cast);
            tensor<int32, [2]> var_3616 = const()[name = tensor<string, []>("op_3616"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3618 = const()[name = tensor<string, []>("op_3618"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_49_pad_type_0 = const()[name = tensor<string, []>("k_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_49_pad_0 = const()[name = tensor<string, []>("k_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(572299904)))];
            tensor<fp16, [2, 1280, 1, 64]> k_49_cast = conv(dilations = var_3618, groups = var_3512, pad = k_49_pad_0, pad_type = k_49_pad_type_0, strides = var_3616, weight = mid_block_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_125_cast);
            tensor<int32, [2]> var_3622 = const()[name = tensor<string, []>("op_3622"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3624 = const()[name = tensor<string, []>("op_3624"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_25_pad_type_0 = const()[name = tensor<string, []>("v_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_25_pad_0 = const()[name = tensor<string, []>("v_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(575576768)))];
            tensor<fp16, [2, 1280, 1, 64]> v_25_cast = conv(dilations = var_3624, groups = var_3512, pad = v_25_pad_0, pad_type = v_25_pad_type_0, strides = var_3622, weight = mid_block_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_125_cast);
            tensor<int32, [4]> var_3628_begin_0 = const()[name = tensor<string, []>("op_3628_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3628_end_0 = const()[name = tensor<string, []>("op_3628_end_0"), val = tensor<int32, [4]>([2, 160, 1, 64])];
            tensor<bool, [4]> var_3628_end_mask_0 = const()[name = tensor<string, []>("op_3628_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3628_cast = slice_by_index(begin = var_3628_begin_0, end = var_3628_end_0, end_mask = var_3628_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_3632_begin_0 = const()[name = tensor<string, []>("op_3632_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_3632_end_0 = const()[name = tensor<string, []>("op_3632_end_0"), val = tensor<int32, [4]>([2, 320, 1, 64])];
            tensor<bool, [4]> var_3632_end_mask_0 = const()[name = tensor<string, []>("op_3632_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3632_cast = slice_by_index(begin = var_3632_begin_0, end = var_3632_end_0, end_mask = var_3632_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_3636_begin_0 = const()[name = tensor<string, []>("op_3636_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_3636_end_0 = const()[name = tensor<string, []>("op_3636_end_0"), val = tensor<int32, [4]>([2, 480, 1, 64])];
            tensor<bool, [4]> var_3636_end_mask_0 = const()[name = tensor<string, []>("op_3636_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3636_cast = slice_by_index(begin = var_3636_begin_0, end = var_3636_end_0, end_mask = var_3636_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_3640_begin_0 = const()[name = tensor<string, []>("op_3640_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_3640_end_0 = const()[name = tensor<string, []>("op_3640_end_0"), val = tensor<int32, [4]>([2, 640, 1, 64])];
            tensor<bool, [4]> var_3640_end_mask_0 = const()[name = tensor<string, []>("op_3640_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3640_cast = slice_by_index(begin = var_3640_begin_0, end = var_3640_end_0, end_mask = var_3640_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_3644_begin_0 = const()[name = tensor<string, []>("op_3644_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_3644_end_0 = const()[name = tensor<string, []>("op_3644_end_0"), val = tensor<int32, [4]>([2, 800, 1, 64])];
            tensor<bool, [4]> var_3644_end_mask_0 = const()[name = tensor<string, []>("op_3644_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3644_cast = slice_by_index(begin = var_3644_begin_0, end = var_3644_end_0, end_mask = var_3644_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_3648_begin_0 = const()[name = tensor<string, []>("op_3648_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_3648_end_0 = const()[name = tensor<string, []>("op_3648_end_0"), val = tensor<int32, [4]>([2, 960, 1, 64])];
            tensor<bool, [4]> var_3648_end_mask_0 = const()[name = tensor<string, []>("op_3648_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3648_cast = slice_by_index(begin = var_3648_begin_0, end = var_3648_end_0, end_mask = var_3648_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_3652_begin_0 = const()[name = tensor<string, []>("op_3652_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_3652_end_0 = const()[name = tensor<string, []>("op_3652_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 64])];
            tensor<bool, [4]> var_3652_end_mask_0 = const()[name = tensor<string, []>("op_3652_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3652_cast = slice_by_index(begin = var_3652_begin_0, end = var_3652_end_0, end_mask = var_3652_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> var_3656_begin_0 = const()[name = tensor<string, []>("op_3656_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_3656_end_0 = const()[name = tensor<string, []>("op_3656_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 64])];
            tensor<bool, [4]> var_3656_end_mask_0 = const()[name = tensor<string, []>("op_3656_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3656_cast = slice_by_index(begin = var_3656_begin_0, end = var_3656_end_0, end_mask = var_3656_end_mask_0, x = q_25_cast);
            tensor<int32, [4]> k_51_perm_0 = const()[name = tensor<string, []>("k_51_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_3663_begin_0 = const()[name = tensor<string, []>("op_3663_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3663_end_0 = const()[name = tensor<string, []>("op_3663_end_0"), val = tensor<int32, [4]>([2, 64, 1, 160])];
            tensor<bool, [4]> var_3663_end_mask_0 = const()[name = tensor<string, []>("op_3663_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 1280]> transpose_19 = transpose(perm = k_51_perm_0, x = k_49_cast);
            tensor<fp16, [2, 64, 1, 160]> var_3663_cast = slice_by_index(begin = var_3663_begin_0, end = var_3663_end_0, end_mask = var_3663_end_mask_0, x = transpose_19);
            tensor<int32, [4]> var_3667_begin_0 = const()[name = tensor<string, []>("op_3667_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_3667_end_0 = const()[name = tensor<string, []>("op_3667_end_0"), val = tensor<int32, [4]>([2, 64, 1, 320])];
            tensor<bool, [4]> var_3667_end_mask_0 = const()[name = tensor<string, []>("op_3667_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 160]> var_3667_cast = slice_by_index(begin = var_3667_begin_0, end = var_3667_end_0, end_mask = var_3667_end_mask_0, x = transpose_19);
            tensor<int32, [4]> var_3671_begin_0 = const()[name = tensor<string, []>("op_3671_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_3671_end_0 = const()[name = tensor<string, []>("op_3671_end_0"), val = tensor<int32, [4]>([2, 64, 1, 480])];
            tensor<bool, [4]> var_3671_end_mask_0 = const()[name = tensor<string, []>("op_3671_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 160]> var_3671_cast = slice_by_index(begin = var_3671_begin_0, end = var_3671_end_0, end_mask = var_3671_end_mask_0, x = transpose_19);
            tensor<int32, [4]> var_3675_begin_0 = const()[name = tensor<string, []>("op_3675_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_3675_end_0 = const()[name = tensor<string, []>("op_3675_end_0"), val = tensor<int32, [4]>([2, 64, 1, 640])];
            tensor<bool, [4]> var_3675_end_mask_0 = const()[name = tensor<string, []>("op_3675_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 160]> var_3675_cast = slice_by_index(begin = var_3675_begin_0, end = var_3675_end_0, end_mask = var_3675_end_mask_0, x = transpose_19);
            tensor<int32, [4]> var_3679_begin_0 = const()[name = tensor<string, []>("op_3679_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_3679_end_0 = const()[name = tensor<string, []>("op_3679_end_0"), val = tensor<int32, [4]>([2, 64, 1, 800])];
            tensor<bool, [4]> var_3679_end_mask_0 = const()[name = tensor<string, []>("op_3679_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 160]> var_3679_cast = slice_by_index(begin = var_3679_begin_0, end = var_3679_end_0, end_mask = var_3679_end_mask_0, x = transpose_19);
            tensor<int32, [4]> var_3683_begin_0 = const()[name = tensor<string, []>("op_3683_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_3683_end_0 = const()[name = tensor<string, []>("op_3683_end_0"), val = tensor<int32, [4]>([2, 64, 1, 960])];
            tensor<bool, [4]> var_3683_end_mask_0 = const()[name = tensor<string, []>("op_3683_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 160]> var_3683_cast = slice_by_index(begin = var_3683_begin_0, end = var_3683_end_0, end_mask = var_3683_end_mask_0, x = transpose_19);
            tensor<int32, [4]> var_3687_begin_0 = const()[name = tensor<string, []>("op_3687_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_3687_end_0 = const()[name = tensor<string, []>("op_3687_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1120])];
            tensor<bool, [4]> var_3687_end_mask_0 = const()[name = tensor<string, []>("op_3687_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 160]> var_3687_cast = slice_by_index(begin = var_3687_begin_0, end = var_3687_end_0, end_mask = var_3687_end_mask_0, x = transpose_19);
            tensor<int32, [4]> var_3691_begin_0 = const()[name = tensor<string, []>("op_3691_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_3691_end_0 = const()[name = tensor<string, []>("op_3691_end_0"), val = tensor<int32, [4]>([2, 64, 1, 1280])];
            tensor<bool, [4]> var_3691_end_mask_0 = const()[name = tensor<string, []>("op_3691_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 64, 1, 160]> var_3691_cast = slice_by_index(begin = var_3691_begin_0, end = var_3691_end_0, end_mask = var_3691_end_mask_0, x = transpose_19);
            tensor<int32, [4]> var_3693_begin_0 = const()[name = tensor<string, []>("op_3693_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3693_end_0 = const()[name = tensor<string, []>("op_3693_end_0"), val = tensor<int32, [4]>([2, 160, 1, 64])];
            tensor<bool, [4]> var_3693_end_mask_0 = const()[name = tensor<string, []>("op_3693_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3693_cast = slice_by_index(begin = var_3693_begin_0, end = var_3693_end_0, end_mask = var_3693_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_3697_begin_0 = const()[name = tensor<string, []>("op_3697_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_3697_end_0 = const()[name = tensor<string, []>("op_3697_end_0"), val = tensor<int32, [4]>([2, 320, 1, 64])];
            tensor<bool, [4]> var_3697_end_mask_0 = const()[name = tensor<string, []>("op_3697_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3697_cast = slice_by_index(begin = var_3697_begin_0, end = var_3697_end_0, end_mask = var_3697_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_3701_begin_0 = const()[name = tensor<string, []>("op_3701_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_3701_end_0 = const()[name = tensor<string, []>("op_3701_end_0"), val = tensor<int32, [4]>([2, 480, 1, 64])];
            tensor<bool, [4]> var_3701_end_mask_0 = const()[name = tensor<string, []>("op_3701_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3701_cast = slice_by_index(begin = var_3701_begin_0, end = var_3701_end_0, end_mask = var_3701_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_3705_begin_0 = const()[name = tensor<string, []>("op_3705_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_3705_end_0 = const()[name = tensor<string, []>("op_3705_end_0"), val = tensor<int32, [4]>([2, 640, 1, 64])];
            tensor<bool, [4]> var_3705_end_mask_0 = const()[name = tensor<string, []>("op_3705_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3705_cast = slice_by_index(begin = var_3705_begin_0, end = var_3705_end_0, end_mask = var_3705_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_3709_begin_0 = const()[name = tensor<string, []>("op_3709_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_3709_end_0 = const()[name = tensor<string, []>("op_3709_end_0"), val = tensor<int32, [4]>([2, 800, 1, 64])];
            tensor<bool, [4]> var_3709_end_mask_0 = const()[name = tensor<string, []>("op_3709_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3709_cast = slice_by_index(begin = var_3709_begin_0, end = var_3709_end_0, end_mask = var_3709_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_3713_begin_0 = const()[name = tensor<string, []>("op_3713_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_3713_end_0 = const()[name = tensor<string, []>("op_3713_end_0"), val = tensor<int32, [4]>([2, 960, 1, 64])];
            tensor<bool, [4]> var_3713_end_mask_0 = const()[name = tensor<string, []>("op_3713_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3713_cast = slice_by_index(begin = var_3713_begin_0, end = var_3713_end_0, end_mask = var_3713_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_3717_begin_0 = const()[name = tensor<string, []>("op_3717_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_3717_end_0 = const()[name = tensor<string, []>("op_3717_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 64])];
            tensor<bool, [4]> var_3717_end_mask_0 = const()[name = tensor<string, []>("op_3717_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3717_cast = slice_by_index(begin = var_3717_begin_0, end = var_3717_end_0, end_mask = var_3717_end_mask_0, x = v_25_cast);
            tensor<int32, [4]> var_3721_begin_0 = const()[name = tensor<string, []>("op_3721_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_3721_end_0 = const()[name = tensor<string, []>("op_3721_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 64])];
            tensor<bool, [4]> var_3721_end_mask_0 = const()[name = tensor<string, []>("op_3721_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3721_cast = slice_by_index(begin = var_3721_begin_0, end = var_3721_end_0, end_mask = var_3721_end_mask_0, x = v_25_cast);
            tensor<string, []> var_3725_equation_0 = const()[name = tensor<string, []>("op_3725_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_3725_cast = einsum(equation = var_3725_equation_0, values = (var_3663_cast, var_3628_cast));
            tensor<fp16, []> var_3726_to_fp16 = const()[name = tensor<string, []>("op_3726_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 64, 1, 64]> aw_193_cast = mul(x = var_3725_cast, y = var_3726_to_fp16);
            tensor<string, []> var_3729_equation_0 = const()[name = tensor<string, []>("op_3729_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_3729_cast = einsum(equation = var_3729_equation_0, values = (var_3667_cast, var_3632_cast));
            tensor<fp16, []> var_3730_to_fp16 = const()[name = tensor<string, []>("op_3730_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 64, 1, 64]> aw_195_cast = mul(x = var_3729_cast, y = var_3730_to_fp16);
            tensor<string, []> var_3733_equation_0 = const()[name = tensor<string, []>("op_3733_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_3733_cast = einsum(equation = var_3733_equation_0, values = (var_3671_cast, var_3636_cast));
            tensor<fp16, []> var_3734_to_fp16 = const()[name = tensor<string, []>("op_3734_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 64, 1, 64]> aw_197_cast = mul(x = var_3733_cast, y = var_3734_to_fp16);
            tensor<string, []> var_3737_equation_0 = const()[name = tensor<string, []>("op_3737_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_3737_cast = einsum(equation = var_3737_equation_0, values = (var_3675_cast, var_3640_cast));
            tensor<fp16, []> var_3738_to_fp16 = const()[name = tensor<string, []>("op_3738_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 64, 1, 64]> aw_199_cast = mul(x = var_3737_cast, y = var_3738_to_fp16);
            tensor<string, []> var_3741_equation_0 = const()[name = tensor<string, []>("op_3741_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_3741_cast = einsum(equation = var_3741_equation_0, values = (var_3679_cast, var_3644_cast));
            tensor<fp16, []> var_3742_to_fp16 = const()[name = tensor<string, []>("op_3742_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 64, 1, 64]> aw_201_cast = mul(x = var_3741_cast, y = var_3742_to_fp16);
            tensor<string, []> var_3745_equation_0 = const()[name = tensor<string, []>("op_3745_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_3745_cast = einsum(equation = var_3745_equation_0, values = (var_3683_cast, var_3648_cast));
            tensor<fp16, []> var_3746_to_fp16 = const()[name = tensor<string, []>("op_3746_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 64, 1, 64]> aw_203_cast = mul(x = var_3745_cast, y = var_3746_to_fp16);
            tensor<string, []> var_3749_equation_0 = const()[name = tensor<string, []>("op_3749_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_3749_cast = einsum(equation = var_3749_equation_0, values = (var_3687_cast, var_3652_cast));
            tensor<fp16, []> var_3750_to_fp16 = const()[name = tensor<string, []>("op_3750_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 64, 1, 64]> aw_205_cast = mul(x = var_3749_cast, y = var_3750_to_fp16);
            tensor<string, []> var_3753_equation_0 = const()[name = tensor<string, []>("op_3753_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 64, 1, 64]> var_3753_cast = einsum(equation = var_3753_equation_0, values = (var_3691_cast, var_3656_cast));
            tensor<fp16, []> var_3754_to_fp16 = const()[name = tensor<string, []>("op_3754_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 64, 1, 64]> aw_207_cast = mul(x = var_3753_cast, y = var_3754_to_fp16);
            tensor<fp16, [2, 64, 1, 64]> var_3756_cast = softmax(axis = var_3512, x = aw_193_cast);
            tensor<fp16, [2, 64, 1, 64]> var_3757_cast = softmax(axis = var_3512, x = aw_195_cast);
            tensor<fp16, [2, 64, 1, 64]> var_3758_cast = softmax(axis = var_3512, x = aw_197_cast);
            tensor<fp16, [2, 64, 1, 64]> var_3759_cast = softmax(axis = var_3512, x = aw_199_cast);
            tensor<fp16, [2, 64, 1, 64]> var_3760_cast = softmax(axis = var_3512, x = aw_201_cast);
            tensor<fp16, [2, 64, 1, 64]> var_3761_cast = softmax(axis = var_3512, x = aw_203_cast);
            tensor<fp16, [2, 64, 1, 64]> var_3762_cast = softmax(axis = var_3512, x = aw_205_cast);
            tensor<fp16, [2, 64, 1, 64]> var_3763_cast = softmax(axis = var_3512, x = aw_207_cast);
            tensor<string, []> var_3765_equation_0 = const()[name = tensor<string, []>("op_3765_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3765_cast = einsum(equation = var_3765_equation_0, values = (var_3693_cast, var_3756_cast));
            tensor<string, []> var_3767_equation_0 = const()[name = tensor<string, []>("op_3767_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3767_cast = einsum(equation = var_3767_equation_0, values = (var_3697_cast, var_3757_cast));
            tensor<string, []> var_3769_equation_0 = const()[name = tensor<string, []>("op_3769_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3769_cast = einsum(equation = var_3769_equation_0, values = (var_3701_cast, var_3758_cast));
            tensor<string, []> var_3771_equation_0 = const()[name = tensor<string, []>("op_3771_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3771_cast = einsum(equation = var_3771_equation_0, values = (var_3705_cast, var_3759_cast));
            tensor<string, []> var_3773_equation_0 = const()[name = tensor<string, []>("op_3773_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3773_cast = einsum(equation = var_3773_equation_0, values = (var_3709_cast, var_3760_cast));
            tensor<string, []> var_3775_equation_0 = const()[name = tensor<string, []>("op_3775_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3775_cast = einsum(equation = var_3775_equation_0, values = (var_3713_cast, var_3761_cast));
            tensor<string, []> var_3777_equation_0 = const()[name = tensor<string, []>("op_3777_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3777_cast = einsum(equation = var_3777_equation_0, values = (var_3717_cast, var_3762_cast));
            tensor<string, []> var_3779_equation_0 = const()[name = tensor<string, []>("op_3779_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3779_cast = einsum(equation = var_3779_equation_0, values = (var_3721_cast, var_3763_cast));
            tensor<bool, []> input_215_interleave_0 = const()[name = tensor<string, []>("input_215_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 64]> input_215_cast = concat(axis = var_3512, interleave = input_215_interleave_0, values = (var_3765_cast, var_3767_cast, var_3769_cast, var_3771_cast, var_3773_cast, var_3775_cast, var_3777_cast, var_3779_cast));
            tensor<int32, [2]> var_3785 = const()[name = tensor<string, []>("op_3785"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3787 = const()[name = tensor<string, []>("op_3787"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_3789_pad_type_0 = const()[name = tensor<string, []>("op_3789_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_3789_pad_0 = const()[name = tensor<string, []>("op_3789_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(578853632)))];
            tensor<fp16, [1280]> mid_block_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(582130496)))];
            tensor<fp16, [2, 1280, 1, 64]> var_3789_cast = conv(bias = mid_block_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_3787, groups = var_3512, pad = var_3789_pad_0, pad_type = var_3789_pad_type_0, strides = var_3785, weight = mid_block_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_215_cast);
            tensor<fp16, [2, 1280, 1, 64]> inputs_39_cast = add(x = var_3789_cast, y = inputs_37_cast);
            tensor<int32, [1]> var_3793 = const()[name = tensor<string, []>("op_3793"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 64]> channels_mean_39_cast = reduce_mean(axes = var_3793, keep_dims = var_3507, x = inputs_39_cast);
            tensor<fp16, [2, 1280, 1, 64]> zero_mean_39_cast = sub(x = inputs_39_cast, y = channels_mean_39_cast);
            tensor<fp16, [2, 1280, 1, 64]> zero_mean_sq_39_cast = mul(x = zero_mean_39_cast, y = zero_mean_39_cast);
            tensor<int32, [1]> var_3797 = const()[name = tensor<string, []>("op_3797"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 64]> var_3798_cast = reduce_mean(axes = var_3797, keep_dims = var_3507, x = zero_mean_sq_39_cast);
            tensor<fp16, []> var_3799_to_fp16 = const()[name = tensor<string, []>("op_3799_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 64]> var_3800_cast = add(x = var_3798_cast, y = var_3799_to_fp16);
            tensor<fp16, []> denom_39_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_39_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 64]> denom_39_cast = rsqrt(epsilon = denom_39_epsilon_0_to_fp16, x = var_3800_cast);
            tensor<fp16, [2, 1280, 1, 64]> out_39_cast = mul(x = zero_mean_39_cast, y = denom_39_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_3804_to_fp16 = const()[name = tensor<string, []>("op_3804_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(582133120)))];
            tensor<fp16, [2, 1280, 1, 64]> var_3805_cast = add(x = out_39_cast, y = var_3804_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_3807_to_fp16 = const()[name = tensor<string, []>("op_3807_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(582135744)))];
            tensor<fp16, [2, 1280, 1, 64]> hidden_states_127_cast = mul(x = var_3805_cast, y = var_3807_to_fp16);
            tensor<int32, [2]> var_3814 = const()[name = tensor<string, []>("op_3814"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3816 = const()[name = tensor<string, []>("op_3816"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_27_pad_type_0 = const()[name = tensor<string, []>("q_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_27_pad_0 = const()[name = tensor<string, []>("q_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(582138368)))];
            tensor<fp16, [2, 1280, 1, 64]> q_27_cast = conv(dilations = var_3816, groups = var_3512, pad = q_27_pad_0, pad_type = q_27_pad_type_0, strides = var_3814, weight = mid_block_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_127_cast);
            tensor<int32, [2]> var_3820 = const()[name = tensor<string, []>("op_3820"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3822 = const()[name = tensor<string, []>("op_3822"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_53_pad_type_0 = const()[name = tensor<string, []>("k_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_53_pad_0 = const()[name = tensor<string, []>("k_53_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(585415232)))];
            tensor<fp16, [2, 1280, 1, 77]> k_53_cast = conv(dilations = var_3822, groups = var_3512, pad = k_53_pad_0, pad_type = k_53_pad_type_0, strides = var_3820, weight = mid_block_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_3826 = const()[name = tensor<string, []>("op_3826"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3828 = const()[name = tensor<string, []>("op_3828"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_27_pad_type_0 = const()[name = tensor<string, []>("v_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_27_pad_0 = const()[name = tensor<string, []>("v_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(587381376)))];
            tensor<fp16, [2, 1280, 1, 77]> v_27_cast = conv(dilations = var_3828, groups = var_3512, pad = v_27_pad_0, pad_type = v_27_pad_type_0, strides = var_3826, weight = mid_block_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_3832_begin_0 = const()[name = tensor<string, []>("op_3832_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3832_end_0 = const()[name = tensor<string, []>("op_3832_end_0"), val = tensor<int32, [4]>([2, 160, 1, 64])];
            tensor<bool, [4]> var_3832_end_mask_0 = const()[name = tensor<string, []>("op_3832_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3832_cast = slice_by_index(begin = var_3832_begin_0, end = var_3832_end_0, end_mask = var_3832_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_3836_begin_0 = const()[name = tensor<string, []>("op_3836_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_3836_end_0 = const()[name = tensor<string, []>("op_3836_end_0"), val = tensor<int32, [4]>([2, 320, 1, 64])];
            tensor<bool, [4]> var_3836_end_mask_0 = const()[name = tensor<string, []>("op_3836_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3836_cast = slice_by_index(begin = var_3836_begin_0, end = var_3836_end_0, end_mask = var_3836_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_3840_begin_0 = const()[name = tensor<string, []>("op_3840_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_3840_end_0 = const()[name = tensor<string, []>("op_3840_end_0"), val = tensor<int32, [4]>([2, 480, 1, 64])];
            tensor<bool, [4]> var_3840_end_mask_0 = const()[name = tensor<string, []>("op_3840_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3840_cast = slice_by_index(begin = var_3840_begin_0, end = var_3840_end_0, end_mask = var_3840_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_3844_begin_0 = const()[name = tensor<string, []>("op_3844_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_3844_end_0 = const()[name = tensor<string, []>("op_3844_end_0"), val = tensor<int32, [4]>([2, 640, 1, 64])];
            tensor<bool, [4]> var_3844_end_mask_0 = const()[name = tensor<string, []>("op_3844_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3844_cast = slice_by_index(begin = var_3844_begin_0, end = var_3844_end_0, end_mask = var_3844_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_3848_begin_0 = const()[name = tensor<string, []>("op_3848_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_3848_end_0 = const()[name = tensor<string, []>("op_3848_end_0"), val = tensor<int32, [4]>([2, 800, 1, 64])];
            tensor<bool, [4]> var_3848_end_mask_0 = const()[name = tensor<string, []>("op_3848_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3848_cast = slice_by_index(begin = var_3848_begin_0, end = var_3848_end_0, end_mask = var_3848_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_3852_begin_0 = const()[name = tensor<string, []>("op_3852_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_3852_end_0 = const()[name = tensor<string, []>("op_3852_end_0"), val = tensor<int32, [4]>([2, 960, 1, 64])];
            tensor<bool, [4]> var_3852_end_mask_0 = const()[name = tensor<string, []>("op_3852_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3852_cast = slice_by_index(begin = var_3852_begin_0, end = var_3852_end_0, end_mask = var_3852_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_3856_begin_0 = const()[name = tensor<string, []>("op_3856_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_3856_end_0 = const()[name = tensor<string, []>("op_3856_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 64])];
            tensor<bool, [4]> var_3856_end_mask_0 = const()[name = tensor<string, []>("op_3856_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3856_cast = slice_by_index(begin = var_3856_begin_0, end = var_3856_end_0, end_mask = var_3856_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> var_3860_begin_0 = const()[name = tensor<string, []>("op_3860_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_3860_end_0 = const()[name = tensor<string, []>("op_3860_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 64])];
            tensor<bool, [4]> var_3860_end_mask_0 = const()[name = tensor<string, []>("op_3860_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 64]> var_3860_cast = slice_by_index(begin = var_3860_begin_0, end = var_3860_end_0, end_mask = var_3860_end_mask_0, x = q_27_cast);
            tensor<int32, [4]> k_55_perm_0 = const()[name = tensor<string, []>("k_55_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_3867_begin_0 = const()[name = tensor<string, []>("op_3867_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3867_end_0 = const()[name = tensor<string, []>("op_3867_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_3867_end_mask_0 = const()[name = tensor<string, []>("op_3867_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 1280]> transpose_18 = transpose(perm = k_55_perm_0, x = k_53_cast);
            tensor<fp16, [2, 77, 1, 160]> var_3867_cast = slice_by_index(begin = var_3867_begin_0, end = var_3867_end_0, end_mask = var_3867_end_mask_0, x = transpose_18);
            tensor<int32, [4]> var_3871_begin_0 = const()[name = tensor<string, []>("op_3871_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_3871_end_0 = const()[name = tensor<string, []>("op_3871_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_3871_end_mask_0 = const()[name = tensor<string, []>("op_3871_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3871_cast = slice_by_index(begin = var_3871_begin_0, end = var_3871_end_0, end_mask = var_3871_end_mask_0, x = transpose_18);
            tensor<int32, [4]> var_3875_begin_0 = const()[name = tensor<string, []>("op_3875_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_3875_end_0 = const()[name = tensor<string, []>("op_3875_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_3875_end_mask_0 = const()[name = tensor<string, []>("op_3875_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3875_cast = slice_by_index(begin = var_3875_begin_0, end = var_3875_end_0, end_mask = var_3875_end_mask_0, x = transpose_18);
            tensor<int32, [4]> var_3879_begin_0 = const()[name = tensor<string, []>("op_3879_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_3879_end_0 = const()[name = tensor<string, []>("op_3879_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_3879_end_mask_0 = const()[name = tensor<string, []>("op_3879_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3879_cast = slice_by_index(begin = var_3879_begin_0, end = var_3879_end_0, end_mask = var_3879_end_mask_0, x = transpose_18);
            tensor<int32, [4]> var_3883_begin_0 = const()[name = tensor<string, []>("op_3883_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_3883_end_0 = const()[name = tensor<string, []>("op_3883_end_0"), val = tensor<int32, [4]>([2, 77, 1, 800])];
            tensor<bool, [4]> var_3883_end_mask_0 = const()[name = tensor<string, []>("op_3883_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3883_cast = slice_by_index(begin = var_3883_begin_0, end = var_3883_end_0, end_mask = var_3883_end_mask_0, x = transpose_18);
            tensor<int32, [4]> var_3887_begin_0 = const()[name = tensor<string, []>("op_3887_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_3887_end_0 = const()[name = tensor<string, []>("op_3887_end_0"), val = tensor<int32, [4]>([2, 77, 1, 960])];
            tensor<bool, [4]> var_3887_end_mask_0 = const()[name = tensor<string, []>("op_3887_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3887_cast = slice_by_index(begin = var_3887_begin_0, end = var_3887_end_0, end_mask = var_3887_end_mask_0, x = transpose_18);
            tensor<int32, [4]> var_3891_begin_0 = const()[name = tensor<string, []>("op_3891_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_3891_end_0 = const()[name = tensor<string, []>("op_3891_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1120])];
            tensor<bool, [4]> var_3891_end_mask_0 = const()[name = tensor<string, []>("op_3891_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3891_cast = slice_by_index(begin = var_3891_begin_0, end = var_3891_end_0, end_mask = var_3891_end_mask_0, x = transpose_18);
            tensor<int32, [4]> var_3895_begin_0 = const()[name = tensor<string, []>("op_3895_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_3895_end_0 = const()[name = tensor<string, []>("op_3895_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1280])];
            tensor<bool, [4]> var_3895_end_mask_0 = const()[name = tensor<string, []>("op_3895_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_3895_cast = slice_by_index(begin = var_3895_begin_0, end = var_3895_end_0, end_mask = var_3895_end_mask_0, x = transpose_18);
            tensor<int32, [4]> var_3897_begin_0 = const()[name = tensor<string, []>("op_3897_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3897_end_0 = const()[name = tensor<string, []>("op_3897_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_3897_end_mask_0 = const()[name = tensor<string, []>("op_3897_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3897_cast = slice_by_index(begin = var_3897_begin_0, end = var_3897_end_0, end_mask = var_3897_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_3901_begin_0 = const()[name = tensor<string, []>("op_3901_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_3901_end_0 = const()[name = tensor<string, []>("op_3901_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_3901_end_mask_0 = const()[name = tensor<string, []>("op_3901_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3901_cast = slice_by_index(begin = var_3901_begin_0, end = var_3901_end_0, end_mask = var_3901_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_3905_begin_0 = const()[name = tensor<string, []>("op_3905_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_3905_end_0 = const()[name = tensor<string, []>("op_3905_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_3905_end_mask_0 = const()[name = tensor<string, []>("op_3905_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3905_cast = slice_by_index(begin = var_3905_begin_0, end = var_3905_end_0, end_mask = var_3905_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_3909_begin_0 = const()[name = tensor<string, []>("op_3909_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_3909_end_0 = const()[name = tensor<string, []>("op_3909_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_3909_end_mask_0 = const()[name = tensor<string, []>("op_3909_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3909_cast = slice_by_index(begin = var_3909_begin_0, end = var_3909_end_0, end_mask = var_3909_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_3913_begin_0 = const()[name = tensor<string, []>("op_3913_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_3913_end_0 = const()[name = tensor<string, []>("op_3913_end_0"), val = tensor<int32, [4]>([2, 800, 1, 77])];
            tensor<bool, [4]> var_3913_end_mask_0 = const()[name = tensor<string, []>("op_3913_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3913_cast = slice_by_index(begin = var_3913_begin_0, end = var_3913_end_0, end_mask = var_3913_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_3917_begin_0 = const()[name = tensor<string, []>("op_3917_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_3917_end_0 = const()[name = tensor<string, []>("op_3917_end_0"), val = tensor<int32, [4]>([2, 960, 1, 77])];
            tensor<bool, [4]> var_3917_end_mask_0 = const()[name = tensor<string, []>("op_3917_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3917_cast = slice_by_index(begin = var_3917_begin_0, end = var_3917_end_0, end_mask = var_3917_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_3921_begin_0 = const()[name = tensor<string, []>("op_3921_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_3921_end_0 = const()[name = tensor<string, []>("op_3921_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 77])];
            tensor<bool, [4]> var_3921_end_mask_0 = const()[name = tensor<string, []>("op_3921_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3921_cast = slice_by_index(begin = var_3921_begin_0, end = var_3921_end_0, end_mask = var_3921_end_mask_0, x = v_27_cast);
            tensor<int32, [4]> var_3925_begin_0 = const()[name = tensor<string, []>("op_3925_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_3925_end_0 = const()[name = tensor<string, []>("op_3925_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 77])];
            tensor<bool, [4]> var_3925_end_mask_0 = const()[name = tensor<string, []>("op_3925_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_3925_cast = slice_by_index(begin = var_3925_begin_0, end = var_3925_end_0, end_mask = var_3925_end_mask_0, x = v_27_cast);
            tensor<string, []> var_3929_equation_0 = const()[name = tensor<string, []>("op_3929_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_3929_cast = einsum(equation = var_3929_equation_0, values = (var_3867_cast, var_3832_cast));
            tensor<fp16, []> var_3930_to_fp16 = const()[name = tensor<string, []>("op_3930_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 64]> aw_209_cast = mul(x = var_3929_cast, y = var_3930_to_fp16);
            tensor<string, []> var_3933_equation_0 = const()[name = tensor<string, []>("op_3933_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_3933_cast = einsum(equation = var_3933_equation_0, values = (var_3871_cast, var_3836_cast));
            tensor<fp16, []> var_3934_to_fp16 = const()[name = tensor<string, []>("op_3934_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 64]> aw_211_cast = mul(x = var_3933_cast, y = var_3934_to_fp16);
            tensor<string, []> var_3937_equation_0 = const()[name = tensor<string, []>("op_3937_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_3937_cast = einsum(equation = var_3937_equation_0, values = (var_3875_cast, var_3840_cast));
            tensor<fp16, []> var_3938_to_fp16 = const()[name = tensor<string, []>("op_3938_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 64]> aw_213_cast = mul(x = var_3937_cast, y = var_3938_to_fp16);
            tensor<string, []> var_3941_equation_0 = const()[name = tensor<string, []>("op_3941_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_3941_cast = einsum(equation = var_3941_equation_0, values = (var_3879_cast, var_3844_cast));
            tensor<fp16, []> var_3942_to_fp16 = const()[name = tensor<string, []>("op_3942_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 64]> aw_215_cast = mul(x = var_3941_cast, y = var_3942_to_fp16);
            tensor<string, []> var_3945_equation_0 = const()[name = tensor<string, []>("op_3945_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_3945_cast = einsum(equation = var_3945_equation_0, values = (var_3883_cast, var_3848_cast));
            tensor<fp16, []> var_3946_to_fp16 = const()[name = tensor<string, []>("op_3946_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 64]> aw_217_cast = mul(x = var_3945_cast, y = var_3946_to_fp16);
            tensor<string, []> var_3949_equation_0 = const()[name = tensor<string, []>("op_3949_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_3949_cast = einsum(equation = var_3949_equation_0, values = (var_3887_cast, var_3852_cast));
            tensor<fp16, []> var_3950_to_fp16 = const()[name = tensor<string, []>("op_3950_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 64]> aw_219_cast = mul(x = var_3949_cast, y = var_3950_to_fp16);
            tensor<string, []> var_3953_equation_0 = const()[name = tensor<string, []>("op_3953_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_3953_cast = einsum(equation = var_3953_equation_0, values = (var_3891_cast, var_3856_cast));
            tensor<fp16, []> var_3954_to_fp16 = const()[name = tensor<string, []>("op_3954_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 64]> aw_221_cast = mul(x = var_3953_cast, y = var_3954_to_fp16);
            tensor<string, []> var_3957_equation_0 = const()[name = tensor<string, []>("op_3957_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 64]> var_3957_cast = einsum(equation = var_3957_equation_0, values = (var_3895_cast, var_3860_cast));
            tensor<fp16, []> var_3958_to_fp16 = const()[name = tensor<string, []>("op_3958_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 64]> aw_223_cast = mul(x = var_3957_cast, y = var_3958_to_fp16);
            tensor<fp16, [2, 77, 1, 64]> var_3960_cast = softmax(axis = var_3512, x = aw_209_cast);
            tensor<fp16, [2, 77, 1, 64]> var_3961_cast = softmax(axis = var_3512, x = aw_211_cast);
            tensor<fp16, [2, 77, 1, 64]> var_3962_cast = softmax(axis = var_3512, x = aw_213_cast);
            tensor<fp16, [2, 77, 1, 64]> var_3963_cast = softmax(axis = var_3512, x = aw_215_cast);
            tensor<fp16, [2, 77, 1, 64]> var_3964_cast = softmax(axis = var_3512, x = aw_217_cast);
            tensor<fp16, [2, 77, 1, 64]> var_3965_cast = softmax(axis = var_3512, x = aw_219_cast);
            tensor<fp16, [2, 77, 1, 64]> var_3966_cast = softmax(axis = var_3512, x = aw_221_cast);
            tensor<fp16, [2, 77, 1, 64]> var_3967_cast = softmax(axis = var_3512, x = aw_223_cast);
            tensor<string, []> var_3969_equation_0 = const()[name = tensor<string, []>("op_3969_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3969_cast = einsum(equation = var_3969_equation_0, values = (var_3897_cast, var_3960_cast));
            tensor<string, []> var_3971_equation_0 = const()[name = tensor<string, []>("op_3971_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3971_cast = einsum(equation = var_3971_equation_0, values = (var_3901_cast, var_3961_cast));
            tensor<string, []> var_3973_equation_0 = const()[name = tensor<string, []>("op_3973_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3973_cast = einsum(equation = var_3973_equation_0, values = (var_3905_cast, var_3962_cast));
            tensor<string, []> var_3975_equation_0 = const()[name = tensor<string, []>("op_3975_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3975_cast = einsum(equation = var_3975_equation_0, values = (var_3909_cast, var_3963_cast));
            tensor<string, []> var_3977_equation_0 = const()[name = tensor<string, []>("op_3977_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3977_cast = einsum(equation = var_3977_equation_0, values = (var_3913_cast, var_3964_cast));
            tensor<string, []> var_3979_equation_0 = const()[name = tensor<string, []>("op_3979_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3979_cast = einsum(equation = var_3979_equation_0, values = (var_3917_cast, var_3965_cast));
            tensor<string, []> var_3981_equation_0 = const()[name = tensor<string, []>("op_3981_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3981_cast = einsum(equation = var_3981_equation_0, values = (var_3921_cast, var_3966_cast));
            tensor<string, []> var_3983_equation_0 = const()[name = tensor<string, []>("op_3983_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 64]> var_3983_cast = einsum(equation = var_3983_equation_0, values = (var_3925_cast, var_3967_cast));
            tensor<bool, []> input_217_interleave_0 = const()[name = tensor<string, []>("input_217_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 64]> input_217_cast = concat(axis = var_3512, interleave = input_217_interleave_0, values = (var_3969_cast, var_3971_cast, var_3973_cast, var_3975_cast, var_3977_cast, var_3979_cast, var_3981_cast, var_3983_cast));
            tensor<int32, [2]> var_3989 = const()[name = tensor<string, []>("op_3989"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3991 = const()[name = tensor<string, []>("op_3991"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_3993_pad_type_0 = const()[name = tensor<string, []>("op_3993_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_3993_pad_0 = const()[name = tensor<string, []>("op_3993_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(589347520)))];
            tensor<fp16, [1280]> mid_block_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(592624384)))];
            tensor<fp16, [2, 1280, 1, 64]> var_3993_cast = conv(bias = mid_block_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_3991, groups = var_3512, pad = var_3993_pad_0, pad_type = var_3993_pad_type_0, strides = var_3989, weight = mid_block_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_217_cast);
            tensor<fp16, [2, 1280, 1, 64]> inputs_41_cast = add(x = var_3993_cast, y = inputs_39_cast);
            tensor<int32, [1]> var_3997 = const()[name = tensor<string, []>("op_3997"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 64]> channels_mean_41_cast = reduce_mean(axes = var_3997, keep_dims = var_3507, x = inputs_41_cast);
            tensor<fp16, [2, 1280, 1, 64]> zero_mean_41_cast = sub(x = inputs_41_cast, y = channels_mean_41_cast);
            tensor<fp16, [2, 1280, 1, 64]> zero_mean_sq_41_cast = mul(x = zero_mean_41_cast, y = zero_mean_41_cast);
            tensor<int32, [1]> var_4001 = const()[name = tensor<string, []>("op_4001"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 64]> var_4002_cast = reduce_mean(axes = var_4001, keep_dims = var_3507, x = zero_mean_sq_41_cast);
            tensor<fp16, []> var_4003_to_fp16 = const()[name = tensor<string, []>("op_4003_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 64]> var_4004_cast = add(x = var_4002_cast, y = var_4003_to_fp16);
            tensor<fp16, []> denom_41_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_41_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 64]> denom_41_cast = rsqrt(epsilon = denom_41_epsilon_0_to_fp16, x = var_4004_cast);
            tensor<fp16, [2, 1280, 1, 64]> out_41_cast = mul(x = zero_mean_41_cast, y = denom_41_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_4008_to_fp16 = const()[name = tensor<string, []>("op_4008_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(592627008)))];
            tensor<fp16, [2, 1280, 1, 64]> var_4009_cast = add(x = out_41_cast, y = var_4008_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_4011_to_fp16 = const()[name = tensor<string, []>("op_4011_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(592629632)))];
            tensor<fp16, [2, 1280, 1, 64]> input_219_cast = mul(x = var_4009_cast, y = var_4011_to_fp16);
            tensor<int32, [2]> var_4019 = const()[name = tensor<string, []>("op_4019"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4021 = const()[name = tensor<string, []>("op_4021"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_4023_pad_type_0 = const()[name = tensor<string, []>("op_4023_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_4023_pad_0 = const()[name = tensor<string, []>("op_4023_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [10240, 1280, 1, 1]> mid_block_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [10240, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(592632256)))];
            tensor<fp16, [10240]> mid_block_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [10240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(618846720)))];
            tensor<fp16, [2, 10240, 1, 64]> var_4023_cast = conv(bias = mid_block_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_4021, groups = var_3512, pad = var_4023_pad_0, pad_type = var_4023_pad_type_0, strides = var_4019, weight = mid_block_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_219_cast);
            tensor<int32, [2]> var_4024_split_sizes_0 = const()[name = tensor<string, []>("op_4024_split_sizes_0"), val = tensor<int32, [2]>([5120, 5120])];
            tensor<int32, []> var_4024_axis_0 = const()[name = tensor<string, []>("op_4024_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 5120, 1, 64]> var_4024_cast_0, tensor<fp16, [2, 5120, 1, 64]> var_4024_cast_1 = split(axis = var_4024_axis_0, split_sizes = var_4024_split_sizes_0, x = var_4023_cast);
            tensor<string, []> var_4026_mode_0 = const()[name = tensor<string, []>("op_4026_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 5120, 1, 64]> var_4026_cast = gelu(mode = var_4026_mode_0, x = var_4024_cast_1);
            tensor<fp16, [2, 5120, 1, 64]> input_221_cast = mul(x = var_4024_cast_0, y = var_4026_cast);
            tensor<int32, [2]> var_4030 = const()[name = tensor<string, []>("op_4030"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4032 = const()[name = tensor<string, []>("op_4032"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_4034_pad_type_0 = const()[name = tensor<string, []>("op_4034_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_4034_pad_0 = const()[name = tensor<string, []>("op_4034_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 5120, 1, 1]> mid_block_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(618867264)))];
            tensor<fp16, [1280]> mid_block_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(631974528)))];
            tensor<fp16, [2, 1280, 1, 64]> var_4034_cast = conv(bias = mid_block_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_4032, groups = var_3512, pad = var_4034_pad_0, pad_type = var_4034_pad_type_0, strides = var_4030, weight = mid_block_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_221_cast);
            tensor<fp16, [2, 1280, 1, 64]> hidden_states_131_cast = add(x = var_4034_cast, y = inputs_41_cast);
            tensor<int32, [4]> var_4036 = const()[name = tensor<string, []>("op_4036"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> input_223_cast = reshape(shape = var_4036, x = hidden_states_131_cast);
            tensor<int32, [2]> var_4040 = const()[name = tensor<string, []>("op_4040"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4042 = const()[name = tensor<string, []>("op_4042"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_133_pad_type_0 = const()[name = tensor<string, []>("hidden_states_133_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_133_pad_0 = const()[name = tensor<string, []>("hidden_states_133_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_attentions_0_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_proj_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(631977152)))];
            tensor<fp16, [1280]> mid_block_attentions_0_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_attentions_0_proj_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(635254016)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_133_cast = conv(bias = mid_block_attentions_0_proj_out_bias_to_fp16, dilations = var_4042, groups = var_3512, pad = hidden_states_133_pad_0, pad_type = hidden_states_133_pad_type_0, strides = var_4040, weight = mid_block_attentions_0_proj_out_weight_to_fp16, x = input_223_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_225_cast = add(x = hidden_states_133_cast, y = hidden_states_121_cast);
            tensor<int32, [5]> reshape_100_shape_0 = const()[name = tensor<string, []>("reshape_100_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_100_cast = reshape(shape = reshape_100_shape_0, x = input_225_cast);
            tensor<int32, [3]> reduce_mean_75_axes_0 = const()[name = tensor<string, []>("reduce_mean_75_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_75_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_75_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_75_cast = reduce_mean(axes = reduce_mean_75_axes_0, keep_dims = reduce_mean_75_keep_dims_0, x = reshape_100_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_50_cast = sub(x = reshape_100_cast, y = reduce_mean_75_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_25_cast = square(x = sub_50_cast);
            tensor<int32, [3]> reduce_mean_77_axes_0 = const()[name = tensor<string, []>("reduce_mean_77_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_77_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_77_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_77_cast = reduce_mean(axes = reduce_mean_77_axes_0, keep_dims = reduce_mean_77_keep_dims_0, x = square_25_cast);
            tensor<fp16, []> add_50_y_0_to_fp16 = const()[name = tensor<string, []>("add_50_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_50_cast = add(x = reduce_mean_77_cast, y = add_50_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_25_cast = sqrt(x = add_50_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_25_cast = real_div(x = sub_50_cast, y = sqrt_25_cast);
            tensor<int32, [4]> reshape_101_shape_0 = const()[name = tensor<string, []>("reshape_101_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_101_cast = reshape(shape = reshape_101_shape_0, x = real_div_25_cast);
            tensor<fp16, [1280]> add_51_mean_0_to_fp16 = const()[name = tensor<string, []>("add_51_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(635256640)))];
            tensor<fp16, [1280]> add_51_variance_0_to_fp16 = const()[name = tensor<string, []>("add_51_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(635259264)))];
            tensor<fp16, [1280]> add_51_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_51_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(635261888)))];
            tensor<fp16, [1280]> add_51_beta_0_to_fp16 = const()[name = tensor<string, []>("add_51_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(635264512)))];
            tensor<fp16, []> add_51_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_51_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_51_cast = batch_norm(beta = add_51_beta_0_to_fp16, epsilon = add_51_epsilon_0_to_fp16, gamma = add_51_gamma_0_to_fp16, mean = add_51_mean_0_to_fp16, variance = add_51_variance_0_to_fp16, x = reshape_101_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_229_cast = silu(x = add_51_cast);
            tensor<int32, [2]> var_4057 = const()[name = tensor<string, []>("op_4057"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4059 = const()[name = tensor<string, []>("op_4059"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_135_pad_type_0 = const()[name = tensor<string, []>("hidden_states_135_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_135_pad_0 = const()[name = tensor<string, []>("hidden_states_135_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> mid_block_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(635267136)))];
            tensor<fp16, [1280]> mid_block_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(664758400)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_135_cast = conv(bias = mid_block_resnets_1_conv1_bias_to_fp16, dilations = var_4059, groups = var_3512, pad = hidden_states_135_pad_0, pad_type = hidden_states_135_pad_type_0, strides = var_4057, weight = mid_block_resnets_1_conv1_weight_to_fp16, x = input_229_cast);
            tensor<int32, [2]> var_4065 = const()[name = tensor<string, []>("op_4065"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4067 = const()[name = tensor<string, []>("op_4067"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_19_pad_type_0 = const()[name = tensor<string, []>("temb_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_19_pad_0 = const()[name = tensor<string, []>("temb_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> mid_block_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(664761024)))];
            tensor<fp16, [1280]> mid_block_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(668037888)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_19_cast = conv(bias = mid_block_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_4067, groups = var_3512, pad = temb_19_pad_0, pad_type = temb_19_pad_type_0, strides = var_4065, weight = mid_block_resnets_1_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_233_cast = add(x = hidden_states_135_cast, y = temb_19_cast);
            tensor<int32, [5]> reshape_104_shape_0 = const()[name = tensor<string, []>("reshape_104_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_104_cast = reshape(shape = reshape_104_shape_0, x = input_233_cast);
            tensor<int32, [3]> reduce_mean_78_axes_0 = const()[name = tensor<string, []>("reduce_mean_78_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_78_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_78_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_78_cast = reduce_mean(axes = reduce_mean_78_axes_0, keep_dims = reduce_mean_78_keep_dims_0, x = reshape_104_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_52_cast = sub(x = reshape_104_cast, y = reduce_mean_78_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_26_cast = square(x = sub_52_cast);
            tensor<int32, [3]> reduce_mean_80_axes_0 = const()[name = tensor<string, []>("reduce_mean_80_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_80_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_80_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_80_cast = reduce_mean(axes = reduce_mean_80_axes_0, keep_dims = reduce_mean_80_keep_dims_0, x = square_26_cast);
            tensor<fp16, []> add_52_y_0_to_fp16 = const()[name = tensor<string, []>("add_52_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_52_cast = add(x = reduce_mean_80_cast, y = add_52_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_26_cast = sqrt(x = add_52_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_26_cast = real_div(x = sub_52_cast, y = sqrt_26_cast);
            tensor<int32, [4]> reshape_105_shape_0 = const()[name = tensor<string, []>("reshape_105_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_105_cast = reshape(shape = reshape_105_shape_0, x = real_div_26_cast);
            tensor<fp16, [1280]> add_53_mean_0_to_fp16 = const()[name = tensor<string, []>("add_53_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(668040512)))];
            tensor<fp16, [1280]> add_53_variance_0_to_fp16 = const()[name = tensor<string, []>("add_53_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(668043136)))];
            tensor<fp16, [1280]> add_53_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_53_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(668045760)))];
            tensor<fp16, [1280]> add_53_beta_0_to_fp16 = const()[name = tensor<string, []>("add_53_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(668048384)))];
            tensor<fp16, []> add_53_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_53_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_53_cast = batch_norm(beta = add_53_beta_0_to_fp16, epsilon = add_53_epsilon_0_to_fp16, gamma = add_53_gamma_0_to_fp16, mean = add_53_mean_0_to_fp16, variance = add_53_variance_0_to_fp16, x = reshape_105_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_237_cast = silu(x = add_53_cast);
            tensor<int32, [2]> var_4077 = const()[name = tensor<string, []>("op_4077"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4079 = const()[name = tensor<string, []>("op_4079"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_137_pad_type_0 = const()[name = tensor<string, []>("hidden_states_137_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_137_pad_0 = const()[name = tensor<string, []>("hidden_states_137_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> mid_block_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(668051008)))];
            tensor<fp16, [1280]> mid_block_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("mid_block_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(697542272)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_137_cast = conv(bias = mid_block_resnets_1_conv2_bias_to_fp16, dilations = var_4079, groups = var_3512, pad = hidden_states_137_pad_0, pad_type = hidden_states_137_pad_type_0, strides = var_4077, weight = mid_block_resnets_1_conv2_weight_to_fp16, x = input_237_cast);
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_139_cast = add(x = input_225_cast, y = hidden_states_137_cast);
            tensor<int32, []> var_4090 = const()[name = tensor<string, []>("op_4090"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_239_interleave_0 = const()[name = tensor<string, []>("input_239_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 2560, 8, 8]> input_239_cast = concat(axis = var_4090, interleave = input_239_interleave_0, values = (hidden_states_139_cast, input_199_cast));
            tensor<int32, [5]> reshape_108_shape_0 = const()[name = tensor<string, []>("reshape_108_shape_0"), val = tensor<int32, [5]>([2, 32, 80, 8, 8])];
            tensor<fp16, [2, 32, 80, 8, 8]> reshape_108_cast = reshape(shape = reshape_108_shape_0, x = input_239_cast);
            tensor<int32, [3]> reduce_mean_81_axes_0 = const()[name = tensor<string, []>("reduce_mean_81_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_81_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_81_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_81_cast = reduce_mean(axes = reduce_mean_81_axes_0, keep_dims = reduce_mean_81_keep_dims_0, x = reshape_108_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> sub_54_cast = sub(x = reshape_108_cast, y = reduce_mean_81_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> square_27_cast = square(x = sub_54_cast);
            tensor<int32, [3]> reduce_mean_83_axes_0 = const()[name = tensor<string, []>("reduce_mean_83_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_83_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_83_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_83_cast = reduce_mean(axes = reduce_mean_83_axes_0, keep_dims = reduce_mean_83_keep_dims_0, x = square_27_cast);
            tensor<fp16, []> add_54_y_0_to_fp16 = const()[name = tensor<string, []>("add_54_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_54_cast = add(x = reduce_mean_83_cast, y = add_54_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_27_cast = sqrt(x = add_54_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> real_div_27_cast = real_div(x = sub_54_cast, y = sqrt_27_cast);
            tensor<int32, [4]> reshape_109_shape_0 = const()[name = tensor<string, []>("reshape_109_shape_0"), val = tensor<int32, [4]>([2, 2560, 8, 8])];
            tensor<fp16, [2, 2560, 8, 8]> reshape_109_cast = reshape(shape = reshape_109_shape_0, x = real_div_27_cast);
            tensor<fp16, [2560]> add_55_mean_0_to_fp16 = const()[name = tensor<string, []>("add_55_mean_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(697544896)))];
            tensor<fp16, [2560]> add_55_variance_0_to_fp16 = const()[name = tensor<string, []>("add_55_variance_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(697550080)))];
            tensor<fp16, [2560]> add_55_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_55_gamma_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(697555264)))];
            tensor<fp16, [2560]> add_55_beta_0_to_fp16 = const()[name = tensor<string, []>("add_55_beta_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(697560448)))];
            tensor<fp16, []> add_55_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_55_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 2560, 8, 8]> add_55_cast = batch_norm(beta = add_55_beta_0_to_fp16, epsilon = add_55_epsilon_0_to_fp16, gamma = add_55_gamma_0_to_fp16, mean = add_55_mean_0_to_fp16, variance = add_55_variance_0_to_fp16, x = reshape_109_cast);
            tensor<fp16, [2, 2560, 8, 8]> input_243_cast = silu(x = add_55_cast);
            tensor<int32, [2]> var_4113 = const()[name = tensor<string, []>("op_4113"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4115 = const()[name = tensor<string, []>("op_4115"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_141_pad_type_0 = const()[name = tensor<string, []>("hidden_states_141_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_141_pad_0 = const()[name = tensor<string, []>("hidden_states_141_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 2560, 3, 3]> up_blocks_0_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(697565632)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(756548096)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_141_cast = conv(bias = up_blocks_0_resnets_0_conv1_bias_to_fp16, dilations = var_4115, groups = var_4090, pad = hidden_states_141_pad_0, pad_type = hidden_states_141_pad_type_0, strides = var_4113, weight = up_blocks_0_resnets_0_conv1_weight_to_fp16, x = input_243_cast);
            tensor<int32, [2]> var_4121 = const()[name = tensor<string, []>("op_4121"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4123 = const()[name = tensor<string, []>("op_4123"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_21_pad_type_0 = const()[name = tensor<string, []>("temb_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_21_pad_0 = const()[name = tensor<string, []>("temb_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_0_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(756550720)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(759827584)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_21_cast = conv(bias = up_blocks_0_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_4123, groups = var_4090, pad = temb_21_pad_0, pad_type = temb_21_pad_type_0, strides = var_4121, weight = up_blocks_0_resnets_0_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_247_cast = add(x = hidden_states_141_cast, y = temb_21_cast);
            tensor<int32, [5]> reshape_112_shape_0 = const()[name = tensor<string, []>("reshape_112_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_112_cast = reshape(shape = reshape_112_shape_0, x = input_247_cast);
            tensor<int32, [3]> reduce_mean_84_axes_0 = const()[name = tensor<string, []>("reduce_mean_84_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_84_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_84_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_84_cast = reduce_mean(axes = reduce_mean_84_axes_0, keep_dims = reduce_mean_84_keep_dims_0, x = reshape_112_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_56_cast = sub(x = reshape_112_cast, y = reduce_mean_84_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_28_cast = square(x = sub_56_cast);
            tensor<int32, [3]> reduce_mean_86_axes_0 = const()[name = tensor<string, []>("reduce_mean_86_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_86_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_86_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_86_cast = reduce_mean(axes = reduce_mean_86_axes_0, keep_dims = reduce_mean_86_keep_dims_0, x = square_28_cast);
            tensor<fp16, []> add_56_y_0_to_fp16 = const()[name = tensor<string, []>("add_56_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_56_cast = add(x = reduce_mean_86_cast, y = add_56_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_28_cast = sqrt(x = add_56_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_28_cast = real_div(x = sub_56_cast, y = sqrt_28_cast);
            tensor<int32, [4]> reshape_113_shape_0 = const()[name = tensor<string, []>("reshape_113_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_113_cast = reshape(shape = reshape_113_shape_0, x = real_div_28_cast);
            tensor<fp16, [1280]> add_57_mean_0_to_fp16 = const()[name = tensor<string, []>("add_57_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(759830208)))];
            tensor<fp16, [1280]> add_57_variance_0_to_fp16 = const()[name = tensor<string, []>("add_57_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(759832832)))];
            tensor<fp16, [1280]> add_57_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_57_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(759835456)))];
            tensor<fp16, [1280]> add_57_beta_0_to_fp16 = const()[name = tensor<string, []>("add_57_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(759838080)))];
            tensor<fp16, []> add_57_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_57_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_57_cast = batch_norm(beta = add_57_beta_0_to_fp16, epsilon = add_57_epsilon_0_to_fp16, gamma = add_57_gamma_0_to_fp16, mean = add_57_mean_0_to_fp16, variance = add_57_variance_0_to_fp16, x = reshape_113_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_251_cast = silu(x = add_57_cast);
            tensor<int32, [2]> var_4133 = const()[name = tensor<string, []>("op_4133"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4135 = const()[name = tensor<string, []>("op_4135"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_143_pad_type_0 = const()[name = tensor<string, []>("hidden_states_143_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_143_pad_0 = const()[name = tensor<string, []>("hidden_states_143_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_0_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(759840704)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(789331968)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_143_cast = conv(bias = up_blocks_0_resnets_0_conv2_bias_to_fp16, dilations = var_4135, groups = var_4090, pad = hidden_states_143_pad_0, pad_type = hidden_states_143_pad_type_0, strides = var_4133, weight = up_blocks_0_resnets_0_conv2_weight_to_fp16, x = input_251_cast);
            tensor<int32, [2]> var_4140 = const()[name = tensor<string, []>("op_4140"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4142 = const()[name = tensor<string, []>("op_4142"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_5_pad_type_0 = const()[name = tensor<string, []>("x_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_5_pad_0 = const()[name = tensor<string, []>("x_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 2560, 1, 1]> up_blocks_0_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(789334592)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(795888256)))];
            tensor<fp16, [2, 1280, 8, 8]> x_5_cast = conv(bias = up_blocks_0_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_4142, groups = var_4090, pad = x_5_pad_0, pad_type = x_5_pad_type_0, strides = var_4140, weight = up_blocks_0_resnets_0_conv_shortcut_weight_to_fp16, x = input_239_cast);
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_145_cast = add(x = x_5_cast, y = hidden_states_143_cast);
            tensor<bool, []> input_253_interleave_0 = const()[name = tensor<string, []>("input_253_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 2560, 8, 8]> input_253_cast = concat(axis = var_4090, interleave = input_253_interleave_0, values = (hidden_states_145_cast, input_185_cast));
            tensor<int32, [5]> reshape_116_shape_0 = const()[name = tensor<string, []>("reshape_116_shape_0"), val = tensor<int32, [5]>([2, 32, 80, 8, 8])];
            tensor<fp16, [2, 32, 80, 8, 8]> reshape_116_cast = reshape(shape = reshape_116_shape_0, x = input_253_cast);
            tensor<int32, [3]> reduce_mean_87_axes_0 = const()[name = tensor<string, []>("reduce_mean_87_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_87_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_87_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_87_cast = reduce_mean(axes = reduce_mean_87_axes_0, keep_dims = reduce_mean_87_keep_dims_0, x = reshape_116_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> sub_58_cast = sub(x = reshape_116_cast, y = reduce_mean_87_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> square_29_cast = square(x = sub_58_cast);
            tensor<int32, [3]> reduce_mean_89_axes_0 = const()[name = tensor<string, []>("reduce_mean_89_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_89_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_89_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_89_cast = reduce_mean(axes = reduce_mean_89_axes_0, keep_dims = reduce_mean_89_keep_dims_0, x = square_29_cast);
            tensor<fp16, []> add_58_y_0_to_fp16 = const()[name = tensor<string, []>("add_58_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_58_cast = add(x = reduce_mean_89_cast, y = add_58_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_29_cast = sqrt(x = add_58_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> real_div_29_cast = real_div(x = sub_58_cast, y = sqrt_29_cast);
            tensor<int32, [4]> reshape_117_shape_0 = const()[name = tensor<string, []>("reshape_117_shape_0"), val = tensor<int32, [4]>([2, 2560, 8, 8])];
            tensor<fp16, [2, 2560, 8, 8]> reshape_117_cast = reshape(shape = reshape_117_shape_0, x = real_div_29_cast);
            tensor<fp16, [2560]> add_59_mean_0_to_fp16 = const()[name = tensor<string, []>("add_59_mean_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(795890880)))];
            tensor<fp16, [2560]> add_59_variance_0_to_fp16 = const()[name = tensor<string, []>("add_59_variance_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(795896064)))];
            tensor<fp16, [2560]> add_59_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_59_gamma_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(795901248)))];
            tensor<fp16, [2560]> add_59_beta_0_to_fp16 = const()[name = tensor<string, []>("add_59_beta_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(795906432)))];
            tensor<fp16, []> add_59_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_59_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 2560, 8, 8]> add_59_cast = batch_norm(beta = add_59_beta_0_to_fp16, epsilon = add_59_epsilon_0_to_fp16, gamma = add_59_gamma_0_to_fp16, mean = add_59_mean_0_to_fp16, variance = add_59_variance_0_to_fp16, x = reshape_117_cast);
            tensor<fp16, [2, 2560, 8, 8]> input_257_cast = silu(x = add_59_cast);
            tensor<int32, [2]> var_4160 = const()[name = tensor<string, []>("op_4160"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4162 = const()[name = tensor<string, []>("op_4162"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_147_pad_type_0 = const()[name = tensor<string, []>("hidden_states_147_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_147_pad_0 = const()[name = tensor<string, []>("hidden_states_147_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 2560, 3, 3]> up_blocks_0_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(795911616)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(854894080)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_147_cast = conv(bias = up_blocks_0_resnets_1_conv1_bias_to_fp16, dilations = var_4162, groups = var_4090, pad = hidden_states_147_pad_0, pad_type = hidden_states_147_pad_type_0, strides = var_4160, weight = up_blocks_0_resnets_1_conv1_weight_to_fp16, x = input_257_cast);
            tensor<int32, [2]> var_4168 = const()[name = tensor<string, []>("op_4168"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4170 = const()[name = tensor<string, []>("op_4170"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_23_pad_type_0 = const()[name = tensor<string, []>("temb_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_23_pad_0 = const()[name = tensor<string, []>("temb_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_0_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(854896704)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(858173568)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_23_cast = conv(bias = up_blocks_0_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_4170, groups = var_4090, pad = temb_23_pad_0, pad_type = temb_23_pad_type_0, strides = var_4168, weight = up_blocks_0_resnets_1_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_261_cast = add(x = hidden_states_147_cast, y = temb_23_cast);
            tensor<int32, [5]> reshape_120_shape_0 = const()[name = tensor<string, []>("reshape_120_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_120_cast = reshape(shape = reshape_120_shape_0, x = input_261_cast);
            tensor<int32, [3]> reduce_mean_90_axes_0 = const()[name = tensor<string, []>("reduce_mean_90_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_90_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_90_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_90_cast = reduce_mean(axes = reduce_mean_90_axes_0, keep_dims = reduce_mean_90_keep_dims_0, x = reshape_120_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_60_cast = sub(x = reshape_120_cast, y = reduce_mean_90_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_30_cast = square(x = sub_60_cast);
            tensor<int32, [3]> reduce_mean_92_axes_0 = const()[name = tensor<string, []>("reduce_mean_92_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_92_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_92_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_92_cast = reduce_mean(axes = reduce_mean_92_axes_0, keep_dims = reduce_mean_92_keep_dims_0, x = square_30_cast);
            tensor<fp16, []> add_60_y_0_to_fp16 = const()[name = tensor<string, []>("add_60_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_60_cast = add(x = reduce_mean_92_cast, y = add_60_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_30_cast = sqrt(x = add_60_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_30_cast = real_div(x = sub_60_cast, y = sqrt_30_cast);
            tensor<int32, [4]> reshape_121_shape_0 = const()[name = tensor<string, []>("reshape_121_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_121_cast = reshape(shape = reshape_121_shape_0, x = real_div_30_cast);
            tensor<fp16, [1280]> add_61_mean_0_to_fp16 = const()[name = tensor<string, []>("add_61_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(858176192)))];
            tensor<fp16, [1280]> add_61_variance_0_to_fp16 = const()[name = tensor<string, []>("add_61_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(858178816)))];
            tensor<fp16, [1280]> add_61_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_61_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(858181440)))];
            tensor<fp16, [1280]> add_61_beta_0_to_fp16 = const()[name = tensor<string, []>("add_61_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(858184064)))];
            tensor<fp16, []> add_61_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_61_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_61_cast = batch_norm(beta = add_61_beta_0_to_fp16, epsilon = add_61_epsilon_0_to_fp16, gamma = add_61_gamma_0_to_fp16, mean = add_61_mean_0_to_fp16, variance = add_61_variance_0_to_fp16, x = reshape_121_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_265_cast = silu(x = add_61_cast);
            tensor<int32, [2]> var_4180 = const()[name = tensor<string, []>("op_4180"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4182 = const()[name = tensor<string, []>("op_4182"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_149_pad_type_0 = const()[name = tensor<string, []>("hidden_states_149_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_149_pad_0 = const()[name = tensor<string, []>("hidden_states_149_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_0_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(858186688)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(887677952)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_149_cast = conv(bias = up_blocks_0_resnets_1_conv2_bias_to_fp16, dilations = var_4182, groups = var_4090, pad = hidden_states_149_pad_0, pad_type = hidden_states_149_pad_type_0, strides = var_4180, weight = up_blocks_0_resnets_1_conv2_weight_to_fp16, x = input_265_cast);
            tensor<int32, [2]> var_4187 = const()[name = tensor<string, []>("op_4187"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4189 = const()[name = tensor<string, []>("op_4189"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_7_pad_type_0 = const()[name = tensor<string, []>("x_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_7_pad_0 = const()[name = tensor<string, []>("x_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 2560, 1, 1]> up_blocks_0_resnets_1_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(887680576)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_1_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_1_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(894234240)))];
            tensor<fp16, [2, 1280, 8, 8]> x_7_cast = conv(bias = up_blocks_0_resnets_1_conv_shortcut_bias_to_fp16, dilations = var_4189, groups = var_4090, pad = x_7_pad_0, pad_type = x_7_pad_type_0, strides = var_4187, weight = up_blocks_0_resnets_1_conv_shortcut_weight_to_fp16, x = input_253_cast);
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_151_cast = add(x = x_7_cast, y = hidden_states_149_cast);
            tensor<bool, []> input_267_interleave_0 = const()[name = tensor<string, []>("input_267_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 2560, 8, 8]> input_267_cast = concat(axis = var_4090, interleave = input_267_interleave_0, values = (hidden_states_151_cast, input_171_cast));
            tensor<int32, [5]> reshape_124_shape_0 = const()[name = tensor<string, []>("reshape_124_shape_0"), val = tensor<int32, [5]>([2, 32, 80, 8, 8])];
            tensor<fp16, [2, 32, 80, 8, 8]> reshape_124_cast = reshape(shape = reshape_124_shape_0, x = input_267_cast);
            tensor<int32, [3]> reduce_mean_93_axes_0 = const()[name = tensor<string, []>("reduce_mean_93_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_93_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_93_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_93_cast = reduce_mean(axes = reduce_mean_93_axes_0, keep_dims = reduce_mean_93_keep_dims_0, x = reshape_124_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> sub_62_cast = sub(x = reshape_124_cast, y = reduce_mean_93_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> square_31_cast = square(x = sub_62_cast);
            tensor<int32, [3]> reduce_mean_95_axes_0 = const()[name = tensor<string, []>("reduce_mean_95_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_95_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_95_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_95_cast = reduce_mean(axes = reduce_mean_95_axes_0, keep_dims = reduce_mean_95_keep_dims_0, x = square_31_cast);
            tensor<fp16, []> add_62_y_0_to_fp16 = const()[name = tensor<string, []>("add_62_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_62_cast = add(x = reduce_mean_95_cast, y = add_62_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_31_cast = sqrt(x = add_62_cast);
            tensor<fp16, [2, 32, 80, 8, 8]> real_div_31_cast = real_div(x = sub_62_cast, y = sqrt_31_cast);
            tensor<int32, [4]> reshape_125_shape_0 = const()[name = tensor<string, []>("reshape_125_shape_0"), val = tensor<int32, [4]>([2, 2560, 8, 8])];
            tensor<fp16, [2, 2560, 8, 8]> reshape_125_cast = reshape(shape = reshape_125_shape_0, x = real_div_31_cast);
            tensor<fp16, [2560]> add_63_mean_0_to_fp16 = const()[name = tensor<string, []>("add_63_mean_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(894236864)))];
            tensor<fp16, [2560]> add_63_variance_0_to_fp16 = const()[name = tensor<string, []>("add_63_variance_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(894242048)))];
            tensor<fp16, [2560]> add_63_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_63_gamma_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(894247232)))];
            tensor<fp16, [2560]> add_63_beta_0_to_fp16 = const()[name = tensor<string, []>("add_63_beta_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(894252416)))];
            tensor<fp16, []> add_63_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_63_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 2560, 8, 8]> add_63_cast = batch_norm(beta = add_63_beta_0_to_fp16, epsilon = add_63_epsilon_0_to_fp16, gamma = add_63_gamma_0_to_fp16, mean = add_63_mean_0_to_fp16, variance = add_63_variance_0_to_fp16, x = reshape_125_cast);
            tensor<fp16, [2, 2560, 8, 8]> input_271_cast = silu(x = add_63_cast);
            tensor<int32, [2]> var_4207 = const()[name = tensor<string, []>("op_4207"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4209 = const()[name = tensor<string, []>("op_4209"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_153_pad_type_0 = const()[name = tensor<string, []>("hidden_states_153_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_153_pad_0 = const()[name = tensor<string, []>("hidden_states_153_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 2560, 3, 3]> up_blocks_0_resnets_2_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(894257600)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_2_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(953240064)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_153_cast = conv(bias = up_blocks_0_resnets_2_conv1_bias_to_fp16, dilations = var_4209, groups = var_4090, pad = hidden_states_153_pad_0, pad_type = hidden_states_153_pad_type_0, strides = var_4207, weight = up_blocks_0_resnets_2_conv1_weight_to_fp16, x = input_271_cast);
            tensor<int32, [2]> var_4215 = const()[name = tensor<string, []>("op_4215"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4217 = const()[name = tensor<string, []>("op_4217"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_25_pad_type_0 = const()[name = tensor<string, []>("temb_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_25_pad_0 = const()[name = tensor<string, []>("temb_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_0_resnets_2_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(953242688)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_2_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(956519552)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_25_cast = conv(bias = up_blocks_0_resnets_2_time_emb_proj_bias_to_fp16, dilations = var_4217, groups = var_4090, pad = temb_25_pad_0, pad_type = temb_25_pad_type_0, strides = var_4215, weight = up_blocks_0_resnets_2_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_275_cast = add(x = hidden_states_153_cast, y = temb_25_cast);
            tensor<int32, [5]> reshape_128_shape_0 = const()[name = tensor<string, []>("reshape_128_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 8, 8])];
            tensor<fp16, [2, 32, 40, 8, 8]> reshape_128_cast = reshape(shape = reshape_128_shape_0, x = input_275_cast);
            tensor<int32, [3]> reduce_mean_96_axes_0 = const()[name = tensor<string, []>("reduce_mean_96_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_96_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_96_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_96_cast = reduce_mean(axes = reduce_mean_96_axes_0, keep_dims = reduce_mean_96_keep_dims_0, x = reshape_128_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> sub_64_cast = sub(x = reshape_128_cast, y = reduce_mean_96_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> square_32_cast = square(x = sub_64_cast);
            tensor<int32, [3]> reduce_mean_98_axes_0 = const()[name = tensor<string, []>("reduce_mean_98_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_98_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_98_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_98_cast = reduce_mean(axes = reduce_mean_98_axes_0, keep_dims = reduce_mean_98_keep_dims_0, x = square_32_cast);
            tensor<fp16, []> add_64_y_0_to_fp16 = const()[name = tensor<string, []>("add_64_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_64_cast = add(x = reduce_mean_98_cast, y = add_64_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_32_cast = sqrt(x = add_64_cast);
            tensor<fp16, [2, 32, 40, 8, 8]> real_div_32_cast = real_div(x = sub_64_cast, y = sqrt_32_cast);
            tensor<int32, [4]> reshape_129_shape_0 = const()[name = tensor<string, []>("reshape_129_shape_0"), val = tensor<int32, [4]>([2, 1280, 8, 8])];
            tensor<fp16, [2, 1280, 8, 8]> reshape_129_cast = reshape(shape = reshape_129_shape_0, x = real_div_32_cast);
            tensor<fp16, [1280]> add_65_mean_0_to_fp16 = const()[name = tensor<string, []>("add_65_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(956522176)))];
            tensor<fp16, [1280]> add_65_variance_0_to_fp16 = const()[name = tensor<string, []>("add_65_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(956524800)))];
            tensor<fp16, [1280]> add_65_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_65_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(956527424)))];
            tensor<fp16, [1280]> add_65_beta_0_to_fp16 = const()[name = tensor<string, []>("add_65_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(956530048)))];
            tensor<fp16, []> add_65_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_65_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 8, 8]> add_65_cast = batch_norm(beta = add_65_beta_0_to_fp16, epsilon = add_65_epsilon_0_to_fp16, gamma = add_65_gamma_0_to_fp16, mean = add_65_mean_0_to_fp16, variance = add_65_variance_0_to_fp16, x = reshape_129_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_279_cast = silu(x = add_65_cast);
            tensor<int32, [2]> var_4227 = const()[name = tensor<string, []>("op_4227"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4229 = const()[name = tensor<string, []>("op_4229"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_155_pad_type_0 = const()[name = tensor<string, []>("hidden_states_155_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_155_pad_0 = const()[name = tensor<string, []>("hidden_states_155_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_0_resnets_2_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(956532672)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_2_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(986023936)))];
            tensor<fp16, [2, 1280, 8, 8]> hidden_states_155_cast = conv(bias = up_blocks_0_resnets_2_conv2_bias_to_fp16, dilations = var_4229, groups = var_4090, pad = hidden_states_155_pad_0, pad_type = hidden_states_155_pad_type_0, strides = var_4227, weight = up_blocks_0_resnets_2_conv2_weight_to_fp16, x = input_279_cast);
            tensor<int32, [2]> var_4234 = const()[name = tensor<string, []>("op_4234"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4236 = const()[name = tensor<string, []>("op_4236"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_9_pad_type_0 = const()[name = tensor<string, []>("x_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_9_pad_0 = const()[name = tensor<string, []>("x_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 2560, 1, 1]> up_blocks_0_resnets_2_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(986026560)))];
            tensor<fp16, [1280]> up_blocks_0_resnets_2_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_resnets_2_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(992580224)))];
            tensor<fp16, [2, 1280, 8, 8]> x_9_cast = conv(bias = up_blocks_0_resnets_2_conv_shortcut_bias_to_fp16, dilations = var_4236, groups = var_4090, pad = x_9_pad_0, pad_type = x_9_pad_type_0, strides = var_4234, weight = up_blocks_0_resnets_2_conv_shortcut_weight_to_fp16, x = input_267_cast);
            tensor<fp16, [2, 1280, 8, 8]> input_281_cast = add(x = x_9_cast, y = hidden_states_155_cast);
            tensor<fp32, []> input_283_scale_factor_height_0 = const()[name = tensor<string, []>("input_283_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> input_283_scale_factor_width_0 = const()[name = tensor<string, []>("input_283_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [2, 1280, 16, 16]> input_283_cast = upsample_nearest_neighbor(scale_factor_height = input_283_scale_factor_height_0, scale_factor_width = input_283_scale_factor_width_0, x = input_281_cast);
            tensor<int32, [2]> var_4245 = const()[name = tensor<string, []>("op_4245"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4247 = const()[name = tensor<string, []>("op_4247"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_157_pad_type_0 = const()[name = tensor<string, []>("hidden_states_157_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_157_pad_0 = const()[name = tensor<string, []>("hidden_states_157_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_0_upsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_upsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(992582848)))];
            tensor<fp16, [1280]> up_blocks_0_upsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_0_upsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1022074112)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_157_cast = conv(bias = up_blocks_0_upsamplers_0_conv_bias_to_fp16, dilations = var_4247, groups = var_4090, pad = hidden_states_157_pad_0, pad_type = hidden_states_157_pad_type_0, strides = var_4245, weight = up_blocks_0_upsamplers_0_conv_weight_to_fp16, x = input_283_cast);
            tensor<bool, []> var_4267 = const()[name = tensor<string, []>("op_4267"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_4272 = const()[name = tensor<string, []>("op_4272"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_285_interleave_0 = const()[name = tensor<string, []>("input_285_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 2560, 16, 16]> input_285_cast = concat(axis = var_4272, interleave = input_285_interleave_0, values = (hidden_states_157_cast, input_169_cast));
            tensor<int32, [5]> reshape_132_shape_0 = const()[name = tensor<string, []>("reshape_132_shape_0"), val = tensor<int32, [5]>([2, 32, 80, 16, 16])];
            tensor<fp16, [2, 32, 80, 16, 16]> reshape_132_cast = reshape(shape = reshape_132_shape_0, x = input_285_cast);
            tensor<int32, [3]> reduce_mean_99_axes_0 = const()[name = tensor<string, []>("reduce_mean_99_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_99_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_99_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_99_cast = reduce_mean(axes = reduce_mean_99_axes_0, keep_dims = reduce_mean_99_keep_dims_0, x = reshape_132_cast);
            tensor<fp16, [2, 32, 80, 16, 16]> sub_66_cast = sub(x = reshape_132_cast, y = reduce_mean_99_cast);
            tensor<fp16, [2, 32, 80, 16, 16]> square_33_cast = square(x = sub_66_cast);
            tensor<int32, [3]> reduce_mean_101_axes_0 = const()[name = tensor<string, []>("reduce_mean_101_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_101_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_101_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_101_cast = reduce_mean(axes = reduce_mean_101_axes_0, keep_dims = reduce_mean_101_keep_dims_0, x = square_33_cast);
            tensor<fp16, []> add_66_y_0_to_fp16 = const()[name = tensor<string, []>("add_66_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_66_cast = add(x = reduce_mean_101_cast, y = add_66_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_33_cast = sqrt(x = add_66_cast);
            tensor<fp16, [2, 32, 80, 16, 16]> real_div_33_cast = real_div(x = sub_66_cast, y = sqrt_33_cast);
            tensor<int32, [4]> reshape_133_shape_0 = const()[name = tensor<string, []>("reshape_133_shape_0"), val = tensor<int32, [4]>([2, 2560, 16, 16])];
            tensor<fp16, [2, 2560, 16, 16]> reshape_133_cast = reshape(shape = reshape_133_shape_0, x = real_div_33_cast);
            tensor<fp16, [2560]> add_67_mean_0_to_fp16 = const()[name = tensor<string, []>("add_67_mean_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1022076736)))];
            tensor<fp16, [2560]> add_67_variance_0_to_fp16 = const()[name = tensor<string, []>("add_67_variance_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1022081920)))];
            tensor<fp16, [2560]> add_67_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_67_gamma_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1022087104)))];
            tensor<fp16, [2560]> add_67_beta_0_to_fp16 = const()[name = tensor<string, []>("add_67_beta_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1022092288)))];
            tensor<fp16, []> add_67_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_67_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 2560, 16, 16]> add_67_cast = batch_norm(beta = add_67_beta_0_to_fp16, epsilon = add_67_epsilon_0_to_fp16, gamma = add_67_gamma_0_to_fp16, mean = add_67_mean_0_to_fp16, variance = add_67_variance_0_to_fp16, x = reshape_133_cast);
            tensor<fp16, [2, 2560, 16, 16]> input_289_cast = silu(x = add_67_cast);
            tensor<int32, [2]> var_4301 = const()[name = tensor<string, []>("op_4301"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4303 = const()[name = tensor<string, []>("op_4303"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_159_pad_type_0 = const()[name = tensor<string, []>("hidden_states_159_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_159_pad_0 = const()[name = tensor<string, []>("hidden_states_159_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 2560, 3, 3]> up_blocks_1_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1022097472)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1081079936)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_159_cast = conv(bias = up_blocks_1_resnets_0_conv1_bias_to_fp16, dilations = var_4303, groups = var_4272, pad = hidden_states_159_pad_0, pad_type = hidden_states_159_pad_type_0, strides = var_4301, weight = up_blocks_1_resnets_0_conv1_weight_to_fp16, x = input_289_cast);
            tensor<int32, [2]> var_4309 = const()[name = tensor<string, []>("op_4309"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4311 = const()[name = tensor<string, []>("op_4311"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_27_pad_type_0 = const()[name = tensor<string, []>("temb_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_27_pad_0 = const()[name = tensor<string, []>("temb_27_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1081082560)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1084359424)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_27_cast = conv(bias = up_blocks_1_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_4311, groups = var_4272, pad = temb_27_pad_0, pad_type = temb_27_pad_type_0, strides = var_4309, weight = up_blocks_1_resnets_0_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_293_cast = add(x = hidden_states_159_cast, y = temb_27_cast);
            tensor<int32, [5]> reshape_136_shape_0 = const()[name = tensor<string, []>("reshape_136_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_136_cast = reshape(shape = reshape_136_shape_0, x = input_293_cast);
            tensor<int32, [3]> reduce_mean_102_axes_0 = const()[name = tensor<string, []>("reduce_mean_102_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_102_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_102_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_102_cast = reduce_mean(axes = reduce_mean_102_axes_0, keep_dims = reduce_mean_102_keep_dims_0, x = reshape_136_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_68_cast = sub(x = reshape_136_cast, y = reduce_mean_102_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_34_cast = square(x = sub_68_cast);
            tensor<int32, [3]> reduce_mean_104_axes_0 = const()[name = tensor<string, []>("reduce_mean_104_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_104_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_104_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_104_cast = reduce_mean(axes = reduce_mean_104_axes_0, keep_dims = reduce_mean_104_keep_dims_0, x = square_34_cast);
            tensor<fp16, []> add_68_y_0_to_fp16 = const()[name = tensor<string, []>("add_68_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_68_cast = add(x = reduce_mean_104_cast, y = add_68_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_34_cast = sqrt(x = add_68_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_34_cast = real_div(x = sub_68_cast, y = sqrt_34_cast);
            tensor<int32, [4]> reshape_137_shape_0 = const()[name = tensor<string, []>("reshape_137_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_137_cast = reshape(shape = reshape_137_shape_0, x = real_div_34_cast);
            tensor<fp16, [1280]> add_69_mean_0_to_fp16 = const()[name = tensor<string, []>("add_69_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1084362048)))];
            tensor<fp16, [1280]> add_69_variance_0_to_fp16 = const()[name = tensor<string, []>("add_69_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1084364672)))];
            tensor<fp16, [1280]> add_69_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_69_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1084367296)))];
            tensor<fp16, [1280]> add_69_beta_0_to_fp16 = const()[name = tensor<string, []>("add_69_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1084369920)))];
            tensor<fp16, []> add_69_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_69_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_69_cast = batch_norm(beta = add_69_beta_0_to_fp16, epsilon = add_69_epsilon_0_to_fp16, gamma = add_69_gamma_0_to_fp16, mean = add_69_mean_0_to_fp16, variance = add_69_variance_0_to_fp16, x = reshape_137_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_297_cast = silu(x = add_69_cast);
            tensor<int32, [2]> var_4321 = const()[name = tensor<string, []>("op_4321"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4323 = const()[name = tensor<string, []>("op_4323"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_161_pad_type_0 = const()[name = tensor<string, []>("hidden_states_161_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_161_pad_0 = const()[name = tensor<string, []>("hidden_states_161_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_1_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1084372544)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1113863808)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_161_cast = conv(bias = up_blocks_1_resnets_0_conv2_bias_to_fp16, dilations = var_4323, groups = var_4272, pad = hidden_states_161_pad_0, pad_type = hidden_states_161_pad_type_0, strides = var_4321, weight = up_blocks_1_resnets_0_conv2_weight_to_fp16, x = input_297_cast);
            tensor<int32, [2]> var_4328 = const()[name = tensor<string, []>("op_4328"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4330 = const()[name = tensor<string, []>("op_4330"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_11_pad_type_0 = const()[name = tensor<string, []>("x_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_11_pad_0 = const()[name = tensor<string, []>("x_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 2560, 1, 1]> up_blocks_1_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1113866432)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1120420096)))];
            tensor<fp16, [2, 1280, 16, 16]> x_11_cast = conv(bias = up_blocks_1_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_4330, groups = var_4272, pad = x_11_pad_0, pad_type = x_11_pad_type_0, strides = var_4328, weight = up_blocks_1_resnets_0_conv_shortcut_weight_to_fp16, x = input_285_cast);
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_163_cast = add(x = x_11_cast, y = hidden_states_161_cast);
            tensor<int32, [5]> reshape_140_shape_0 = const()[name = tensor<string, []>("reshape_140_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_140_cast = reshape(shape = reshape_140_shape_0, x = hidden_states_163_cast);
            tensor<int32, [3]> reduce_mean_105_axes_0 = const()[name = tensor<string, []>("reduce_mean_105_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_105_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_105_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_105_cast = reduce_mean(axes = reduce_mean_105_axes_0, keep_dims = reduce_mean_105_keep_dims_0, x = reshape_140_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_70_cast = sub(x = reshape_140_cast, y = reduce_mean_105_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_35_cast = square(x = sub_70_cast);
            tensor<int32, [3]> reduce_mean_107_axes_0 = const()[name = tensor<string, []>("reduce_mean_107_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_107_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_107_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_107_cast = reduce_mean(axes = reduce_mean_107_axes_0, keep_dims = reduce_mean_107_keep_dims_0, x = square_35_cast);
            tensor<fp16, []> add_70_y_0_to_fp16 = const()[name = tensor<string, []>("add_70_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_70_cast = add(x = reduce_mean_107_cast, y = add_70_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_35_cast = sqrt(x = add_70_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_35_cast = real_div(x = sub_70_cast, y = sqrt_35_cast);
            tensor<int32, [4]> reshape_141_shape_0 = const()[name = tensor<string, []>("reshape_141_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_141_cast = reshape(shape = reshape_141_shape_0, x = real_div_35_cast);
            tensor<fp16, [1280]> add_71_mean_0_to_fp16 = const()[name = tensor<string, []>("add_71_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1120422720)))];
            tensor<fp16, [1280]> add_71_variance_0_to_fp16 = const()[name = tensor<string, []>("add_71_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1120425344)))];
            tensor<fp16, [1280]> add_71_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_71_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1120427968)))];
            tensor<fp16, [1280]> add_71_beta_0_to_fp16 = const()[name = tensor<string, []>("add_71_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1120430592)))];
            tensor<fp16, []> add_71_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_71_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_71_cast = batch_norm(beta = add_71_beta_0_to_fp16, epsilon = add_71_epsilon_0_to_fp16, gamma = add_71_gamma_0_to_fp16, mean = add_71_mean_0_to_fp16, variance = add_71_variance_0_to_fp16, x = reshape_141_cast);
            tensor<int32, [2]> var_4350 = const()[name = tensor<string, []>("op_4350"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4352 = const()[name = tensor<string, []>("op_4352"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_165_pad_type_0 = const()[name = tensor<string, []>("hidden_states_165_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_165_pad_0 = const()[name = tensor<string, []>("hidden_states_165_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_proj_in_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1120433216)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_0_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_proj_in_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1123710080)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_165_cast = conv(bias = up_blocks_1_attentions_0_proj_in_bias_to_fp16, dilations = var_4352, groups = var_4272, pad = hidden_states_165_pad_0, pad_type = hidden_states_165_pad_type_0, strides = var_4350, weight = up_blocks_1_attentions_0_proj_in_weight_to_fp16, x = add_71_cast);
            tensor<int32, [4]> var_4357 = const()[name = tensor<string, []>("op_4357"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<fp16, [2, 1280, 1, 256]> inputs_43_cast = reshape(shape = var_4357, x = hidden_states_165_cast);
            tensor<int32, [1]> var_4367 = const()[name = tensor<string, []>("op_4367"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_43_cast = reduce_mean(axes = var_4367, keep_dims = var_4267, x = inputs_43_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_43_cast = sub(x = inputs_43_cast, y = channels_mean_43_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_43_cast = mul(x = zero_mean_43_cast, y = zero_mean_43_cast);
            tensor<int32, [1]> var_4371 = const()[name = tensor<string, []>("op_4371"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_4372_cast = reduce_mean(axes = var_4371, keep_dims = var_4267, x = zero_mean_sq_43_cast);
            tensor<fp16, []> var_4373_to_fp16 = const()[name = tensor<string, []>("op_4373_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_4374_cast = add(x = var_4372_cast, y = var_4373_to_fp16);
            tensor<fp16, []> denom_43_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_43_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_43_cast = rsqrt(epsilon = denom_43_epsilon_0_to_fp16, x = var_4374_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_43_cast = mul(x = zero_mean_43_cast, y = denom_43_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_4378_to_fp16 = const()[name = tensor<string, []>("op_4378_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1123712704)))];
            tensor<fp16, [2, 1280, 1, 256]> var_4379_cast = add(x = out_43_cast, y = var_4378_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_4381_to_fp16 = const()[name = tensor<string, []>("op_4381_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1123715328)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_167_cast = mul(x = var_4379_cast, y = var_4381_to_fp16);
            tensor<int32, [2]> var_4388 = const()[name = tensor<string, []>("op_4388"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4390 = const()[name = tensor<string, []>("op_4390"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_29_pad_type_0 = const()[name = tensor<string, []>("q_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_29_pad_0 = const()[name = tensor<string, []>("q_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1123717952)))];
            tensor<fp16, [2, 1280, 1, 256]> q_29_cast = conv(dilations = var_4390, groups = var_4272, pad = q_29_pad_0, pad_type = q_29_pad_type_0, strides = var_4388, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_167_cast);
            tensor<int32, [2]> var_4394 = const()[name = tensor<string, []>("op_4394"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4396 = const()[name = tensor<string, []>("op_4396"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_57_pad_type_0 = const()[name = tensor<string, []>("k_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_57_pad_0 = const()[name = tensor<string, []>("k_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1126994816)))];
            tensor<fp16, [2, 1280, 1, 256]> k_57_cast = conv(dilations = var_4396, groups = var_4272, pad = k_57_pad_0, pad_type = k_57_pad_type_0, strides = var_4394, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_167_cast);
            tensor<int32, [2]> var_4400 = const()[name = tensor<string, []>("op_4400"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4402 = const()[name = tensor<string, []>("op_4402"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_29_pad_type_0 = const()[name = tensor<string, []>("v_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_29_pad_0 = const()[name = tensor<string, []>("v_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1130271680)))];
            tensor<fp16, [2, 1280, 1, 256]> v_29_cast = conv(dilations = var_4402, groups = var_4272, pad = v_29_pad_0, pad_type = v_29_pad_type_0, strides = var_4400, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_167_cast);
            tensor<int32, [4]> var_4406_begin_0 = const()[name = tensor<string, []>("op_4406_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4406_end_0 = const()[name = tensor<string, []>("op_4406_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_4406_end_mask_0 = const()[name = tensor<string, []>("op_4406_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4406_cast = slice_by_index(begin = var_4406_begin_0, end = var_4406_end_0, end_mask = var_4406_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_4410_begin_0 = const()[name = tensor<string, []>("op_4410_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_4410_end_0 = const()[name = tensor<string, []>("op_4410_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_4410_end_mask_0 = const()[name = tensor<string, []>("op_4410_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4410_cast = slice_by_index(begin = var_4410_begin_0, end = var_4410_end_0, end_mask = var_4410_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_4414_begin_0 = const()[name = tensor<string, []>("op_4414_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_4414_end_0 = const()[name = tensor<string, []>("op_4414_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_4414_end_mask_0 = const()[name = tensor<string, []>("op_4414_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4414_cast = slice_by_index(begin = var_4414_begin_0, end = var_4414_end_0, end_mask = var_4414_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_4418_begin_0 = const()[name = tensor<string, []>("op_4418_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_4418_end_0 = const()[name = tensor<string, []>("op_4418_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_4418_end_mask_0 = const()[name = tensor<string, []>("op_4418_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4418_cast = slice_by_index(begin = var_4418_begin_0, end = var_4418_end_0, end_mask = var_4418_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_4422_begin_0 = const()[name = tensor<string, []>("op_4422_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_4422_end_0 = const()[name = tensor<string, []>("op_4422_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_4422_end_mask_0 = const()[name = tensor<string, []>("op_4422_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4422_cast = slice_by_index(begin = var_4422_begin_0, end = var_4422_end_0, end_mask = var_4422_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_4426_begin_0 = const()[name = tensor<string, []>("op_4426_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_4426_end_0 = const()[name = tensor<string, []>("op_4426_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_4426_end_mask_0 = const()[name = tensor<string, []>("op_4426_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4426_cast = slice_by_index(begin = var_4426_begin_0, end = var_4426_end_0, end_mask = var_4426_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_4430_begin_0 = const()[name = tensor<string, []>("op_4430_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_4430_end_0 = const()[name = tensor<string, []>("op_4430_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_4430_end_mask_0 = const()[name = tensor<string, []>("op_4430_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4430_cast = slice_by_index(begin = var_4430_begin_0, end = var_4430_end_0, end_mask = var_4430_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> var_4434_begin_0 = const()[name = tensor<string, []>("op_4434_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_4434_end_0 = const()[name = tensor<string, []>("op_4434_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_4434_end_mask_0 = const()[name = tensor<string, []>("op_4434_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4434_cast = slice_by_index(begin = var_4434_begin_0, end = var_4434_end_0, end_mask = var_4434_end_mask_0, x = q_29_cast);
            tensor<int32, [4]> k_59_perm_0 = const()[name = tensor<string, []>("k_59_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_4441_begin_0 = const()[name = tensor<string, []>("op_4441_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4441_end_0 = const()[name = tensor<string, []>("op_4441_end_0"), val = tensor<int32, [4]>([2, 256, 1, 160])];
            tensor<bool, [4]> var_4441_end_mask_0 = const()[name = tensor<string, []>("op_4441_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 1280]> transpose_17 = transpose(perm = k_59_perm_0, x = k_57_cast);
            tensor<fp16, [2, 256, 1, 160]> var_4441_cast = slice_by_index(begin = var_4441_begin_0, end = var_4441_end_0, end_mask = var_4441_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_4445_begin_0 = const()[name = tensor<string, []>("op_4445_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_4445_end_0 = const()[name = tensor<string, []>("op_4445_end_0"), val = tensor<int32, [4]>([2, 256, 1, 320])];
            tensor<bool, [4]> var_4445_end_mask_0 = const()[name = tensor<string, []>("op_4445_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4445_cast = slice_by_index(begin = var_4445_begin_0, end = var_4445_end_0, end_mask = var_4445_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_4449_begin_0 = const()[name = tensor<string, []>("op_4449_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_4449_end_0 = const()[name = tensor<string, []>("op_4449_end_0"), val = tensor<int32, [4]>([2, 256, 1, 480])];
            tensor<bool, [4]> var_4449_end_mask_0 = const()[name = tensor<string, []>("op_4449_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4449_cast = slice_by_index(begin = var_4449_begin_0, end = var_4449_end_0, end_mask = var_4449_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_4453_begin_0 = const()[name = tensor<string, []>("op_4453_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_4453_end_0 = const()[name = tensor<string, []>("op_4453_end_0"), val = tensor<int32, [4]>([2, 256, 1, 640])];
            tensor<bool, [4]> var_4453_end_mask_0 = const()[name = tensor<string, []>("op_4453_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4453_cast = slice_by_index(begin = var_4453_begin_0, end = var_4453_end_0, end_mask = var_4453_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_4457_begin_0 = const()[name = tensor<string, []>("op_4457_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_4457_end_0 = const()[name = tensor<string, []>("op_4457_end_0"), val = tensor<int32, [4]>([2, 256, 1, 800])];
            tensor<bool, [4]> var_4457_end_mask_0 = const()[name = tensor<string, []>("op_4457_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4457_cast = slice_by_index(begin = var_4457_begin_0, end = var_4457_end_0, end_mask = var_4457_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_4461_begin_0 = const()[name = tensor<string, []>("op_4461_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_4461_end_0 = const()[name = tensor<string, []>("op_4461_end_0"), val = tensor<int32, [4]>([2, 256, 1, 960])];
            tensor<bool, [4]> var_4461_end_mask_0 = const()[name = tensor<string, []>("op_4461_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4461_cast = slice_by_index(begin = var_4461_begin_0, end = var_4461_end_0, end_mask = var_4461_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_4465_begin_0 = const()[name = tensor<string, []>("op_4465_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_4465_end_0 = const()[name = tensor<string, []>("op_4465_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1120])];
            tensor<bool, [4]> var_4465_end_mask_0 = const()[name = tensor<string, []>("op_4465_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4465_cast = slice_by_index(begin = var_4465_begin_0, end = var_4465_end_0, end_mask = var_4465_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_4469_begin_0 = const()[name = tensor<string, []>("op_4469_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_4469_end_0 = const()[name = tensor<string, []>("op_4469_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1280])];
            tensor<bool, [4]> var_4469_end_mask_0 = const()[name = tensor<string, []>("op_4469_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4469_cast = slice_by_index(begin = var_4469_begin_0, end = var_4469_end_0, end_mask = var_4469_end_mask_0, x = transpose_17);
            tensor<int32, [4]> var_4471_begin_0 = const()[name = tensor<string, []>("op_4471_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4471_end_0 = const()[name = tensor<string, []>("op_4471_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_4471_end_mask_0 = const()[name = tensor<string, []>("op_4471_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4471_cast = slice_by_index(begin = var_4471_begin_0, end = var_4471_end_0, end_mask = var_4471_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_4475_begin_0 = const()[name = tensor<string, []>("op_4475_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_4475_end_0 = const()[name = tensor<string, []>("op_4475_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_4475_end_mask_0 = const()[name = tensor<string, []>("op_4475_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4475_cast = slice_by_index(begin = var_4475_begin_0, end = var_4475_end_0, end_mask = var_4475_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_4479_begin_0 = const()[name = tensor<string, []>("op_4479_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_4479_end_0 = const()[name = tensor<string, []>("op_4479_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_4479_end_mask_0 = const()[name = tensor<string, []>("op_4479_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4479_cast = slice_by_index(begin = var_4479_begin_0, end = var_4479_end_0, end_mask = var_4479_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_4483_begin_0 = const()[name = tensor<string, []>("op_4483_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_4483_end_0 = const()[name = tensor<string, []>("op_4483_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_4483_end_mask_0 = const()[name = tensor<string, []>("op_4483_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4483_cast = slice_by_index(begin = var_4483_begin_0, end = var_4483_end_0, end_mask = var_4483_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_4487_begin_0 = const()[name = tensor<string, []>("op_4487_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_4487_end_0 = const()[name = tensor<string, []>("op_4487_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_4487_end_mask_0 = const()[name = tensor<string, []>("op_4487_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4487_cast = slice_by_index(begin = var_4487_begin_0, end = var_4487_end_0, end_mask = var_4487_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_4491_begin_0 = const()[name = tensor<string, []>("op_4491_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_4491_end_0 = const()[name = tensor<string, []>("op_4491_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_4491_end_mask_0 = const()[name = tensor<string, []>("op_4491_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4491_cast = slice_by_index(begin = var_4491_begin_0, end = var_4491_end_0, end_mask = var_4491_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_4495_begin_0 = const()[name = tensor<string, []>("op_4495_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_4495_end_0 = const()[name = tensor<string, []>("op_4495_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_4495_end_mask_0 = const()[name = tensor<string, []>("op_4495_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4495_cast = slice_by_index(begin = var_4495_begin_0, end = var_4495_end_0, end_mask = var_4495_end_mask_0, x = v_29_cast);
            tensor<int32, [4]> var_4499_begin_0 = const()[name = tensor<string, []>("op_4499_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_4499_end_0 = const()[name = tensor<string, []>("op_4499_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_4499_end_mask_0 = const()[name = tensor<string, []>("op_4499_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4499_cast = slice_by_index(begin = var_4499_begin_0, end = var_4499_end_0, end_mask = var_4499_end_mask_0, x = v_29_cast);
            tensor<string, []> var_4503_equation_0 = const()[name = tensor<string, []>("op_4503_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_4503_cast = einsum(equation = var_4503_equation_0, values = (var_4441_cast, var_4406_cast));
            tensor<fp16, []> var_4504_to_fp16 = const()[name = tensor<string, []>("op_4504_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_225_cast = mul(x = var_4503_cast, y = var_4504_to_fp16);
            tensor<string, []> var_4507_equation_0 = const()[name = tensor<string, []>("op_4507_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_4507_cast = einsum(equation = var_4507_equation_0, values = (var_4445_cast, var_4410_cast));
            tensor<fp16, []> var_4508_to_fp16 = const()[name = tensor<string, []>("op_4508_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_227_cast = mul(x = var_4507_cast, y = var_4508_to_fp16);
            tensor<string, []> var_4511_equation_0 = const()[name = tensor<string, []>("op_4511_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_4511_cast = einsum(equation = var_4511_equation_0, values = (var_4449_cast, var_4414_cast));
            tensor<fp16, []> var_4512_to_fp16 = const()[name = tensor<string, []>("op_4512_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_229_cast = mul(x = var_4511_cast, y = var_4512_to_fp16);
            tensor<string, []> var_4515_equation_0 = const()[name = tensor<string, []>("op_4515_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_4515_cast = einsum(equation = var_4515_equation_0, values = (var_4453_cast, var_4418_cast));
            tensor<fp16, []> var_4516_to_fp16 = const()[name = tensor<string, []>("op_4516_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_231_cast = mul(x = var_4515_cast, y = var_4516_to_fp16);
            tensor<string, []> var_4519_equation_0 = const()[name = tensor<string, []>("op_4519_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_4519_cast = einsum(equation = var_4519_equation_0, values = (var_4457_cast, var_4422_cast));
            tensor<fp16, []> var_4520_to_fp16 = const()[name = tensor<string, []>("op_4520_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_233_cast = mul(x = var_4519_cast, y = var_4520_to_fp16);
            tensor<string, []> var_4523_equation_0 = const()[name = tensor<string, []>("op_4523_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_4523_cast = einsum(equation = var_4523_equation_0, values = (var_4461_cast, var_4426_cast));
            tensor<fp16, []> var_4524_to_fp16 = const()[name = tensor<string, []>("op_4524_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_235_cast = mul(x = var_4523_cast, y = var_4524_to_fp16);
            tensor<string, []> var_4527_equation_0 = const()[name = tensor<string, []>("op_4527_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_4527_cast = einsum(equation = var_4527_equation_0, values = (var_4465_cast, var_4430_cast));
            tensor<fp16, []> var_4528_to_fp16 = const()[name = tensor<string, []>("op_4528_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_237_cast = mul(x = var_4527_cast, y = var_4528_to_fp16);
            tensor<string, []> var_4531_equation_0 = const()[name = tensor<string, []>("op_4531_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_4531_cast = einsum(equation = var_4531_equation_0, values = (var_4469_cast, var_4434_cast));
            tensor<fp16, []> var_4532_to_fp16 = const()[name = tensor<string, []>("op_4532_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_239_cast = mul(x = var_4531_cast, y = var_4532_to_fp16);
            tensor<fp16, [2, 256, 1, 256]> var_4534_cast = softmax(axis = var_4272, x = aw_225_cast);
            tensor<fp16, [2, 256, 1, 256]> var_4535_cast = softmax(axis = var_4272, x = aw_227_cast);
            tensor<fp16, [2, 256, 1, 256]> var_4536_cast = softmax(axis = var_4272, x = aw_229_cast);
            tensor<fp16, [2, 256, 1, 256]> var_4537_cast = softmax(axis = var_4272, x = aw_231_cast);
            tensor<fp16, [2, 256, 1, 256]> var_4538_cast = softmax(axis = var_4272, x = aw_233_cast);
            tensor<fp16, [2, 256, 1, 256]> var_4539_cast = softmax(axis = var_4272, x = aw_235_cast);
            tensor<fp16, [2, 256, 1, 256]> var_4540_cast = softmax(axis = var_4272, x = aw_237_cast);
            tensor<fp16, [2, 256, 1, 256]> var_4541_cast = softmax(axis = var_4272, x = aw_239_cast);
            tensor<string, []> var_4543_equation_0 = const()[name = tensor<string, []>("op_4543_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4543_cast = einsum(equation = var_4543_equation_0, values = (var_4471_cast, var_4534_cast));
            tensor<string, []> var_4545_equation_0 = const()[name = tensor<string, []>("op_4545_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4545_cast = einsum(equation = var_4545_equation_0, values = (var_4475_cast, var_4535_cast));
            tensor<string, []> var_4547_equation_0 = const()[name = tensor<string, []>("op_4547_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4547_cast = einsum(equation = var_4547_equation_0, values = (var_4479_cast, var_4536_cast));
            tensor<string, []> var_4549_equation_0 = const()[name = tensor<string, []>("op_4549_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4549_cast = einsum(equation = var_4549_equation_0, values = (var_4483_cast, var_4537_cast));
            tensor<string, []> var_4551_equation_0 = const()[name = tensor<string, []>("op_4551_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4551_cast = einsum(equation = var_4551_equation_0, values = (var_4487_cast, var_4538_cast));
            tensor<string, []> var_4553_equation_0 = const()[name = tensor<string, []>("op_4553_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4553_cast = einsum(equation = var_4553_equation_0, values = (var_4491_cast, var_4539_cast));
            tensor<string, []> var_4555_equation_0 = const()[name = tensor<string, []>("op_4555_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4555_cast = einsum(equation = var_4555_equation_0, values = (var_4495_cast, var_4540_cast));
            tensor<string, []> var_4557_equation_0 = const()[name = tensor<string, []>("op_4557_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4557_cast = einsum(equation = var_4557_equation_0, values = (var_4499_cast, var_4541_cast));
            tensor<bool, []> input_301_interleave_0 = const()[name = tensor<string, []>("input_301_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_301_cast = concat(axis = var_4272, interleave = input_301_interleave_0, values = (var_4543_cast, var_4545_cast, var_4547_cast, var_4549_cast, var_4551_cast, var_4553_cast, var_4555_cast, var_4557_cast));
            tensor<int32, [2]> var_4563 = const()[name = tensor<string, []>("op_4563"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4565 = const()[name = tensor<string, []>("op_4565"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_4567_pad_type_0 = const()[name = tensor<string, []>("op_4567_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_4567_pad_0 = const()[name = tensor<string, []>("op_4567_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1133548544)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1136825408)))];
            tensor<fp16, [2, 1280, 1, 256]> var_4567_cast = conv(bias = up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_4565, groups = var_4272, pad = var_4567_pad_0, pad_type = var_4567_pad_type_0, strides = var_4563, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_301_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_45_cast = add(x = var_4567_cast, y = inputs_43_cast);
            tensor<int32, [1]> var_4571 = const()[name = tensor<string, []>("op_4571"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_45_cast = reduce_mean(axes = var_4571, keep_dims = var_4267, x = inputs_45_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_45_cast = sub(x = inputs_45_cast, y = channels_mean_45_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_45_cast = mul(x = zero_mean_45_cast, y = zero_mean_45_cast);
            tensor<int32, [1]> var_4575 = const()[name = tensor<string, []>("op_4575"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_4576_cast = reduce_mean(axes = var_4575, keep_dims = var_4267, x = zero_mean_sq_45_cast);
            tensor<fp16, []> var_4577_to_fp16 = const()[name = tensor<string, []>("op_4577_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_4578_cast = add(x = var_4576_cast, y = var_4577_to_fp16);
            tensor<fp16, []> denom_45_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_45_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_45_cast = rsqrt(epsilon = denom_45_epsilon_0_to_fp16, x = var_4578_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_45_cast = mul(x = zero_mean_45_cast, y = denom_45_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_4582_to_fp16 = const()[name = tensor<string, []>("op_4582_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1136828032)))];
            tensor<fp16, [2, 1280, 1, 256]> var_4583_cast = add(x = out_45_cast, y = var_4582_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_4585_to_fp16 = const()[name = tensor<string, []>("op_4585_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1136830656)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_169_cast = mul(x = var_4583_cast, y = var_4585_to_fp16);
            tensor<int32, [2]> var_4592 = const()[name = tensor<string, []>("op_4592"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4594 = const()[name = tensor<string, []>("op_4594"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_31_pad_type_0 = const()[name = tensor<string, []>("q_31_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_31_pad_0 = const()[name = tensor<string, []>("q_31_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1136833280)))];
            tensor<fp16, [2, 1280, 1, 256]> q_31_cast = conv(dilations = var_4594, groups = var_4272, pad = q_31_pad_0, pad_type = q_31_pad_type_0, strides = var_4592, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_169_cast);
            tensor<int32, [2]> var_4598 = const()[name = tensor<string, []>("op_4598"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4600 = const()[name = tensor<string, []>("op_4600"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_61_pad_type_0 = const()[name = tensor<string, []>("k_61_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_61_pad_0 = const()[name = tensor<string, []>("k_61_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1140110144)))];
            tensor<fp16, [2, 1280, 1, 77]> k_61_cast = conv(dilations = var_4600, groups = var_4272, pad = k_61_pad_0, pad_type = k_61_pad_type_0, strides = var_4598, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_4604 = const()[name = tensor<string, []>("op_4604"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4606 = const()[name = tensor<string, []>("op_4606"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_31_pad_type_0 = const()[name = tensor<string, []>("v_31_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_31_pad_0 = const()[name = tensor<string, []>("v_31_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1142076288)))];
            tensor<fp16, [2, 1280, 1, 77]> v_31_cast = conv(dilations = var_4606, groups = var_4272, pad = v_31_pad_0, pad_type = v_31_pad_type_0, strides = var_4604, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_4610_begin_0 = const()[name = tensor<string, []>("op_4610_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4610_end_0 = const()[name = tensor<string, []>("op_4610_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_4610_end_mask_0 = const()[name = tensor<string, []>("op_4610_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4610_cast = slice_by_index(begin = var_4610_begin_0, end = var_4610_end_0, end_mask = var_4610_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_4614_begin_0 = const()[name = tensor<string, []>("op_4614_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_4614_end_0 = const()[name = tensor<string, []>("op_4614_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_4614_end_mask_0 = const()[name = tensor<string, []>("op_4614_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4614_cast = slice_by_index(begin = var_4614_begin_0, end = var_4614_end_0, end_mask = var_4614_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_4618_begin_0 = const()[name = tensor<string, []>("op_4618_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_4618_end_0 = const()[name = tensor<string, []>("op_4618_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_4618_end_mask_0 = const()[name = tensor<string, []>("op_4618_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4618_cast = slice_by_index(begin = var_4618_begin_0, end = var_4618_end_0, end_mask = var_4618_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_4622_begin_0 = const()[name = tensor<string, []>("op_4622_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_4622_end_0 = const()[name = tensor<string, []>("op_4622_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_4622_end_mask_0 = const()[name = tensor<string, []>("op_4622_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4622_cast = slice_by_index(begin = var_4622_begin_0, end = var_4622_end_0, end_mask = var_4622_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_4626_begin_0 = const()[name = tensor<string, []>("op_4626_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_4626_end_0 = const()[name = tensor<string, []>("op_4626_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_4626_end_mask_0 = const()[name = tensor<string, []>("op_4626_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4626_cast = slice_by_index(begin = var_4626_begin_0, end = var_4626_end_0, end_mask = var_4626_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_4630_begin_0 = const()[name = tensor<string, []>("op_4630_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_4630_end_0 = const()[name = tensor<string, []>("op_4630_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_4630_end_mask_0 = const()[name = tensor<string, []>("op_4630_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4630_cast = slice_by_index(begin = var_4630_begin_0, end = var_4630_end_0, end_mask = var_4630_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_4634_begin_0 = const()[name = tensor<string, []>("op_4634_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_4634_end_0 = const()[name = tensor<string, []>("op_4634_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_4634_end_mask_0 = const()[name = tensor<string, []>("op_4634_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4634_cast = slice_by_index(begin = var_4634_begin_0, end = var_4634_end_0, end_mask = var_4634_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> var_4638_begin_0 = const()[name = tensor<string, []>("op_4638_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_4638_end_0 = const()[name = tensor<string, []>("op_4638_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_4638_end_mask_0 = const()[name = tensor<string, []>("op_4638_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4638_cast = slice_by_index(begin = var_4638_begin_0, end = var_4638_end_0, end_mask = var_4638_end_mask_0, x = q_31_cast);
            tensor<int32, [4]> k_63_perm_0 = const()[name = tensor<string, []>("k_63_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_4645_begin_0 = const()[name = tensor<string, []>("op_4645_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4645_end_0 = const()[name = tensor<string, []>("op_4645_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_4645_end_mask_0 = const()[name = tensor<string, []>("op_4645_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 1280]> transpose_16 = transpose(perm = k_63_perm_0, x = k_61_cast);
            tensor<fp16, [2, 77, 1, 160]> var_4645_cast = slice_by_index(begin = var_4645_begin_0, end = var_4645_end_0, end_mask = var_4645_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_4649_begin_0 = const()[name = tensor<string, []>("op_4649_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_4649_end_0 = const()[name = tensor<string, []>("op_4649_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_4649_end_mask_0 = const()[name = tensor<string, []>("op_4649_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_4649_cast = slice_by_index(begin = var_4649_begin_0, end = var_4649_end_0, end_mask = var_4649_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_4653_begin_0 = const()[name = tensor<string, []>("op_4653_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_4653_end_0 = const()[name = tensor<string, []>("op_4653_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_4653_end_mask_0 = const()[name = tensor<string, []>("op_4653_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_4653_cast = slice_by_index(begin = var_4653_begin_0, end = var_4653_end_0, end_mask = var_4653_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_4657_begin_0 = const()[name = tensor<string, []>("op_4657_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_4657_end_0 = const()[name = tensor<string, []>("op_4657_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_4657_end_mask_0 = const()[name = tensor<string, []>("op_4657_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_4657_cast = slice_by_index(begin = var_4657_begin_0, end = var_4657_end_0, end_mask = var_4657_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_4661_begin_0 = const()[name = tensor<string, []>("op_4661_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_4661_end_0 = const()[name = tensor<string, []>("op_4661_end_0"), val = tensor<int32, [4]>([2, 77, 1, 800])];
            tensor<bool, [4]> var_4661_end_mask_0 = const()[name = tensor<string, []>("op_4661_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_4661_cast = slice_by_index(begin = var_4661_begin_0, end = var_4661_end_0, end_mask = var_4661_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_4665_begin_0 = const()[name = tensor<string, []>("op_4665_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_4665_end_0 = const()[name = tensor<string, []>("op_4665_end_0"), val = tensor<int32, [4]>([2, 77, 1, 960])];
            tensor<bool, [4]> var_4665_end_mask_0 = const()[name = tensor<string, []>("op_4665_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_4665_cast = slice_by_index(begin = var_4665_begin_0, end = var_4665_end_0, end_mask = var_4665_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_4669_begin_0 = const()[name = tensor<string, []>("op_4669_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_4669_end_0 = const()[name = tensor<string, []>("op_4669_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1120])];
            tensor<bool, [4]> var_4669_end_mask_0 = const()[name = tensor<string, []>("op_4669_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_4669_cast = slice_by_index(begin = var_4669_begin_0, end = var_4669_end_0, end_mask = var_4669_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_4673_begin_0 = const()[name = tensor<string, []>("op_4673_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_4673_end_0 = const()[name = tensor<string, []>("op_4673_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1280])];
            tensor<bool, [4]> var_4673_end_mask_0 = const()[name = tensor<string, []>("op_4673_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_4673_cast = slice_by_index(begin = var_4673_begin_0, end = var_4673_end_0, end_mask = var_4673_end_mask_0, x = transpose_16);
            tensor<int32, [4]> var_4675_begin_0 = const()[name = tensor<string, []>("op_4675_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4675_end_0 = const()[name = tensor<string, []>("op_4675_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_4675_end_mask_0 = const()[name = tensor<string, []>("op_4675_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_4675_cast = slice_by_index(begin = var_4675_begin_0, end = var_4675_end_0, end_mask = var_4675_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_4679_begin_0 = const()[name = tensor<string, []>("op_4679_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_4679_end_0 = const()[name = tensor<string, []>("op_4679_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_4679_end_mask_0 = const()[name = tensor<string, []>("op_4679_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_4679_cast = slice_by_index(begin = var_4679_begin_0, end = var_4679_end_0, end_mask = var_4679_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_4683_begin_0 = const()[name = tensor<string, []>("op_4683_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_4683_end_0 = const()[name = tensor<string, []>("op_4683_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_4683_end_mask_0 = const()[name = tensor<string, []>("op_4683_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_4683_cast = slice_by_index(begin = var_4683_begin_0, end = var_4683_end_0, end_mask = var_4683_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_4687_begin_0 = const()[name = tensor<string, []>("op_4687_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_4687_end_0 = const()[name = tensor<string, []>("op_4687_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_4687_end_mask_0 = const()[name = tensor<string, []>("op_4687_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_4687_cast = slice_by_index(begin = var_4687_begin_0, end = var_4687_end_0, end_mask = var_4687_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_4691_begin_0 = const()[name = tensor<string, []>("op_4691_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_4691_end_0 = const()[name = tensor<string, []>("op_4691_end_0"), val = tensor<int32, [4]>([2, 800, 1, 77])];
            tensor<bool, [4]> var_4691_end_mask_0 = const()[name = tensor<string, []>("op_4691_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_4691_cast = slice_by_index(begin = var_4691_begin_0, end = var_4691_end_0, end_mask = var_4691_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_4695_begin_0 = const()[name = tensor<string, []>("op_4695_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_4695_end_0 = const()[name = tensor<string, []>("op_4695_end_0"), val = tensor<int32, [4]>([2, 960, 1, 77])];
            tensor<bool, [4]> var_4695_end_mask_0 = const()[name = tensor<string, []>("op_4695_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_4695_cast = slice_by_index(begin = var_4695_begin_0, end = var_4695_end_0, end_mask = var_4695_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_4699_begin_0 = const()[name = tensor<string, []>("op_4699_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_4699_end_0 = const()[name = tensor<string, []>("op_4699_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 77])];
            tensor<bool, [4]> var_4699_end_mask_0 = const()[name = tensor<string, []>("op_4699_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_4699_cast = slice_by_index(begin = var_4699_begin_0, end = var_4699_end_0, end_mask = var_4699_end_mask_0, x = v_31_cast);
            tensor<int32, [4]> var_4703_begin_0 = const()[name = tensor<string, []>("op_4703_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_4703_end_0 = const()[name = tensor<string, []>("op_4703_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 77])];
            tensor<bool, [4]> var_4703_end_mask_0 = const()[name = tensor<string, []>("op_4703_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_4703_cast = slice_by_index(begin = var_4703_begin_0, end = var_4703_end_0, end_mask = var_4703_end_mask_0, x = v_31_cast);
            tensor<string, []> var_4707_equation_0 = const()[name = tensor<string, []>("op_4707_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4707_cast = einsum(equation = var_4707_equation_0, values = (var_4645_cast, var_4610_cast));
            tensor<fp16, []> var_4708_to_fp16 = const()[name = tensor<string, []>("op_4708_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_241_cast = mul(x = var_4707_cast, y = var_4708_to_fp16);
            tensor<string, []> var_4711_equation_0 = const()[name = tensor<string, []>("op_4711_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4711_cast = einsum(equation = var_4711_equation_0, values = (var_4649_cast, var_4614_cast));
            tensor<fp16, []> var_4712_to_fp16 = const()[name = tensor<string, []>("op_4712_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_243_cast = mul(x = var_4711_cast, y = var_4712_to_fp16);
            tensor<string, []> var_4715_equation_0 = const()[name = tensor<string, []>("op_4715_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4715_cast = einsum(equation = var_4715_equation_0, values = (var_4653_cast, var_4618_cast));
            tensor<fp16, []> var_4716_to_fp16 = const()[name = tensor<string, []>("op_4716_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_245_cast = mul(x = var_4715_cast, y = var_4716_to_fp16);
            tensor<string, []> var_4719_equation_0 = const()[name = tensor<string, []>("op_4719_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4719_cast = einsum(equation = var_4719_equation_0, values = (var_4657_cast, var_4622_cast));
            tensor<fp16, []> var_4720_to_fp16 = const()[name = tensor<string, []>("op_4720_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_247_cast = mul(x = var_4719_cast, y = var_4720_to_fp16);
            tensor<string, []> var_4723_equation_0 = const()[name = tensor<string, []>("op_4723_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4723_cast = einsum(equation = var_4723_equation_0, values = (var_4661_cast, var_4626_cast));
            tensor<fp16, []> var_4724_to_fp16 = const()[name = tensor<string, []>("op_4724_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_249_cast = mul(x = var_4723_cast, y = var_4724_to_fp16);
            tensor<string, []> var_4727_equation_0 = const()[name = tensor<string, []>("op_4727_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4727_cast = einsum(equation = var_4727_equation_0, values = (var_4665_cast, var_4630_cast));
            tensor<fp16, []> var_4728_to_fp16 = const()[name = tensor<string, []>("op_4728_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_251_cast = mul(x = var_4727_cast, y = var_4728_to_fp16);
            tensor<string, []> var_4731_equation_0 = const()[name = tensor<string, []>("op_4731_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4731_cast = einsum(equation = var_4731_equation_0, values = (var_4669_cast, var_4634_cast));
            tensor<fp16, []> var_4732_to_fp16 = const()[name = tensor<string, []>("op_4732_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_253_cast = mul(x = var_4731_cast, y = var_4732_to_fp16);
            tensor<string, []> var_4735_equation_0 = const()[name = tensor<string, []>("op_4735_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_4735_cast = einsum(equation = var_4735_equation_0, values = (var_4673_cast, var_4638_cast));
            tensor<fp16, []> var_4736_to_fp16 = const()[name = tensor<string, []>("op_4736_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_255_cast = mul(x = var_4735_cast, y = var_4736_to_fp16);
            tensor<fp16, [2, 77, 1, 256]> var_4738_cast = softmax(axis = var_4272, x = aw_241_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4739_cast = softmax(axis = var_4272, x = aw_243_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4740_cast = softmax(axis = var_4272, x = aw_245_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4741_cast = softmax(axis = var_4272, x = aw_247_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4742_cast = softmax(axis = var_4272, x = aw_249_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4743_cast = softmax(axis = var_4272, x = aw_251_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4744_cast = softmax(axis = var_4272, x = aw_253_cast);
            tensor<fp16, [2, 77, 1, 256]> var_4745_cast = softmax(axis = var_4272, x = aw_255_cast);
            tensor<string, []> var_4747_equation_0 = const()[name = tensor<string, []>("op_4747_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4747_cast = einsum(equation = var_4747_equation_0, values = (var_4675_cast, var_4738_cast));
            tensor<string, []> var_4749_equation_0 = const()[name = tensor<string, []>("op_4749_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4749_cast = einsum(equation = var_4749_equation_0, values = (var_4679_cast, var_4739_cast));
            tensor<string, []> var_4751_equation_0 = const()[name = tensor<string, []>("op_4751_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4751_cast = einsum(equation = var_4751_equation_0, values = (var_4683_cast, var_4740_cast));
            tensor<string, []> var_4753_equation_0 = const()[name = tensor<string, []>("op_4753_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4753_cast = einsum(equation = var_4753_equation_0, values = (var_4687_cast, var_4741_cast));
            tensor<string, []> var_4755_equation_0 = const()[name = tensor<string, []>("op_4755_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4755_cast = einsum(equation = var_4755_equation_0, values = (var_4691_cast, var_4742_cast));
            tensor<string, []> var_4757_equation_0 = const()[name = tensor<string, []>("op_4757_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4757_cast = einsum(equation = var_4757_equation_0, values = (var_4695_cast, var_4743_cast));
            tensor<string, []> var_4759_equation_0 = const()[name = tensor<string, []>("op_4759_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4759_cast = einsum(equation = var_4759_equation_0, values = (var_4699_cast, var_4744_cast));
            tensor<string, []> var_4761_equation_0 = const()[name = tensor<string, []>("op_4761_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_4761_cast = einsum(equation = var_4761_equation_0, values = (var_4703_cast, var_4745_cast));
            tensor<bool, []> input_303_interleave_0 = const()[name = tensor<string, []>("input_303_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_303_cast = concat(axis = var_4272, interleave = input_303_interleave_0, values = (var_4747_cast, var_4749_cast, var_4751_cast, var_4753_cast, var_4755_cast, var_4757_cast, var_4759_cast, var_4761_cast));
            tensor<int32, [2]> var_4767 = const()[name = tensor<string, []>("op_4767"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4769 = const()[name = tensor<string, []>("op_4769"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_4771_pad_type_0 = const()[name = tensor<string, []>("op_4771_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_4771_pad_0 = const()[name = tensor<string, []>("op_4771_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1144042432)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1147319296)))];
            tensor<fp16, [2, 1280, 1, 256]> var_4771_cast = conv(bias = up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_4769, groups = var_4272, pad = var_4771_pad_0, pad_type = var_4771_pad_type_0, strides = var_4767, weight = up_blocks_1_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_303_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_47_cast = add(x = var_4771_cast, y = inputs_45_cast);
            tensor<int32, [1]> var_4775 = const()[name = tensor<string, []>("op_4775"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_47_cast = reduce_mean(axes = var_4775, keep_dims = var_4267, x = inputs_47_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_47_cast = sub(x = inputs_47_cast, y = channels_mean_47_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_47_cast = mul(x = zero_mean_47_cast, y = zero_mean_47_cast);
            tensor<int32, [1]> var_4779 = const()[name = tensor<string, []>("op_4779"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_4780_cast = reduce_mean(axes = var_4779, keep_dims = var_4267, x = zero_mean_sq_47_cast);
            tensor<fp16, []> var_4781_to_fp16 = const()[name = tensor<string, []>("op_4781_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_4782_cast = add(x = var_4780_cast, y = var_4781_to_fp16);
            tensor<fp16, []> denom_47_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_47_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_47_cast = rsqrt(epsilon = denom_47_epsilon_0_to_fp16, x = var_4782_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_47_cast = mul(x = zero_mean_47_cast, y = denom_47_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_4786_to_fp16 = const()[name = tensor<string, []>("op_4786_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1147321920)))];
            tensor<fp16, [2, 1280, 1, 256]> var_4787_cast = add(x = out_47_cast, y = var_4786_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_4789_to_fp16 = const()[name = tensor<string, []>("op_4789_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1147324544)))];
            tensor<fp16, [2, 1280, 1, 256]> input_305_cast = mul(x = var_4787_cast, y = var_4789_to_fp16);
            tensor<int32, [2]> var_4797 = const()[name = tensor<string, []>("op_4797"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4799 = const()[name = tensor<string, []>("op_4799"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_4801_pad_type_0 = const()[name = tensor<string, []>("op_4801_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_4801_pad_0 = const()[name = tensor<string, []>("op_4801_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [10240, 1280, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [10240, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1147327168)))];
            tensor<fp16, [10240]> up_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [10240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1173541632)))];
            tensor<fp16, [2, 10240, 1, 256]> var_4801_cast = conv(bias = up_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_4799, groups = var_4272, pad = var_4801_pad_0, pad_type = var_4801_pad_type_0, strides = var_4797, weight = up_blocks_1_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_305_cast);
            tensor<int32, [2]> var_4802_split_sizes_0 = const()[name = tensor<string, []>("op_4802_split_sizes_0"), val = tensor<int32, [2]>([5120, 5120])];
            tensor<int32, []> var_4802_axis_0 = const()[name = tensor<string, []>("op_4802_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 5120, 1, 256]> var_4802_cast_0, tensor<fp16, [2, 5120, 1, 256]> var_4802_cast_1 = split(axis = var_4802_axis_0, split_sizes = var_4802_split_sizes_0, x = var_4801_cast);
            tensor<string, []> var_4804_mode_0 = const()[name = tensor<string, []>("op_4804_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 5120, 1, 256]> var_4804_cast = gelu(mode = var_4804_mode_0, x = var_4802_cast_1);
            tensor<fp16, [2, 5120, 1, 256]> input_307_cast = mul(x = var_4802_cast_0, y = var_4804_cast);
            tensor<int32, [2]> var_4808 = const()[name = tensor<string, []>("op_4808"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4810 = const()[name = tensor<string, []>("op_4810"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_4812_pad_type_0 = const()[name = tensor<string, []>("op_4812_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_4812_pad_0 = const()[name = tensor<string, []>("op_4812_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 5120, 1, 1]> up_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1173562176)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1186669440)))];
            tensor<fp16, [2, 1280, 1, 256]> var_4812_cast = conv(bias = up_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_4810, groups = var_4272, pad = var_4812_pad_0, pad_type = var_4812_pad_type_0, strides = var_4808, weight = up_blocks_1_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_307_cast);
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_173_cast = add(x = var_4812_cast, y = inputs_47_cast);
            tensor<int32, [4]> var_4814 = const()[name = tensor<string, []>("op_4814"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> input_309_cast = reshape(shape = var_4814, x = hidden_states_173_cast);
            tensor<int32, [2]> var_4818 = const()[name = tensor<string, []>("op_4818"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4820 = const()[name = tensor<string, []>("op_4820"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_175_pad_type_0 = const()[name = tensor<string, []>("hidden_states_175_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_175_pad_0 = const()[name = tensor<string, []>("hidden_states_175_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_0_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_proj_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1186672064)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_0_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_0_proj_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1189948928)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_175_cast = conv(bias = up_blocks_1_attentions_0_proj_out_bias_to_fp16, dilations = var_4820, groups = var_4272, pad = hidden_states_175_pad_0, pad_type = hidden_states_175_pad_type_0, strides = var_4818, weight = up_blocks_1_attentions_0_proj_out_weight_to_fp16, x = input_309_cast);
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_177_cast = add(x = hidden_states_175_cast, y = hidden_states_163_cast);
            tensor<bool, []> input_311_interleave_0 = const()[name = tensor<string, []>("input_311_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 2560, 16, 16]> input_311_cast = concat(axis = var_4272, interleave = input_311_interleave_0, values = (hidden_states_177_cast, input_143_cast));
            tensor<int32, [5]> reshape_144_shape_0 = const()[name = tensor<string, []>("reshape_144_shape_0"), val = tensor<int32, [5]>([2, 32, 80, 16, 16])];
            tensor<fp16, [2, 32, 80, 16, 16]> reshape_144_cast = reshape(shape = reshape_144_shape_0, x = input_311_cast);
            tensor<int32, [3]> reduce_mean_108_axes_0 = const()[name = tensor<string, []>("reduce_mean_108_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_108_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_108_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_108_cast = reduce_mean(axes = reduce_mean_108_axes_0, keep_dims = reduce_mean_108_keep_dims_0, x = reshape_144_cast);
            tensor<fp16, [2, 32, 80, 16, 16]> sub_72_cast = sub(x = reshape_144_cast, y = reduce_mean_108_cast);
            tensor<fp16, [2, 32, 80, 16, 16]> square_36_cast = square(x = sub_72_cast);
            tensor<int32, [3]> reduce_mean_110_axes_0 = const()[name = tensor<string, []>("reduce_mean_110_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_110_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_110_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_110_cast = reduce_mean(axes = reduce_mean_110_axes_0, keep_dims = reduce_mean_110_keep_dims_0, x = square_36_cast);
            tensor<fp16, []> add_72_y_0_to_fp16 = const()[name = tensor<string, []>("add_72_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_72_cast = add(x = reduce_mean_110_cast, y = add_72_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_36_cast = sqrt(x = add_72_cast);
            tensor<fp16, [2, 32, 80, 16, 16]> real_div_36_cast = real_div(x = sub_72_cast, y = sqrt_36_cast);
            tensor<int32, [4]> reshape_145_shape_0 = const()[name = tensor<string, []>("reshape_145_shape_0"), val = tensor<int32, [4]>([2, 2560, 16, 16])];
            tensor<fp16, [2, 2560, 16, 16]> reshape_145_cast = reshape(shape = reshape_145_shape_0, x = real_div_36_cast);
            tensor<fp16, [2560]> add_73_mean_0_to_fp16 = const()[name = tensor<string, []>("add_73_mean_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1189951552)))];
            tensor<fp16, [2560]> add_73_variance_0_to_fp16 = const()[name = tensor<string, []>("add_73_variance_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1189956736)))];
            tensor<fp16, [2560]> add_73_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_73_gamma_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1189961920)))];
            tensor<fp16, [2560]> add_73_beta_0_to_fp16 = const()[name = tensor<string, []>("add_73_beta_0_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1189967104)))];
            tensor<fp16, []> add_73_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_73_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 2560, 16, 16]> add_73_cast = batch_norm(beta = add_73_beta_0_to_fp16, epsilon = add_73_epsilon_0_to_fp16, gamma = add_73_gamma_0_to_fp16, mean = add_73_mean_0_to_fp16, variance = add_73_variance_0_to_fp16, x = reshape_145_cast);
            tensor<fp16, [2, 2560, 16, 16]> input_315_cast = silu(x = add_73_cast);
            tensor<int32, [2]> var_4838 = const()[name = tensor<string, []>("op_4838"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4840 = const()[name = tensor<string, []>("op_4840"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_179_pad_type_0 = const()[name = tensor<string, []>("hidden_states_179_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_179_pad_0 = const()[name = tensor<string, []>("hidden_states_179_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 2560, 3, 3]> up_blocks_1_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1189972288)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1248954752)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_179_cast = conv(bias = up_blocks_1_resnets_1_conv1_bias_to_fp16, dilations = var_4840, groups = var_4272, pad = hidden_states_179_pad_0, pad_type = hidden_states_179_pad_type_0, strides = var_4838, weight = up_blocks_1_resnets_1_conv1_weight_to_fp16, x = input_315_cast);
            tensor<int32, [2]> var_4846 = const()[name = tensor<string, []>("op_4846"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4848 = const()[name = tensor<string, []>("op_4848"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_29_pad_type_0 = const()[name = tensor<string, []>("temb_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_29_pad_0 = const()[name = tensor<string, []>("temb_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1248957376)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1252234240)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_29_cast = conv(bias = up_blocks_1_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_4848, groups = var_4272, pad = temb_29_pad_0, pad_type = temb_29_pad_type_0, strides = var_4846, weight = up_blocks_1_resnets_1_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_319_cast = add(x = hidden_states_179_cast, y = temb_29_cast);
            tensor<int32, [5]> reshape_148_shape_0 = const()[name = tensor<string, []>("reshape_148_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_148_cast = reshape(shape = reshape_148_shape_0, x = input_319_cast);
            tensor<int32, [3]> reduce_mean_111_axes_0 = const()[name = tensor<string, []>("reduce_mean_111_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_111_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_111_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_111_cast = reduce_mean(axes = reduce_mean_111_axes_0, keep_dims = reduce_mean_111_keep_dims_0, x = reshape_148_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_74_cast = sub(x = reshape_148_cast, y = reduce_mean_111_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_37_cast = square(x = sub_74_cast);
            tensor<int32, [3]> reduce_mean_113_axes_0 = const()[name = tensor<string, []>("reduce_mean_113_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_113_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_113_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_113_cast = reduce_mean(axes = reduce_mean_113_axes_0, keep_dims = reduce_mean_113_keep_dims_0, x = square_37_cast);
            tensor<fp16, []> add_74_y_0_to_fp16 = const()[name = tensor<string, []>("add_74_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_74_cast = add(x = reduce_mean_113_cast, y = add_74_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_37_cast = sqrt(x = add_74_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_37_cast = real_div(x = sub_74_cast, y = sqrt_37_cast);
            tensor<int32, [4]> reshape_149_shape_0 = const()[name = tensor<string, []>("reshape_149_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_149_cast = reshape(shape = reshape_149_shape_0, x = real_div_37_cast);
            tensor<fp16, [1280]> add_75_mean_0_to_fp16 = const()[name = tensor<string, []>("add_75_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1252236864)))];
            tensor<fp16, [1280]> add_75_variance_0_to_fp16 = const()[name = tensor<string, []>("add_75_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1252239488)))];
            tensor<fp16, [1280]> add_75_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_75_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1252242112)))];
            tensor<fp16, [1280]> add_75_beta_0_to_fp16 = const()[name = tensor<string, []>("add_75_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1252244736)))];
            tensor<fp16, []> add_75_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_75_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_75_cast = batch_norm(beta = add_75_beta_0_to_fp16, epsilon = add_75_epsilon_0_to_fp16, gamma = add_75_gamma_0_to_fp16, mean = add_75_mean_0_to_fp16, variance = add_75_variance_0_to_fp16, x = reshape_149_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_323_cast = silu(x = add_75_cast);
            tensor<int32, [2]> var_4858 = const()[name = tensor<string, []>("op_4858"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4860 = const()[name = tensor<string, []>("op_4860"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_181_pad_type_0 = const()[name = tensor<string, []>("hidden_states_181_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_181_pad_0 = const()[name = tensor<string, []>("hidden_states_181_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_1_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1252247360)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1281738624)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_181_cast = conv(bias = up_blocks_1_resnets_1_conv2_bias_to_fp16, dilations = var_4860, groups = var_4272, pad = hidden_states_181_pad_0, pad_type = hidden_states_181_pad_type_0, strides = var_4858, weight = up_blocks_1_resnets_1_conv2_weight_to_fp16, x = input_323_cast);
            tensor<int32, [2]> var_4865 = const()[name = tensor<string, []>("op_4865"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4867 = const()[name = tensor<string, []>("op_4867"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_13_pad_type_0 = const()[name = tensor<string, []>("x_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_13_pad_0 = const()[name = tensor<string, []>("x_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 2560, 1, 1]> up_blocks_1_resnets_1_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [1280, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1281741248)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_1_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_1_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1288294912)))];
            tensor<fp16, [2, 1280, 16, 16]> x_13_cast = conv(bias = up_blocks_1_resnets_1_conv_shortcut_bias_to_fp16, dilations = var_4867, groups = var_4272, pad = x_13_pad_0, pad_type = x_13_pad_type_0, strides = var_4865, weight = up_blocks_1_resnets_1_conv_shortcut_weight_to_fp16, x = input_311_cast);
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_183_cast = add(x = x_13_cast, y = hidden_states_181_cast);
            tensor<int32, [5]> reshape_152_shape_0 = const()[name = tensor<string, []>("reshape_152_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_152_cast = reshape(shape = reshape_152_shape_0, x = hidden_states_183_cast);
            tensor<int32, [3]> reduce_mean_114_axes_0 = const()[name = tensor<string, []>("reduce_mean_114_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_114_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_114_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_114_cast = reduce_mean(axes = reduce_mean_114_axes_0, keep_dims = reduce_mean_114_keep_dims_0, x = reshape_152_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_76_cast = sub(x = reshape_152_cast, y = reduce_mean_114_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_38_cast = square(x = sub_76_cast);
            tensor<int32, [3]> reduce_mean_116_axes_0 = const()[name = tensor<string, []>("reduce_mean_116_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_116_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_116_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_116_cast = reduce_mean(axes = reduce_mean_116_axes_0, keep_dims = reduce_mean_116_keep_dims_0, x = square_38_cast);
            tensor<fp16, []> add_76_y_0_to_fp16 = const()[name = tensor<string, []>("add_76_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_76_cast = add(x = reduce_mean_116_cast, y = add_76_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_38_cast = sqrt(x = add_76_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_38_cast = real_div(x = sub_76_cast, y = sqrt_38_cast);
            tensor<int32, [4]> reshape_153_shape_0 = const()[name = tensor<string, []>("reshape_153_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_153_cast = reshape(shape = reshape_153_shape_0, x = real_div_38_cast);
            tensor<fp16, [1280]> add_77_mean_0_to_fp16 = const()[name = tensor<string, []>("add_77_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1288297536)))];
            tensor<fp16, [1280]> add_77_variance_0_to_fp16 = const()[name = tensor<string, []>("add_77_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1288300160)))];
            tensor<fp16, [1280]> add_77_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_77_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1288302784)))];
            tensor<fp16, [1280]> add_77_beta_0_to_fp16 = const()[name = tensor<string, []>("add_77_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1288305408)))];
            tensor<fp16, []> add_77_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_77_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_77_cast = batch_norm(beta = add_77_beta_0_to_fp16, epsilon = add_77_epsilon_0_to_fp16, gamma = add_77_gamma_0_to_fp16, mean = add_77_mean_0_to_fp16, variance = add_77_variance_0_to_fp16, x = reshape_153_cast);
            tensor<int32, [2]> var_4887 = const()[name = tensor<string, []>("op_4887"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4889 = const()[name = tensor<string, []>("op_4889"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_185_pad_type_0 = const()[name = tensor<string, []>("hidden_states_185_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_185_pad_0 = const()[name = tensor<string, []>("hidden_states_185_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_proj_in_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1288308032)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_1_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_proj_in_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1291584896)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_185_cast = conv(bias = up_blocks_1_attentions_1_proj_in_bias_to_fp16, dilations = var_4889, groups = var_4272, pad = hidden_states_185_pad_0, pad_type = hidden_states_185_pad_type_0, strides = var_4887, weight = up_blocks_1_attentions_1_proj_in_weight_to_fp16, x = add_77_cast);
            tensor<int32, [4]> var_4894 = const()[name = tensor<string, []>("op_4894"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<fp16, [2, 1280, 1, 256]> inputs_49_cast = reshape(shape = var_4894, x = hidden_states_185_cast);
            tensor<int32, [1]> var_4904 = const()[name = tensor<string, []>("op_4904"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_49_cast = reduce_mean(axes = var_4904, keep_dims = var_4267, x = inputs_49_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_49_cast = sub(x = inputs_49_cast, y = channels_mean_49_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_49_cast = mul(x = zero_mean_49_cast, y = zero_mean_49_cast);
            tensor<int32, [1]> var_4908 = const()[name = tensor<string, []>("op_4908"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_4909_cast = reduce_mean(axes = var_4908, keep_dims = var_4267, x = zero_mean_sq_49_cast);
            tensor<fp16, []> var_4910_to_fp16 = const()[name = tensor<string, []>("op_4910_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_4911_cast = add(x = var_4909_cast, y = var_4910_to_fp16);
            tensor<fp16, []> denom_49_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_49_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_49_cast = rsqrt(epsilon = denom_49_epsilon_0_to_fp16, x = var_4911_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_49_cast = mul(x = zero_mean_49_cast, y = denom_49_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_4915_to_fp16 = const()[name = tensor<string, []>("op_4915_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1291587520)))];
            tensor<fp16, [2, 1280, 1, 256]> var_4916_cast = add(x = out_49_cast, y = var_4915_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_4918_to_fp16 = const()[name = tensor<string, []>("op_4918_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1291590144)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_187_cast = mul(x = var_4916_cast, y = var_4918_to_fp16);
            tensor<int32, [2]> var_4925 = const()[name = tensor<string, []>("op_4925"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4927 = const()[name = tensor<string, []>("op_4927"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_33_pad_type_0 = const()[name = tensor<string, []>("q_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_33_pad_0 = const()[name = tensor<string, []>("q_33_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1291592768)))];
            tensor<fp16, [2, 1280, 1, 256]> q_33_cast = conv(dilations = var_4927, groups = var_4272, pad = q_33_pad_0, pad_type = q_33_pad_type_0, strides = var_4925, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_187_cast);
            tensor<int32, [2]> var_4931 = const()[name = tensor<string, []>("op_4931"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4933 = const()[name = tensor<string, []>("op_4933"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_65_pad_type_0 = const()[name = tensor<string, []>("k_65_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_65_pad_0 = const()[name = tensor<string, []>("k_65_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1294869632)))];
            tensor<fp16, [2, 1280, 1, 256]> k_65_cast = conv(dilations = var_4933, groups = var_4272, pad = k_65_pad_0, pad_type = k_65_pad_type_0, strides = var_4931, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_187_cast);
            tensor<int32, [2]> var_4937 = const()[name = tensor<string, []>("op_4937"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4939 = const()[name = tensor<string, []>("op_4939"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_33_pad_type_0 = const()[name = tensor<string, []>("v_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_33_pad_0 = const()[name = tensor<string, []>("v_33_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1298146496)))];
            tensor<fp16, [2, 1280, 1, 256]> v_33_cast = conv(dilations = var_4939, groups = var_4272, pad = v_33_pad_0, pad_type = v_33_pad_type_0, strides = var_4937, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_187_cast);
            tensor<int32, [4]> var_4943_begin_0 = const()[name = tensor<string, []>("op_4943_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4943_end_0 = const()[name = tensor<string, []>("op_4943_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_4943_end_mask_0 = const()[name = tensor<string, []>("op_4943_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4943_cast = slice_by_index(begin = var_4943_begin_0, end = var_4943_end_0, end_mask = var_4943_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_4947_begin_0 = const()[name = tensor<string, []>("op_4947_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_4947_end_0 = const()[name = tensor<string, []>("op_4947_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_4947_end_mask_0 = const()[name = tensor<string, []>("op_4947_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4947_cast = slice_by_index(begin = var_4947_begin_0, end = var_4947_end_0, end_mask = var_4947_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_4951_begin_0 = const()[name = tensor<string, []>("op_4951_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_4951_end_0 = const()[name = tensor<string, []>("op_4951_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_4951_end_mask_0 = const()[name = tensor<string, []>("op_4951_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4951_cast = slice_by_index(begin = var_4951_begin_0, end = var_4951_end_0, end_mask = var_4951_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_4955_begin_0 = const()[name = tensor<string, []>("op_4955_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_4955_end_0 = const()[name = tensor<string, []>("op_4955_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_4955_end_mask_0 = const()[name = tensor<string, []>("op_4955_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4955_cast = slice_by_index(begin = var_4955_begin_0, end = var_4955_end_0, end_mask = var_4955_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_4959_begin_0 = const()[name = tensor<string, []>("op_4959_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_4959_end_0 = const()[name = tensor<string, []>("op_4959_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_4959_end_mask_0 = const()[name = tensor<string, []>("op_4959_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4959_cast = slice_by_index(begin = var_4959_begin_0, end = var_4959_end_0, end_mask = var_4959_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_4963_begin_0 = const()[name = tensor<string, []>("op_4963_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_4963_end_0 = const()[name = tensor<string, []>("op_4963_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_4963_end_mask_0 = const()[name = tensor<string, []>("op_4963_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4963_cast = slice_by_index(begin = var_4963_begin_0, end = var_4963_end_0, end_mask = var_4963_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_4967_begin_0 = const()[name = tensor<string, []>("op_4967_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_4967_end_0 = const()[name = tensor<string, []>("op_4967_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_4967_end_mask_0 = const()[name = tensor<string, []>("op_4967_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4967_cast = slice_by_index(begin = var_4967_begin_0, end = var_4967_end_0, end_mask = var_4967_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> var_4971_begin_0 = const()[name = tensor<string, []>("op_4971_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_4971_end_0 = const()[name = tensor<string, []>("op_4971_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_4971_end_mask_0 = const()[name = tensor<string, []>("op_4971_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_4971_cast = slice_by_index(begin = var_4971_begin_0, end = var_4971_end_0, end_mask = var_4971_end_mask_0, x = q_33_cast);
            tensor<int32, [4]> k_67_perm_0 = const()[name = tensor<string, []>("k_67_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_4978_begin_0 = const()[name = tensor<string, []>("op_4978_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4978_end_0 = const()[name = tensor<string, []>("op_4978_end_0"), val = tensor<int32, [4]>([2, 256, 1, 160])];
            tensor<bool, [4]> var_4978_end_mask_0 = const()[name = tensor<string, []>("op_4978_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 1280]> transpose_15 = transpose(perm = k_67_perm_0, x = k_65_cast);
            tensor<fp16, [2, 256, 1, 160]> var_4978_cast = slice_by_index(begin = var_4978_begin_0, end = var_4978_end_0, end_mask = var_4978_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_4982_begin_0 = const()[name = tensor<string, []>("op_4982_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_4982_end_0 = const()[name = tensor<string, []>("op_4982_end_0"), val = tensor<int32, [4]>([2, 256, 1, 320])];
            tensor<bool, [4]> var_4982_end_mask_0 = const()[name = tensor<string, []>("op_4982_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4982_cast = slice_by_index(begin = var_4982_begin_0, end = var_4982_end_0, end_mask = var_4982_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_4986_begin_0 = const()[name = tensor<string, []>("op_4986_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_4986_end_0 = const()[name = tensor<string, []>("op_4986_end_0"), val = tensor<int32, [4]>([2, 256, 1, 480])];
            tensor<bool, [4]> var_4986_end_mask_0 = const()[name = tensor<string, []>("op_4986_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4986_cast = slice_by_index(begin = var_4986_begin_0, end = var_4986_end_0, end_mask = var_4986_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_4990_begin_0 = const()[name = tensor<string, []>("op_4990_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_4990_end_0 = const()[name = tensor<string, []>("op_4990_end_0"), val = tensor<int32, [4]>([2, 256, 1, 640])];
            tensor<bool, [4]> var_4990_end_mask_0 = const()[name = tensor<string, []>("op_4990_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4990_cast = slice_by_index(begin = var_4990_begin_0, end = var_4990_end_0, end_mask = var_4990_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_4994_begin_0 = const()[name = tensor<string, []>("op_4994_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_4994_end_0 = const()[name = tensor<string, []>("op_4994_end_0"), val = tensor<int32, [4]>([2, 256, 1, 800])];
            tensor<bool, [4]> var_4994_end_mask_0 = const()[name = tensor<string, []>("op_4994_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4994_cast = slice_by_index(begin = var_4994_begin_0, end = var_4994_end_0, end_mask = var_4994_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_4998_begin_0 = const()[name = tensor<string, []>("op_4998_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_4998_end_0 = const()[name = tensor<string, []>("op_4998_end_0"), val = tensor<int32, [4]>([2, 256, 1, 960])];
            tensor<bool, [4]> var_4998_end_mask_0 = const()[name = tensor<string, []>("op_4998_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_4998_cast = slice_by_index(begin = var_4998_begin_0, end = var_4998_end_0, end_mask = var_4998_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_5002_begin_0 = const()[name = tensor<string, []>("op_5002_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_5002_end_0 = const()[name = tensor<string, []>("op_5002_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1120])];
            tensor<bool, [4]> var_5002_end_mask_0 = const()[name = tensor<string, []>("op_5002_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_5002_cast = slice_by_index(begin = var_5002_begin_0, end = var_5002_end_0, end_mask = var_5002_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_5006_begin_0 = const()[name = tensor<string, []>("op_5006_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_5006_end_0 = const()[name = tensor<string, []>("op_5006_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1280])];
            tensor<bool, [4]> var_5006_end_mask_0 = const()[name = tensor<string, []>("op_5006_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_5006_cast = slice_by_index(begin = var_5006_begin_0, end = var_5006_end_0, end_mask = var_5006_end_mask_0, x = transpose_15);
            tensor<int32, [4]> var_5008_begin_0 = const()[name = tensor<string, []>("op_5008_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5008_end_0 = const()[name = tensor<string, []>("op_5008_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_5008_end_mask_0 = const()[name = tensor<string, []>("op_5008_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5008_cast = slice_by_index(begin = var_5008_begin_0, end = var_5008_end_0, end_mask = var_5008_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_5012_begin_0 = const()[name = tensor<string, []>("op_5012_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_5012_end_0 = const()[name = tensor<string, []>("op_5012_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_5012_end_mask_0 = const()[name = tensor<string, []>("op_5012_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5012_cast = slice_by_index(begin = var_5012_begin_0, end = var_5012_end_0, end_mask = var_5012_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_5016_begin_0 = const()[name = tensor<string, []>("op_5016_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_5016_end_0 = const()[name = tensor<string, []>("op_5016_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_5016_end_mask_0 = const()[name = tensor<string, []>("op_5016_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5016_cast = slice_by_index(begin = var_5016_begin_0, end = var_5016_end_0, end_mask = var_5016_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_5020_begin_0 = const()[name = tensor<string, []>("op_5020_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_5020_end_0 = const()[name = tensor<string, []>("op_5020_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_5020_end_mask_0 = const()[name = tensor<string, []>("op_5020_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5020_cast = slice_by_index(begin = var_5020_begin_0, end = var_5020_end_0, end_mask = var_5020_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_5024_begin_0 = const()[name = tensor<string, []>("op_5024_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_5024_end_0 = const()[name = tensor<string, []>("op_5024_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_5024_end_mask_0 = const()[name = tensor<string, []>("op_5024_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5024_cast = slice_by_index(begin = var_5024_begin_0, end = var_5024_end_0, end_mask = var_5024_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_5028_begin_0 = const()[name = tensor<string, []>("op_5028_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_5028_end_0 = const()[name = tensor<string, []>("op_5028_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_5028_end_mask_0 = const()[name = tensor<string, []>("op_5028_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5028_cast = slice_by_index(begin = var_5028_begin_0, end = var_5028_end_0, end_mask = var_5028_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_5032_begin_0 = const()[name = tensor<string, []>("op_5032_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_5032_end_0 = const()[name = tensor<string, []>("op_5032_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_5032_end_mask_0 = const()[name = tensor<string, []>("op_5032_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5032_cast = slice_by_index(begin = var_5032_begin_0, end = var_5032_end_0, end_mask = var_5032_end_mask_0, x = v_33_cast);
            tensor<int32, [4]> var_5036_begin_0 = const()[name = tensor<string, []>("op_5036_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_5036_end_0 = const()[name = tensor<string, []>("op_5036_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_5036_end_mask_0 = const()[name = tensor<string, []>("op_5036_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5036_cast = slice_by_index(begin = var_5036_begin_0, end = var_5036_end_0, end_mask = var_5036_end_mask_0, x = v_33_cast);
            tensor<string, []> var_5040_equation_0 = const()[name = tensor<string, []>("op_5040_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5040_cast = einsum(equation = var_5040_equation_0, values = (var_4978_cast, var_4943_cast));
            tensor<fp16, []> var_5041_to_fp16 = const()[name = tensor<string, []>("op_5041_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_257_cast = mul(x = var_5040_cast, y = var_5041_to_fp16);
            tensor<string, []> var_5044_equation_0 = const()[name = tensor<string, []>("op_5044_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5044_cast = einsum(equation = var_5044_equation_0, values = (var_4982_cast, var_4947_cast));
            tensor<fp16, []> var_5045_to_fp16 = const()[name = tensor<string, []>("op_5045_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_259_cast = mul(x = var_5044_cast, y = var_5045_to_fp16);
            tensor<string, []> var_5048_equation_0 = const()[name = tensor<string, []>("op_5048_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5048_cast = einsum(equation = var_5048_equation_0, values = (var_4986_cast, var_4951_cast));
            tensor<fp16, []> var_5049_to_fp16 = const()[name = tensor<string, []>("op_5049_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_261_cast = mul(x = var_5048_cast, y = var_5049_to_fp16);
            tensor<string, []> var_5052_equation_0 = const()[name = tensor<string, []>("op_5052_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5052_cast = einsum(equation = var_5052_equation_0, values = (var_4990_cast, var_4955_cast));
            tensor<fp16, []> var_5053_to_fp16 = const()[name = tensor<string, []>("op_5053_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_263_cast = mul(x = var_5052_cast, y = var_5053_to_fp16);
            tensor<string, []> var_5056_equation_0 = const()[name = tensor<string, []>("op_5056_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5056_cast = einsum(equation = var_5056_equation_0, values = (var_4994_cast, var_4959_cast));
            tensor<fp16, []> var_5057_to_fp16 = const()[name = tensor<string, []>("op_5057_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_265_cast = mul(x = var_5056_cast, y = var_5057_to_fp16);
            tensor<string, []> var_5060_equation_0 = const()[name = tensor<string, []>("op_5060_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5060_cast = einsum(equation = var_5060_equation_0, values = (var_4998_cast, var_4963_cast));
            tensor<fp16, []> var_5061_to_fp16 = const()[name = tensor<string, []>("op_5061_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_267_cast = mul(x = var_5060_cast, y = var_5061_to_fp16);
            tensor<string, []> var_5064_equation_0 = const()[name = tensor<string, []>("op_5064_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5064_cast = einsum(equation = var_5064_equation_0, values = (var_5002_cast, var_4967_cast));
            tensor<fp16, []> var_5065_to_fp16 = const()[name = tensor<string, []>("op_5065_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_269_cast = mul(x = var_5064_cast, y = var_5065_to_fp16);
            tensor<string, []> var_5068_equation_0 = const()[name = tensor<string, []>("op_5068_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5068_cast = einsum(equation = var_5068_equation_0, values = (var_5006_cast, var_4971_cast));
            tensor<fp16, []> var_5069_to_fp16 = const()[name = tensor<string, []>("op_5069_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_271_cast = mul(x = var_5068_cast, y = var_5069_to_fp16);
            tensor<fp16, [2, 256, 1, 256]> var_5071_cast = softmax(axis = var_4272, x = aw_257_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5072_cast = softmax(axis = var_4272, x = aw_259_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5073_cast = softmax(axis = var_4272, x = aw_261_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5074_cast = softmax(axis = var_4272, x = aw_263_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5075_cast = softmax(axis = var_4272, x = aw_265_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5076_cast = softmax(axis = var_4272, x = aw_267_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5077_cast = softmax(axis = var_4272, x = aw_269_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5078_cast = softmax(axis = var_4272, x = aw_271_cast);
            tensor<string, []> var_5080_equation_0 = const()[name = tensor<string, []>("op_5080_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5080_cast = einsum(equation = var_5080_equation_0, values = (var_5008_cast, var_5071_cast));
            tensor<string, []> var_5082_equation_0 = const()[name = tensor<string, []>("op_5082_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5082_cast = einsum(equation = var_5082_equation_0, values = (var_5012_cast, var_5072_cast));
            tensor<string, []> var_5084_equation_0 = const()[name = tensor<string, []>("op_5084_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5084_cast = einsum(equation = var_5084_equation_0, values = (var_5016_cast, var_5073_cast));
            tensor<string, []> var_5086_equation_0 = const()[name = tensor<string, []>("op_5086_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5086_cast = einsum(equation = var_5086_equation_0, values = (var_5020_cast, var_5074_cast));
            tensor<string, []> var_5088_equation_0 = const()[name = tensor<string, []>("op_5088_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5088_cast = einsum(equation = var_5088_equation_0, values = (var_5024_cast, var_5075_cast));
            tensor<string, []> var_5090_equation_0 = const()[name = tensor<string, []>("op_5090_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5090_cast = einsum(equation = var_5090_equation_0, values = (var_5028_cast, var_5076_cast));
            tensor<string, []> var_5092_equation_0 = const()[name = tensor<string, []>("op_5092_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5092_cast = einsum(equation = var_5092_equation_0, values = (var_5032_cast, var_5077_cast));
            tensor<string, []> var_5094_equation_0 = const()[name = tensor<string, []>("op_5094_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5094_cast = einsum(equation = var_5094_equation_0, values = (var_5036_cast, var_5078_cast));
            tensor<bool, []> input_327_interleave_0 = const()[name = tensor<string, []>("input_327_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_327_cast = concat(axis = var_4272, interleave = input_327_interleave_0, values = (var_5080_cast, var_5082_cast, var_5084_cast, var_5086_cast, var_5088_cast, var_5090_cast, var_5092_cast, var_5094_cast));
            tensor<int32, [2]> var_5100 = const()[name = tensor<string, []>("op_5100"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5102 = const()[name = tensor<string, []>("op_5102"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_5104_pad_type_0 = const()[name = tensor<string, []>("op_5104_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_5104_pad_0 = const()[name = tensor<string, []>("op_5104_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1301423360)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1304700224)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5104_cast = conv(bias = up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_5102, groups = var_4272, pad = var_5104_pad_0, pad_type = var_5104_pad_type_0, strides = var_5100, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_327_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_51_cast = add(x = var_5104_cast, y = inputs_49_cast);
            tensor<int32, [1]> var_5108 = const()[name = tensor<string, []>("op_5108"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_51_cast = reduce_mean(axes = var_5108, keep_dims = var_4267, x = inputs_51_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_51_cast = sub(x = inputs_51_cast, y = channels_mean_51_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_51_cast = mul(x = zero_mean_51_cast, y = zero_mean_51_cast);
            tensor<int32, [1]> var_5112 = const()[name = tensor<string, []>("op_5112"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_5113_cast = reduce_mean(axes = var_5112, keep_dims = var_4267, x = zero_mean_sq_51_cast);
            tensor<fp16, []> var_5114_to_fp16 = const()[name = tensor<string, []>("op_5114_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_5115_cast = add(x = var_5113_cast, y = var_5114_to_fp16);
            tensor<fp16, []> denom_51_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_51_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_51_cast = rsqrt(epsilon = denom_51_epsilon_0_to_fp16, x = var_5115_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_51_cast = mul(x = zero_mean_51_cast, y = denom_51_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_5119_to_fp16 = const()[name = tensor<string, []>("op_5119_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1304702848)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5120_cast = add(x = out_51_cast, y = var_5119_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_5122_to_fp16 = const()[name = tensor<string, []>("op_5122_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1304705472)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_189_cast = mul(x = var_5120_cast, y = var_5122_to_fp16);
            tensor<int32, [2]> var_5129 = const()[name = tensor<string, []>("op_5129"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5131 = const()[name = tensor<string, []>("op_5131"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_35_pad_type_0 = const()[name = tensor<string, []>("q_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_35_pad_0 = const()[name = tensor<string, []>("q_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1304708096)))];
            tensor<fp16, [2, 1280, 1, 256]> q_35_cast = conv(dilations = var_5131, groups = var_4272, pad = q_35_pad_0, pad_type = q_35_pad_type_0, strides = var_5129, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_189_cast);
            tensor<int32, [2]> var_5135 = const()[name = tensor<string, []>("op_5135"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5137 = const()[name = tensor<string, []>("op_5137"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_69_pad_type_0 = const()[name = tensor<string, []>("k_69_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_69_pad_0 = const()[name = tensor<string, []>("k_69_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1307984960)))];
            tensor<fp16, [2, 1280, 1, 77]> k_69_cast = conv(dilations = var_5137, groups = var_4272, pad = k_69_pad_0, pad_type = k_69_pad_type_0, strides = var_5135, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_5141 = const()[name = tensor<string, []>("op_5141"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5143 = const()[name = tensor<string, []>("op_5143"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_35_pad_type_0 = const()[name = tensor<string, []>("v_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_35_pad_0 = const()[name = tensor<string, []>("v_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1309951104)))];
            tensor<fp16, [2, 1280, 1, 77]> v_35_cast = conv(dilations = var_5143, groups = var_4272, pad = v_35_pad_0, pad_type = v_35_pad_type_0, strides = var_5141, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_5147_begin_0 = const()[name = tensor<string, []>("op_5147_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5147_end_0 = const()[name = tensor<string, []>("op_5147_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_5147_end_mask_0 = const()[name = tensor<string, []>("op_5147_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5147_cast = slice_by_index(begin = var_5147_begin_0, end = var_5147_end_0, end_mask = var_5147_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_5151_begin_0 = const()[name = tensor<string, []>("op_5151_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_5151_end_0 = const()[name = tensor<string, []>("op_5151_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_5151_end_mask_0 = const()[name = tensor<string, []>("op_5151_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5151_cast = slice_by_index(begin = var_5151_begin_0, end = var_5151_end_0, end_mask = var_5151_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_5155_begin_0 = const()[name = tensor<string, []>("op_5155_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_5155_end_0 = const()[name = tensor<string, []>("op_5155_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_5155_end_mask_0 = const()[name = tensor<string, []>("op_5155_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5155_cast = slice_by_index(begin = var_5155_begin_0, end = var_5155_end_0, end_mask = var_5155_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_5159_begin_0 = const()[name = tensor<string, []>("op_5159_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_5159_end_0 = const()[name = tensor<string, []>("op_5159_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_5159_end_mask_0 = const()[name = tensor<string, []>("op_5159_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5159_cast = slice_by_index(begin = var_5159_begin_0, end = var_5159_end_0, end_mask = var_5159_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_5163_begin_0 = const()[name = tensor<string, []>("op_5163_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_5163_end_0 = const()[name = tensor<string, []>("op_5163_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_5163_end_mask_0 = const()[name = tensor<string, []>("op_5163_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5163_cast = slice_by_index(begin = var_5163_begin_0, end = var_5163_end_0, end_mask = var_5163_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_5167_begin_0 = const()[name = tensor<string, []>("op_5167_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_5167_end_0 = const()[name = tensor<string, []>("op_5167_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_5167_end_mask_0 = const()[name = tensor<string, []>("op_5167_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5167_cast = slice_by_index(begin = var_5167_begin_0, end = var_5167_end_0, end_mask = var_5167_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_5171_begin_0 = const()[name = tensor<string, []>("op_5171_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_5171_end_0 = const()[name = tensor<string, []>("op_5171_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_5171_end_mask_0 = const()[name = tensor<string, []>("op_5171_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5171_cast = slice_by_index(begin = var_5171_begin_0, end = var_5171_end_0, end_mask = var_5171_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> var_5175_begin_0 = const()[name = tensor<string, []>("op_5175_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_5175_end_0 = const()[name = tensor<string, []>("op_5175_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_5175_end_mask_0 = const()[name = tensor<string, []>("op_5175_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5175_cast = slice_by_index(begin = var_5175_begin_0, end = var_5175_end_0, end_mask = var_5175_end_mask_0, x = q_35_cast);
            tensor<int32, [4]> k_71_perm_0 = const()[name = tensor<string, []>("k_71_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_5182_begin_0 = const()[name = tensor<string, []>("op_5182_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5182_end_0 = const()[name = tensor<string, []>("op_5182_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_5182_end_mask_0 = const()[name = tensor<string, []>("op_5182_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 1280]> transpose_14 = transpose(perm = k_71_perm_0, x = k_69_cast);
            tensor<fp16, [2, 77, 1, 160]> var_5182_cast = slice_by_index(begin = var_5182_begin_0, end = var_5182_end_0, end_mask = var_5182_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_5186_begin_0 = const()[name = tensor<string, []>("op_5186_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_5186_end_0 = const()[name = tensor<string, []>("op_5186_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_5186_end_mask_0 = const()[name = tensor<string, []>("op_5186_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5186_cast = slice_by_index(begin = var_5186_begin_0, end = var_5186_end_0, end_mask = var_5186_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_5190_begin_0 = const()[name = tensor<string, []>("op_5190_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_5190_end_0 = const()[name = tensor<string, []>("op_5190_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_5190_end_mask_0 = const()[name = tensor<string, []>("op_5190_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5190_cast = slice_by_index(begin = var_5190_begin_0, end = var_5190_end_0, end_mask = var_5190_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_5194_begin_0 = const()[name = tensor<string, []>("op_5194_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_5194_end_0 = const()[name = tensor<string, []>("op_5194_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_5194_end_mask_0 = const()[name = tensor<string, []>("op_5194_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5194_cast = slice_by_index(begin = var_5194_begin_0, end = var_5194_end_0, end_mask = var_5194_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_5198_begin_0 = const()[name = tensor<string, []>("op_5198_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_5198_end_0 = const()[name = tensor<string, []>("op_5198_end_0"), val = tensor<int32, [4]>([2, 77, 1, 800])];
            tensor<bool, [4]> var_5198_end_mask_0 = const()[name = tensor<string, []>("op_5198_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5198_cast = slice_by_index(begin = var_5198_begin_0, end = var_5198_end_0, end_mask = var_5198_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_5202_begin_0 = const()[name = tensor<string, []>("op_5202_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_5202_end_0 = const()[name = tensor<string, []>("op_5202_end_0"), val = tensor<int32, [4]>([2, 77, 1, 960])];
            tensor<bool, [4]> var_5202_end_mask_0 = const()[name = tensor<string, []>("op_5202_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5202_cast = slice_by_index(begin = var_5202_begin_0, end = var_5202_end_0, end_mask = var_5202_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_5206_begin_0 = const()[name = tensor<string, []>("op_5206_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_5206_end_0 = const()[name = tensor<string, []>("op_5206_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1120])];
            tensor<bool, [4]> var_5206_end_mask_0 = const()[name = tensor<string, []>("op_5206_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5206_cast = slice_by_index(begin = var_5206_begin_0, end = var_5206_end_0, end_mask = var_5206_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_5210_begin_0 = const()[name = tensor<string, []>("op_5210_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_5210_end_0 = const()[name = tensor<string, []>("op_5210_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1280])];
            tensor<bool, [4]> var_5210_end_mask_0 = const()[name = tensor<string, []>("op_5210_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5210_cast = slice_by_index(begin = var_5210_begin_0, end = var_5210_end_0, end_mask = var_5210_end_mask_0, x = transpose_14);
            tensor<int32, [4]> var_5212_begin_0 = const()[name = tensor<string, []>("op_5212_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5212_end_0 = const()[name = tensor<string, []>("op_5212_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_5212_end_mask_0 = const()[name = tensor<string, []>("op_5212_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5212_cast = slice_by_index(begin = var_5212_begin_0, end = var_5212_end_0, end_mask = var_5212_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_5216_begin_0 = const()[name = tensor<string, []>("op_5216_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_5216_end_0 = const()[name = tensor<string, []>("op_5216_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_5216_end_mask_0 = const()[name = tensor<string, []>("op_5216_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5216_cast = slice_by_index(begin = var_5216_begin_0, end = var_5216_end_0, end_mask = var_5216_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_5220_begin_0 = const()[name = tensor<string, []>("op_5220_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_5220_end_0 = const()[name = tensor<string, []>("op_5220_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_5220_end_mask_0 = const()[name = tensor<string, []>("op_5220_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5220_cast = slice_by_index(begin = var_5220_begin_0, end = var_5220_end_0, end_mask = var_5220_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_5224_begin_0 = const()[name = tensor<string, []>("op_5224_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_5224_end_0 = const()[name = tensor<string, []>("op_5224_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_5224_end_mask_0 = const()[name = tensor<string, []>("op_5224_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5224_cast = slice_by_index(begin = var_5224_begin_0, end = var_5224_end_0, end_mask = var_5224_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_5228_begin_0 = const()[name = tensor<string, []>("op_5228_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_5228_end_0 = const()[name = tensor<string, []>("op_5228_end_0"), val = tensor<int32, [4]>([2, 800, 1, 77])];
            tensor<bool, [4]> var_5228_end_mask_0 = const()[name = tensor<string, []>("op_5228_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5228_cast = slice_by_index(begin = var_5228_begin_0, end = var_5228_end_0, end_mask = var_5228_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_5232_begin_0 = const()[name = tensor<string, []>("op_5232_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_5232_end_0 = const()[name = tensor<string, []>("op_5232_end_0"), val = tensor<int32, [4]>([2, 960, 1, 77])];
            tensor<bool, [4]> var_5232_end_mask_0 = const()[name = tensor<string, []>("op_5232_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5232_cast = slice_by_index(begin = var_5232_begin_0, end = var_5232_end_0, end_mask = var_5232_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_5236_begin_0 = const()[name = tensor<string, []>("op_5236_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_5236_end_0 = const()[name = tensor<string, []>("op_5236_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 77])];
            tensor<bool, [4]> var_5236_end_mask_0 = const()[name = tensor<string, []>("op_5236_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5236_cast = slice_by_index(begin = var_5236_begin_0, end = var_5236_end_0, end_mask = var_5236_end_mask_0, x = v_35_cast);
            tensor<int32, [4]> var_5240_begin_0 = const()[name = tensor<string, []>("op_5240_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_5240_end_0 = const()[name = tensor<string, []>("op_5240_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 77])];
            tensor<bool, [4]> var_5240_end_mask_0 = const()[name = tensor<string, []>("op_5240_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5240_cast = slice_by_index(begin = var_5240_begin_0, end = var_5240_end_0, end_mask = var_5240_end_mask_0, x = v_35_cast);
            tensor<string, []> var_5244_equation_0 = const()[name = tensor<string, []>("op_5244_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5244_cast = einsum(equation = var_5244_equation_0, values = (var_5182_cast, var_5147_cast));
            tensor<fp16, []> var_5245_to_fp16 = const()[name = tensor<string, []>("op_5245_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_273_cast = mul(x = var_5244_cast, y = var_5245_to_fp16);
            tensor<string, []> var_5248_equation_0 = const()[name = tensor<string, []>("op_5248_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5248_cast = einsum(equation = var_5248_equation_0, values = (var_5186_cast, var_5151_cast));
            tensor<fp16, []> var_5249_to_fp16 = const()[name = tensor<string, []>("op_5249_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_275_cast = mul(x = var_5248_cast, y = var_5249_to_fp16);
            tensor<string, []> var_5252_equation_0 = const()[name = tensor<string, []>("op_5252_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5252_cast = einsum(equation = var_5252_equation_0, values = (var_5190_cast, var_5155_cast));
            tensor<fp16, []> var_5253_to_fp16 = const()[name = tensor<string, []>("op_5253_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_277_cast = mul(x = var_5252_cast, y = var_5253_to_fp16);
            tensor<string, []> var_5256_equation_0 = const()[name = tensor<string, []>("op_5256_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5256_cast = einsum(equation = var_5256_equation_0, values = (var_5194_cast, var_5159_cast));
            tensor<fp16, []> var_5257_to_fp16 = const()[name = tensor<string, []>("op_5257_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_279_cast = mul(x = var_5256_cast, y = var_5257_to_fp16);
            tensor<string, []> var_5260_equation_0 = const()[name = tensor<string, []>("op_5260_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5260_cast = einsum(equation = var_5260_equation_0, values = (var_5198_cast, var_5163_cast));
            tensor<fp16, []> var_5261_to_fp16 = const()[name = tensor<string, []>("op_5261_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_281_cast = mul(x = var_5260_cast, y = var_5261_to_fp16);
            tensor<string, []> var_5264_equation_0 = const()[name = tensor<string, []>("op_5264_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5264_cast = einsum(equation = var_5264_equation_0, values = (var_5202_cast, var_5167_cast));
            tensor<fp16, []> var_5265_to_fp16 = const()[name = tensor<string, []>("op_5265_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_283_cast = mul(x = var_5264_cast, y = var_5265_to_fp16);
            tensor<string, []> var_5268_equation_0 = const()[name = tensor<string, []>("op_5268_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5268_cast = einsum(equation = var_5268_equation_0, values = (var_5206_cast, var_5171_cast));
            tensor<fp16, []> var_5269_to_fp16 = const()[name = tensor<string, []>("op_5269_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_285_cast = mul(x = var_5268_cast, y = var_5269_to_fp16);
            tensor<string, []> var_5272_equation_0 = const()[name = tensor<string, []>("op_5272_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5272_cast = einsum(equation = var_5272_equation_0, values = (var_5210_cast, var_5175_cast));
            tensor<fp16, []> var_5273_to_fp16 = const()[name = tensor<string, []>("op_5273_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_287_cast = mul(x = var_5272_cast, y = var_5273_to_fp16);
            tensor<fp16, [2, 77, 1, 256]> var_5275_cast = softmax(axis = var_4272, x = aw_273_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5276_cast = softmax(axis = var_4272, x = aw_275_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5277_cast = softmax(axis = var_4272, x = aw_277_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5278_cast = softmax(axis = var_4272, x = aw_279_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5279_cast = softmax(axis = var_4272, x = aw_281_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5280_cast = softmax(axis = var_4272, x = aw_283_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5281_cast = softmax(axis = var_4272, x = aw_285_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5282_cast = softmax(axis = var_4272, x = aw_287_cast);
            tensor<string, []> var_5284_equation_0 = const()[name = tensor<string, []>("op_5284_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5284_cast = einsum(equation = var_5284_equation_0, values = (var_5212_cast, var_5275_cast));
            tensor<string, []> var_5286_equation_0 = const()[name = tensor<string, []>("op_5286_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5286_cast = einsum(equation = var_5286_equation_0, values = (var_5216_cast, var_5276_cast));
            tensor<string, []> var_5288_equation_0 = const()[name = tensor<string, []>("op_5288_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5288_cast = einsum(equation = var_5288_equation_0, values = (var_5220_cast, var_5277_cast));
            tensor<string, []> var_5290_equation_0 = const()[name = tensor<string, []>("op_5290_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5290_cast = einsum(equation = var_5290_equation_0, values = (var_5224_cast, var_5278_cast));
            tensor<string, []> var_5292_equation_0 = const()[name = tensor<string, []>("op_5292_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5292_cast = einsum(equation = var_5292_equation_0, values = (var_5228_cast, var_5279_cast));
            tensor<string, []> var_5294_equation_0 = const()[name = tensor<string, []>("op_5294_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5294_cast = einsum(equation = var_5294_equation_0, values = (var_5232_cast, var_5280_cast));
            tensor<string, []> var_5296_equation_0 = const()[name = tensor<string, []>("op_5296_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5296_cast = einsum(equation = var_5296_equation_0, values = (var_5236_cast, var_5281_cast));
            tensor<string, []> var_5298_equation_0 = const()[name = tensor<string, []>("op_5298_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5298_cast = einsum(equation = var_5298_equation_0, values = (var_5240_cast, var_5282_cast));
            tensor<bool, []> input_329_interleave_0 = const()[name = tensor<string, []>("input_329_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_329_cast = concat(axis = var_4272, interleave = input_329_interleave_0, values = (var_5284_cast, var_5286_cast, var_5288_cast, var_5290_cast, var_5292_cast, var_5294_cast, var_5296_cast, var_5298_cast));
            tensor<int32, [2]> var_5304 = const()[name = tensor<string, []>("op_5304"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5306 = const()[name = tensor<string, []>("op_5306"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_5308_pad_type_0 = const()[name = tensor<string, []>("op_5308_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_5308_pad_0 = const()[name = tensor<string, []>("op_5308_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1311917248)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1315194112)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5308_cast = conv(bias = up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_5306, groups = var_4272, pad = var_5308_pad_0, pad_type = var_5308_pad_type_0, strides = var_5304, weight = up_blocks_1_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_329_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_53_cast = add(x = var_5308_cast, y = inputs_51_cast);
            tensor<int32, [1]> var_5312 = const()[name = tensor<string, []>("op_5312"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_53_cast = reduce_mean(axes = var_5312, keep_dims = var_4267, x = inputs_53_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_53_cast = sub(x = inputs_53_cast, y = channels_mean_53_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_53_cast = mul(x = zero_mean_53_cast, y = zero_mean_53_cast);
            tensor<int32, [1]> var_5316 = const()[name = tensor<string, []>("op_5316"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_5317_cast = reduce_mean(axes = var_5316, keep_dims = var_4267, x = zero_mean_sq_53_cast);
            tensor<fp16, []> var_5318_to_fp16 = const()[name = tensor<string, []>("op_5318_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_5319_cast = add(x = var_5317_cast, y = var_5318_to_fp16);
            tensor<fp16, []> denom_53_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_53_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_53_cast = rsqrt(epsilon = denom_53_epsilon_0_to_fp16, x = var_5319_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_53_cast = mul(x = zero_mean_53_cast, y = denom_53_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_5323_to_fp16 = const()[name = tensor<string, []>("op_5323_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1315196736)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5324_cast = add(x = out_53_cast, y = var_5323_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_5326_to_fp16 = const()[name = tensor<string, []>("op_5326_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1315199360)))];
            tensor<fp16, [2, 1280, 1, 256]> input_331_cast = mul(x = var_5324_cast, y = var_5326_to_fp16);
            tensor<int32, [2]> var_5334 = const()[name = tensor<string, []>("op_5334"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5336 = const()[name = tensor<string, []>("op_5336"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_5338_pad_type_0 = const()[name = tensor<string, []>("op_5338_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_5338_pad_0 = const()[name = tensor<string, []>("op_5338_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [10240, 1280, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [10240, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1315201984)))];
            tensor<fp16, [10240]> up_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [10240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1341416448)))];
            tensor<fp16, [2, 10240, 1, 256]> var_5338_cast = conv(bias = up_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_5336, groups = var_4272, pad = var_5338_pad_0, pad_type = var_5338_pad_type_0, strides = var_5334, weight = up_blocks_1_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_331_cast);
            tensor<int32, [2]> var_5339_split_sizes_0 = const()[name = tensor<string, []>("op_5339_split_sizes_0"), val = tensor<int32, [2]>([5120, 5120])];
            tensor<int32, []> var_5339_axis_0 = const()[name = tensor<string, []>("op_5339_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 5120, 1, 256]> var_5339_cast_0, tensor<fp16, [2, 5120, 1, 256]> var_5339_cast_1 = split(axis = var_5339_axis_0, split_sizes = var_5339_split_sizes_0, x = var_5338_cast);
            tensor<string, []> var_5341_mode_0 = const()[name = tensor<string, []>("op_5341_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 5120, 1, 256]> var_5341_cast = gelu(mode = var_5341_mode_0, x = var_5339_cast_1);
            tensor<fp16, [2, 5120, 1, 256]> input_333_cast = mul(x = var_5339_cast_0, y = var_5341_cast);
            tensor<int32, [2]> var_5345 = const()[name = tensor<string, []>("op_5345"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5347 = const()[name = tensor<string, []>("op_5347"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_5349_pad_type_0 = const()[name = tensor<string, []>("op_5349_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_5349_pad_0 = const()[name = tensor<string, []>("op_5349_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 5120, 1, 1]> up_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1341436992)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1354544256)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5349_cast = conv(bias = up_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_5347, groups = var_4272, pad = var_5349_pad_0, pad_type = var_5349_pad_type_0, strides = var_5345, weight = up_blocks_1_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_333_cast);
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_193_cast = add(x = var_5349_cast, y = inputs_53_cast);
            tensor<int32, [4]> var_5351 = const()[name = tensor<string, []>("op_5351"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> input_335_cast = reshape(shape = var_5351, x = hidden_states_193_cast);
            tensor<int32, [2]> var_5355 = const()[name = tensor<string, []>("op_5355"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5357 = const()[name = tensor<string, []>("op_5357"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_195_pad_type_0 = const()[name = tensor<string, []>("hidden_states_195_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_195_pad_0 = const()[name = tensor<string, []>("hidden_states_195_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_1_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_proj_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1354546880)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_1_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_1_proj_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1357823744)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_195_cast = conv(bias = up_blocks_1_attentions_1_proj_out_bias_to_fp16, dilations = var_5357, groups = var_4272, pad = hidden_states_195_pad_0, pad_type = hidden_states_195_pad_type_0, strides = var_5355, weight = up_blocks_1_attentions_1_proj_out_weight_to_fp16, x = input_335_cast);
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_197_cast = add(x = hidden_states_195_cast, y = hidden_states_183_cast);
            tensor<bool, []> input_337_interleave_0 = const()[name = tensor<string, []>("input_337_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1920, 16, 16]> input_337_cast = concat(axis = var_4272, interleave = input_337_interleave_0, values = (hidden_states_197_cast, input_117_cast));
            tensor<int32, [5]> reshape_156_shape_0 = const()[name = tensor<string, []>("reshape_156_shape_0"), val = tensor<int32, [5]>([2, 32, 60, 16, 16])];
            tensor<fp16, [2, 32, 60, 16, 16]> reshape_156_cast = reshape(shape = reshape_156_shape_0, x = input_337_cast);
            tensor<int32, [3]> reduce_mean_117_axes_0 = const()[name = tensor<string, []>("reduce_mean_117_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_117_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_117_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_117_cast = reduce_mean(axes = reduce_mean_117_axes_0, keep_dims = reduce_mean_117_keep_dims_0, x = reshape_156_cast);
            tensor<fp16, [2, 32, 60, 16, 16]> sub_78_cast = sub(x = reshape_156_cast, y = reduce_mean_117_cast);
            tensor<fp16, [2, 32, 60, 16, 16]> square_39_cast = square(x = sub_78_cast);
            tensor<int32, [3]> reduce_mean_119_axes_0 = const()[name = tensor<string, []>("reduce_mean_119_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_119_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_119_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_119_cast = reduce_mean(axes = reduce_mean_119_axes_0, keep_dims = reduce_mean_119_keep_dims_0, x = square_39_cast);
            tensor<fp16, []> add_78_y_0_to_fp16 = const()[name = tensor<string, []>("add_78_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_78_cast = add(x = reduce_mean_119_cast, y = add_78_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_39_cast = sqrt(x = add_78_cast);
            tensor<fp16, [2, 32, 60, 16, 16]> real_div_39_cast = real_div(x = sub_78_cast, y = sqrt_39_cast);
            tensor<int32, [4]> reshape_157_shape_0 = const()[name = tensor<string, []>("reshape_157_shape_0"), val = tensor<int32, [4]>([2, 1920, 16, 16])];
            tensor<fp16, [2, 1920, 16, 16]> reshape_157_cast = reshape(shape = reshape_157_shape_0, x = real_div_39_cast);
            tensor<fp16, [1920]> add_79_mean_0_to_fp16 = const()[name = tensor<string, []>("add_79_mean_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1357826368)))];
            tensor<fp16, [1920]> add_79_variance_0_to_fp16 = const()[name = tensor<string, []>("add_79_variance_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1357830272)))];
            tensor<fp16, [1920]> add_79_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_79_gamma_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1357834176)))];
            tensor<fp16, [1920]> add_79_beta_0_to_fp16 = const()[name = tensor<string, []>("add_79_beta_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1357838080)))];
            tensor<fp16, []> add_79_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_79_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1920, 16, 16]> add_79_cast = batch_norm(beta = add_79_beta_0_to_fp16, epsilon = add_79_epsilon_0_to_fp16, gamma = add_79_gamma_0_to_fp16, mean = add_79_mean_0_to_fp16, variance = add_79_variance_0_to_fp16, x = reshape_157_cast);
            tensor<fp16, [2, 1920, 16, 16]> input_341_cast = silu(x = add_79_cast);
            tensor<int32, [2]> var_5375 = const()[name = tensor<string, []>("op_5375"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5377 = const()[name = tensor<string, []>("op_5377"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_199_pad_type_0 = const()[name = tensor<string, []>("hidden_states_199_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_199_pad_0 = const()[name = tensor<string, []>("hidden_states_199_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1920, 3, 3]> up_blocks_1_resnets_2_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_conv1_weight_to_fp16"), val = tensor<fp16, [1280, 1920, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1357841984)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_2_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_conv1_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1402078848)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_199_cast = conv(bias = up_blocks_1_resnets_2_conv1_bias_to_fp16, dilations = var_5377, groups = var_4272, pad = hidden_states_199_pad_0, pad_type = hidden_states_199_pad_type_0, strides = var_5375, weight = up_blocks_1_resnets_2_conv1_weight_to_fp16, x = input_341_cast);
            tensor<int32, [2]> var_5383 = const()[name = tensor<string, []>("op_5383"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5385 = const()[name = tensor<string, []>("op_5385"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_31_pad_type_0 = const()[name = tensor<string, []>("temb_31_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_31_pad_0 = const()[name = tensor<string, []>("temb_31_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_resnets_2_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1402081472)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_2_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1405358336)))];
            tensor<fp16, [2, 1280, 1, 1]> temb_31_cast = conv(bias = up_blocks_1_resnets_2_time_emb_proj_bias_to_fp16, dilations = var_5385, groups = var_4272, pad = temb_31_pad_0, pad_type = temb_31_pad_type_0, strides = var_5383, weight = up_blocks_1_resnets_2_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_345_cast = add(x = hidden_states_199_cast, y = temb_31_cast);
            tensor<int32, [5]> reshape_160_shape_0 = const()[name = tensor<string, []>("reshape_160_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_160_cast = reshape(shape = reshape_160_shape_0, x = input_345_cast);
            tensor<int32, [3]> reduce_mean_120_axes_0 = const()[name = tensor<string, []>("reduce_mean_120_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_120_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_120_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_120_cast = reduce_mean(axes = reduce_mean_120_axes_0, keep_dims = reduce_mean_120_keep_dims_0, x = reshape_160_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_80_cast = sub(x = reshape_160_cast, y = reduce_mean_120_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_40_cast = square(x = sub_80_cast);
            tensor<int32, [3]> reduce_mean_122_axes_0 = const()[name = tensor<string, []>("reduce_mean_122_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_122_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_122_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_122_cast = reduce_mean(axes = reduce_mean_122_axes_0, keep_dims = reduce_mean_122_keep_dims_0, x = square_40_cast);
            tensor<fp16, []> add_80_y_0_to_fp16 = const()[name = tensor<string, []>("add_80_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_80_cast = add(x = reduce_mean_122_cast, y = add_80_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_40_cast = sqrt(x = add_80_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_40_cast = real_div(x = sub_80_cast, y = sqrt_40_cast);
            tensor<int32, [4]> reshape_161_shape_0 = const()[name = tensor<string, []>("reshape_161_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_161_cast = reshape(shape = reshape_161_shape_0, x = real_div_40_cast);
            tensor<fp16, [1280]> add_81_mean_0_to_fp16 = const()[name = tensor<string, []>("add_81_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1405360960)))];
            tensor<fp16, [1280]> add_81_variance_0_to_fp16 = const()[name = tensor<string, []>("add_81_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1405363584)))];
            tensor<fp16, [1280]> add_81_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_81_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1405366208)))];
            tensor<fp16, [1280]> add_81_beta_0_to_fp16 = const()[name = tensor<string, []>("add_81_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1405368832)))];
            tensor<fp16, []> add_81_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_81_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_81_cast = batch_norm(beta = add_81_beta_0_to_fp16, epsilon = add_81_epsilon_0_to_fp16, gamma = add_81_gamma_0_to_fp16, mean = add_81_mean_0_to_fp16, variance = add_81_variance_0_to_fp16, x = reshape_161_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_349_cast = silu(x = add_81_cast);
            tensor<int32, [2]> var_5395 = const()[name = tensor<string, []>("op_5395"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5397 = const()[name = tensor<string, []>("op_5397"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_201_pad_type_0 = const()[name = tensor<string, []>("hidden_states_201_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_201_pad_0 = const()[name = tensor<string, []>("hidden_states_201_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_1_resnets_2_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_conv2_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1405371456)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_2_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_conv2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1434862720)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_201_cast = conv(bias = up_blocks_1_resnets_2_conv2_bias_to_fp16, dilations = var_5397, groups = var_4272, pad = hidden_states_201_pad_0, pad_type = hidden_states_201_pad_type_0, strides = var_5395, weight = up_blocks_1_resnets_2_conv2_weight_to_fp16, x = input_349_cast);
            tensor<int32, [2]> var_5402 = const()[name = tensor<string, []>("op_5402"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5404 = const()[name = tensor<string, []>("op_5404"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_15_pad_type_0 = const()[name = tensor<string, []>("x_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_15_pad_0 = const()[name = tensor<string, []>("x_15_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1920, 1, 1]> up_blocks_1_resnets_2_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [1280, 1920, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1434865344)))];
            tensor<fp16, [1280]> up_blocks_1_resnets_2_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_resnets_2_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1439780608)))];
            tensor<fp16, [2, 1280, 16, 16]> x_15_cast = conv(bias = up_blocks_1_resnets_2_conv_shortcut_bias_to_fp16, dilations = var_5404, groups = var_4272, pad = x_15_pad_0, pad_type = x_15_pad_type_0, strides = var_5402, weight = up_blocks_1_resnets_2_conv_shortcut_weight_to_fp16, x = input_337_cast);
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_203_cast = add(x = x_15_cast, y = hidden_states_201_cast);
            tensor<int32, [5]> reshape_164_shape_0 = const()[name = tensor<string, []>("reshape_164_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 16, 16])];
            tensor<fp16, [2, 32, 40, 16, 16]> reshape_164_cast = reshape(shape = reshape_164_shape_0, x = hidden_states_203_cast);
            tensor<int32, [3]> reduce_mean_123_axes_0 = const()[name = tensor<string, []>("reduce_mean_123_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_123_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_123_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_123_cast = reduce_mean(axes = reduce_mean_123_axes_0, keep_dims = reduce_mean_123_keep_dims_0, x = reshape_164_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> sub_82_cast = sub(x = reshape_164_cast, y = reduce_mean_123_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> square_41_cast = square(x = sub_82_cast);
            tensor<int32, [3]> reduce_mean_125_axes_0 = const()[name = tensor<string, []>("reduce_mean_125_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_125_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_125_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_125_cast = reduce_mean(axes = reduce_mean_125_axes_0, keep_dims = reduce_mean_125_keep_dims_0, x = square_41_cast);
            tensor<fp16, []> add_82_y_0_to_fp16 = const()[name = tensor<string, []>("add_82_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_82_cast = add(x = reduce_mean_125_cast, y = add_82_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_41_cast = sqrt(x = add_82_cast);
            tensor<fp16, [2, 32, 40, 16, 16]> real_div_41_cast = real_div(x = sub_82_cast, y = sqrt_41_cast);
            tensor<int32, [4]> reshape_165_shape_0 = const()[name = tensor<string, []>("reshape_165_shape_0"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> reshape_165_cast = reshape(shape = reshape_165_shape_0, x = real_div_41_cast);
            tensor<fp16, [1280]> add_83_mean_0_to_fp16 = const()[name = tensor<string, []>("add_83_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1439783232)))];
            tensor<fp16, [1280]> add_83_variance_0_to_fp16 = const()[name = tensor<string, []>("add_83_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1439785856)))];
            tensor<fp16, [1280]> add_83_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_83_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1439788480)))];
            tensor<fp16, [1280]> add_83_beta_0_to_fp16 = const()[name = tensor<string, []>("add_83_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1439791104)))];
            tensor<fp16, []> add_83_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_83_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 16, 16]> add_83_cast = batch_norm(beta = add_83_beta_0_to_fp16, epsilon = add_83_epsilon_0_to_fp16, gamma = add_83_gamma_0_to_fp16, mean = add_83_mean_0_to_fp16, variance = add_83_variance_0_to_fp16, x = reshape_165_cast);
            tensor<int32, [2]> var_5424 = const()[name = tensor<string, []>("op_5424"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5426 = const()[name = tensor<string, []>("op_5426"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_205_pad_type_0 = const()[name = tensor<string, []>("hidden_states_205_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_205_pad_0 = const()[name = tensor<string, []>("hidden_states_205_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_proj_in_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1439793728)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_2_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_proj_in_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1443070592)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_205_cast = conv(bias = up_blocks_1_attentions_2_proj_in_bias_to_fp16, dilations = var_5426, groups = var_4272, pad = hidden_states_205_pad_0, pad_type = hidden_states_205_pad_type_0, strides = var_5424, weight = up_blocks_1_attentions_2_proj_in_weight_to_fp16, x = add_83_cast);
            tensor<int32, [4]> var_5431 = const()[name = tensor<string, []>("op_5431"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<fp16, [2, 1280, 1, 256]> inputs_55_cast = reshape(shape = var_5431, x = hidden_states_205_cast);
            tensor<int32, [1]> var_5441 = const()[name = tensor<string, []>("op_5441"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_55_cast = reduce_mean(axes = var_5441, keep_dims = var_4267, x = inputs_55_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_55_cast = sub(x = inputs_55_cast, y = channels_mean_55_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_55_cast = mul(x = zero_mean_55_cast, y = zero_mean_55_cast);
            tensor<int32, [1]> var_5445 = const()[name = tensor<string, []>("op_5445"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_5446_cast = reduce_mean(axes = var_5445, keep_dims = var_4267, x = zero_mean_sq_55_cast);
            tensor<fp16, []> var_5447_to_fp16 = const()[name = tensor<string, []>("op_5447_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_5448_cast = add(x = var_5446_cast, y = var_5447_to_fp16);
            tensor<fp16, []> denom_55_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_55_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_55_cast = rsqrt(epsilon = denom_55_epsilon_0_to_fp16, x = var_5448_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_55_cast = mul(x = zero_mean_55_cast, y = denom_55_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_5452_to_fp16 = const()[name = tensor<string, []>("op_5452_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1443073216)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5453_cast = add(x = out_55_cast, y = var_5452_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_5455_to_fp16 = const()[name = tensor<string, []>("op_5455_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1443075840)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_207_cast = mul(x = var_5453_cast, y = var_5455_to_fp16);
            tensor<int32, [2]> var_5462 = const()[name = tensor<string, []>("op_5462"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5464 = const()[name = tensor<string, []>("op_5464"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_37_pad_type_0 = const()[name = tensor<string, []>("q_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_37_pad_0 = const()[name = tensor<string, []>("q_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1443078464)))];
            tensor<fp16, [2, 1280, 1, 256]> q_37_cast = conv(dilations = var_5464, groups = var_4272, pad = q_37_pad_0, pad_type = q_37_pad_type_0, strides = var_5462, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_207_cast);
            tensor<int32, [2]> var_5468 = const()[name = tensor<string, []>("op_5468"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5470 = const()[name = tensor<string, []>("op_5470"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_73_pad_type_0 = const()[name = tensor<string, []>("k_73_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_73_pad_0 = const()[name = tensor<string, []>("k_73_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1446355328)))];
            tensor<fp16, [2, 1280, 1, 256]> k_73_cast = conv(dilations = var_5470, groups = var_4272, pad = k_73_pad_0, pad_type = k_73_pad_type_0, strides = var_5468, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_207_cast);
            tensor<int32, [2]> var_5474 = const()[name = tensor<string, []>("op_5474"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5476 = const()[name = tensor<string, []>("op_5476"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_37_pad_type_0 = const()[name = tensor<string, []>("v_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_37_pad_0 = const()[name = tensor<string, []>("v_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1449632192)))];
            tensor<fp16, [2, 1280, 1, 256]> v_37_cast = conv(dilations = var_5476, groups = var_4272, pad = v_37_pad_0, pad_type = v_37_pad_type_0, strides = var_5474, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_207_cast);
            tensor<int32, [4]> var_5480_begin_0 = const()[name = tensor<string, []>("op_5480_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5480_end_0 = const()[name = tensor<string, []>("op_5480_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_5480_end_mask_0 = const()[name = tensor<string, []>("op_5480_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5480_cast = slice_by_index(begin = var_5480_begin_0, end = var_5480_end_0, end_mask = var_5480_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_5484_begin_0 = const()[name = tensor<string, []>("op_5484_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_5484_end_0 = const()[name = tensor<string, []>("op_5484_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_5484_end_mask_0 = const()[name = tensor<string, []>("op_5484_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5484_cast = slice_by_index(begin = var_5484_begin_0, end = var_5484_end_0, end_mask = var_5484_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_5488_begin_0 = const()[name = tensor<string, []>("op_5488_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_5488_end_0 = const()[name = tensor<string, []>("op_5488_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_5488_end_mask_0 = const()[name = tensor<string, []>("op_5488_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5488_cast = slice_by_index(begin = var_5488_begin_0, end = var_5488_end_0, end_mask = var_5488_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_5492_begin_0 = const()[name = tensor<string, []>("op_5492_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_5492_end_0 = const()[name = tensor<string, []>("op_5492_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_5492_end_mask_0 = const()[name = tensor<string, []>("op_5492_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5492_cast = slice_by_index(begin = var_5492_begin_0, end = var_5492_end_0, end_mask = var_5492_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_5496_begin_0 = const()[name = tensor<string, []>("op_5496_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_5496_end_0 = const()[name = tensor<string, []>("op_5496_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_5496_end_mask_0 = const()[name = tensor<string, []>("op_5496_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5496_cast = slice_by_index(begin = var_5496_begin_0, end = var_5496_end_0, end_mask = var_5496_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_5500_begin_0 = const()[name = tensor<string, []>("op_5500_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_5500_end_0 = const()[name = tensor<string, []>("op_5500_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_5500_end_mask_0 = const()[name = tensor<string, []>("op_5500_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5500_cast = slice_by_index(begin = var_5500_begin_0, end = var_5500_end_0, end_mask = var_5500_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_5504_begin_0 = const()[name = tensor<string, []>("op_5504_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_5504_end_0 = const()[name = tensor<string, []>("op_5504_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_5504_end_mask_0 = const()[name = tensor<string, []>("op_5504_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5504_cast = slice_by_index(begin = var_5504_begin_0, end = var_5504_end_0, end_mask = var_5504_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> var_5508_begin_0 = const()[name = tensor<string, []>("op_5508_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_5508_end_0 = const()[name = tensor<string, []>("op_5508_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_5508_end_mask_0 = const()[name = tensor<string, []>("op_5508_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5508_cast = slice_by_index(begin = var_5508_begin_0, end = var_5508_end_0, end_mask = var_5508_end_mask_0, x = q_37_cast);
            tensor<int32, [4]> k_75_perm_0 = const()[name = tensor<string, []>("k_75_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_5515_begin_0 = const()[name = tensor<string, []>("op_5515_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5515_end_0 = const()[name = tensor<string, []>("op_5515_end_0"), val = tensor<int32, [4]>([2, 256, 1, 160])];
            tensor<bool, [4]> var_5515_end_mask_0 = const()[name = tensor<string, []>("op_5515_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 1280]> transpose_13 = transpose(perm = k_75_perm_0, x = k_73_cast);
            tensor<fp16, [2, 256, 1, 160]> var_5515_cast = slice_by_index(begin = var_5515_begin_0, end = var_5515_end_0, end_mask = var_5515_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_5519_begin_0 = const()[name = tensor<string, []>("op_5519_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_5519_end_0 = const()[name = tensor<string, []>("op_5519_end_0"), val = tensor<int32, [4]>([2, 256, 1, 320])];
            tensor<bool, [4]> var_5519_end_mask_0 = const()[name = tensor<string, []>("op_5519_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_5519_cast = slice_by_index(begin = var_5519_begin_0, end = var_5519_end_0, end_mask = var_5519_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_5523_begin_0 = const()[name = tensor<string, []>("op_5523_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_5523_end_0 = const()[name = tensor<string, []>("op_5523_end_0"), val = tensor<int32, [4]>([2, 256, 1, 480])];
            tensor<bool, [4]> var_5523_end_mask_0 = const()[name = tensor<string, []>("op_5523_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_5523_cast = slice_by_index(begin = var_5523_begin_0, end = var_5523_end_0, end_mask = var_5523_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_5527_begin_0 = const()[name = tensor<string, []>("op_5527_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_5527_end_0 = const()[name = tensor<string, []>("op_5527_end_0"), val = tensor<int32, [4]>([2, 256, 1, 640])];
            tensor<bool, [4]> var_5527_end_mask_0 = const()[name = tensor<string, []>("op_5527_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_5527_cast = slice_by_index(begin = var_5527_begin_0, end = var_5527_end_0, end_mask = var_5527_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_5531_begin_0 = const()[name = tensor<string, []>("op_5531_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_5531_end_0 = const()[name = tensor<string, []>("op_5531_end_0"), val = tensor<int32, [4]>([2, 256, 1, 800])];
            tensor<bool, [4]> var_5531_end_mask_0 = const()[name = tensor<string, []>("op_5531_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_5531_cast = slice_by_index(begin = var_5531_begin_0, end = var_5531_end_0, end_mask = var_5531_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_5535_begin_0 = const()[name = tensor<string, []>("op_5535_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_5535_end_0 = const()[name = tensor<string, []>("op_5535_end_0"), val = tensor<int32, [4]>([2, 256, 1, 960])];
            tensor<bool, [4]> var_5535_end_mask_0 = const()[name = tensor<string, []>("op_5535_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_5535_cast = slice_by_index(begin = var_5535_begin_0, end = var_5535_end_0, end_mask = var_5535_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_5539_begin_0 = const()[name = tensor<string, []>("op_5539_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_5539_end_0 = const()[name = tensor<string, []>("op_5539_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1120])];
            tensor<bool, [4]> var_5539_end_mask_0 = const()[name = tensor<string, []>("op_5539_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_5539_cast = slice_by_index(begin = var_5539_begin_0, end = var_5539_end_0, end_mask = var_5539_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_5543_begin_0 = const()[name = tensor<string, []>("op_5543_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_5543_end_0 = const()[name = tensor<string, []>("op_5543_end_0"), val = tensor<int32, [4]>([2, 256, 1, 1280])];
            tensor<bool, [4]> var_5543_end_mask_0 = const()[name = tensor<string, []>("op_5543_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 256, 1, 160]> var_5543_cast = slice_by_index(begin = var_5543_begin_0, end = var_5543_end_0, end_mask = var_5543_end_mask_0, x = transpose_13);
            tensor<int32, [4]> var_5545_begin_0 = const()[name = tensor<string, []>("op_5545_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5545_end_0 = const()[name = tensor<string, []>("op_5545_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_5545_end_mask_0 = const()[name = tensor<string, []>("op_5545_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5545_cast = slice_by_index(begin = var_5545_begin_0, end = var_5545_end_0, end_mask = var_5545_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_5549_begin_0 = const()[name = tensor<string, []>("op_5549_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_5549_end_0 = const()[name = tensor<string, []>("op_5549_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_5549_end_mask_0 = const()[name = tensor<string, []>("op_5549_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5549_cast = slice_by_index(begin = var_5549_begin_0, end = var_5549_end_0, end_mask = var_5549_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_5553_begin_0 = const()[name = tensor<string, []>("op_5553_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_5553_end_0 = const()[name = tensor<string, []>("op_5553_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_5553_end_mask_0 = const()[name = tensor<string, []>("op_5553_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5553_cast = slice_by_index(begin = var_5553_begin_0, end = var_5553_end_0, end_mask = var_5553_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_5557_begin_0 = const()[name = tensor<string, []>("op_5557_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_5557_end_0 = const()[name = tensor<string, []>("op_5557_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_5557_end_mask_0 = const()[name = tensor<string, []>("op_5557_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5557_cast = slice_by_index(begin = var_5557_begin_0, end = var_5557_end_0, end_mask = var_5557_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_5561_begin_0 = const()[name = tensor<string, []>("op_5561_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_5561_end_0 = const()[name = tensor<string, []>("op_5561_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_5561_end_mask_0 = const()[name = tensor<string, []>("op_5561_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5561_cast = slice_by_index(begin = var_5561_begin_0, end = var_5561_end_0, end_mask = var_5561_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_5565_begin_0 = const()[name = tensor<string, []>("op_5565_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_5565_end_0 = const()[name = tensor<string, []>("op_5565_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_5565_end_mask_0 = const()[name = tensor<string, []>("op_5565_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5565_cast = slice_by_index(begin = var_5565_begin_0, end = var_5565_end_0, end_mask = var_5565_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_5569_begin_0 = const()[name = tensor<string, []>("op_5569_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_5569_end_0 = const()[name = tensor<string, []>("op_5569_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_5569_end_mask_0 = const()[name = tensor<string, []>("op_5569_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5569_cast = slice_by_index(begin = var_5569_begin_0, end = var_5569_end_0, end_mask = var_5569_end_mask_0, x = v_37_cast);
            tensor<int32, [4]> var_5573_begin_0 = const()[name = tensor<string, []>("op_5573_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_5573_end_0 = const()[name = tensor<string, []>("op_5573_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_5573_end_mask_0 = const()[name = tensor<string, []>("op_5573_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5573_cast = slice_by_index(begin = var_5573_begin_0, end = var_5573_end_0, end_mask = var_5573_end_mask_0, x = v_37_cast);
            tensor<string, []> var_5577_equation_0 = const()[name = tensor<string, []>("op_5577_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5577_cast = einsum(equation = var_5577_equation_0, values = (var_5515_cast, var_5480_cast));
            tensor<fp16, []> var_5578_to_fp16 = const()[name = tensor<string, []>("op_5578_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_289_cast = mul(x = var_5577_cast, y = var_5578_to_fp16);
            tensor<string, []> var_5581_equation_0 = const()[name = tensor<string, []>("op_5581_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5581_cast = einsum(equation = var_5581_equation_0, values = (var_5519_cast, var_5484_cast));
            tensor<fp16, []> var_5582_to_fp16 = const()[name = tensor<string, []>("op_5582_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_291_cast = mul(x = var_5581_cast, y = var_5582_to_fp16);
            tensor<string, []> var_5585_equation_0 = const()[name = tensor<string, []>("op_5585_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5585_cast = einsum(equation = var_5585_equation_0, values = (var_5523_cast, var_5488_cast));
            tensor<fp16, []> var_5586_to_fp16 = const()[name = tensor<string, []>("op_5586_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_293_cast = mul(x = var_5585_cast, y = var_5586_to_fp16);
            tensor<string, []> var_5589_equation_0 = const()[name = tensor<string, []>("op_5589_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5589_cast = einsum(equation = var_5589_equation_0, values = (var_5527_cast, var_5492_cast));
            tensor<fp16, []> var_5590_to_fp16 = const()[name = tensor<string, []>("op_5590_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_295_cast = mul(x = var_5589_cast, y = var_5590_to_fp16);
            tensor<string, []> var_5593_equation_0 = const()[name = tensor<string, []>("op_5593_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5593_cast = einsum(equation = var_5593_equation_0, values = (var_5531_cast, var_5496_cast));
            tensor<fp16, []> var_5594_to_fp16 = const()[name = tensor<string, []>("op_5594_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_297_cast = mul(x = var_5593_cast, y = var_5594_to_fp16);
            tensor<string, []> var_5597_equation_0 = const()[name = tensor<string, []>("op_5597_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5597_cast = einsum(equation = var_5597_equation_0, values = (var_5535_cast, var_5500_cast));
            tensor<fp16, []> var_5598_to_fp16 = const()[name = tensor<string, []>("op_5598_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_299_cast = mul(x = var_5597_cast, y = var_5598_to_fp16);
            tensor<string, []> var_5601_equation_0 = const()[name = tensor<string, []>("op_5601_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5601_cast = einsum(equation = var_5601_equation_0, values = (var_5539_cast, var_5504_cast));
            tensor<fp16, []> var_5602_to_fp16 = const()[name = tensor<string, []>("op_5602_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_301_cast = mul(x = var_5601_cast, y = var_5602_to_fp16);
            tensor<string, []> var_5605_equation_0 = const()[name = tensor<string, []>("op_5605_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 256, 1, 256]> var_5605_cast = einsum(equation = var_5605_equation_0, values = (var_5543_cast, var_5508_cast));
            tensor<fp16, []> var_5606_to_fp16 = const()[name = tensor<string, []>("op_5606_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 256, 1, 256]> aw_303_cast = mul(x = var_5605_cast, y = var_5606_to_fp16);
            tensor<fp16, [2, 256, 1, 256]> var_5608_cast = softmax(axis = var_4272, x = aw_289_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5609_cast = softmax(axis = var_4272, x = aw_291_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5610_cast = softmax(axis = var_4272, x = aw_293_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5611_cast = softmax(axis = var_4272, x = aw_295_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5612_cast = softmax(axis = var_4272, x = aw_297_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5613_cast = softmax(axis = var_4272, x = aw_299_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5614_cast = softmax(axis = var_4272, x = aw_301_cast);
            tensor<fp16, [2, 256, 1, 256]> var_5615_cast = softmax(axis = var_4272, x = aw_303_cast);
            tensor<string, []> var_5617_equation_0 = const()[name = tensor<string, []>("op_5617_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5617_cast = einsum(equation = var_5617_equation_0, values = (var_5545_cast, var_5608_cast));
            tensor<string, []> var_5619_equation_0 = const()[name = tensor<string, []>("op_5619_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5619_cast = einsum(equation = var_5619_equation_0, values = (var_5549_cast, var_5609_cast));
            tensor<string, []> var_5621_equation_0 = const()[name = tensor<string, []>("op_5621_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5621_cast = einsum(equation = var_5621_equation_0, values = (var_5553_cast, var_5610_cast));
            tensor<string, []> var_5623_equation_0 = const()[name = tensor<string, []>("op_5623_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5623_cast = einsum(equation = var_5623_equation_0, values = (var_5557_cast, var_5611_cast));
            tensor<string, []> var_5625_equation_0 = const()[name = tensor<string, []>("op_5625_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5625_cast = einsum(equation = var_5625_equation_0, values = (var_5561_cast, var_5612_cast));
            tensor<string, []> var_5627_equation_0 = const()[name = tensor<string, []>("op_5627_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5627_cast = einsum(equation = var_5627_equation_0, values = (var_5565_cast, var_5613_cast));
            tensor<string, []> var_5629_equation_0 = const()[name = tensor<string, []>("op_5629_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5629_cast = einsum(equation = var_5629_equation_0, values = (var_5569_cast, var_5614_cast));
            tensor<string, []> var_5631_equation_0 = const()[name = tensor<string, []>("op_5631_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5631_cast = einsum(equation = var_5631_equation_0, values = (var_5573_cast, var_5615_cast));
            tensor<bool, []> input_353_interleave_0 = const()[name = tensor<string, []>("input_353_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_353_cast = concat(axis = var_4272, interleave = input_353_interleave_0, values = (var_5617_cast, var_5619_cast, var_5621_cast, var_5623_cast, var_5625_cast, var_5627_cast, var_5629_cast, var_5631_cast));
            tensor<int32, [2]> var_5637 = const()[name = tensor<string, []>("op_5637"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5639 = const()[name = tensor<string, []>("op_5639"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_5641_pad_type_0 = const()[name = tensor<string, []>("op_5641_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_5641_pad_0 = const()[name = tensor<string, []>("op_5641_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1452909056)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1456185920)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5641_cast = conv(bias = up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_5639, groups = var_4272, pad = var_5641_pad_0, pad_type = var_5641_pad_type_0, strides = var_5637, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_353_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_57_cast = add(x = var_5641_cast, y = inputs_55_cast);
            tensor<int32, [1]> var_5645 = const()[name = tensor<string, []>("op_5645"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_57_cast = reduce_mean(axes = var_5645, keep_dims = var_4267, x = inputs_57_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_57_cast = sub(x = inputs_57_cast, y = channels_mean_57_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_57_cast = mul(x = zero_mean_57_cast, y = zero_mean_57_cast);
            tensor<int32, [1]> var_5649 = const()[name = tensor<string, []>("op_5649"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_5650_cast = reduce_mean(axes = var_5649, keep_dims = var_4267, x = zero_mean_sq_57_cast);
            tensor<fp16, []> var_5651_to_fp16 = const()[name = tensor<string, []>("op_5651_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_5652_cast = add(x = var_5650_cast, y = var_5651_to_fp16);
            tensor<fp16, []> denom_57_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_57_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_57_cast = rsqrt(epsilon = denom_57_epsilon_0_to_fp16, x = var_5652_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_57_cast = mul(x = zero_mean_57_cast, y = denom_57_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_5656_to_fp16 = const()[name = tensor<string, []>("op_5656_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1456188544)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5657_cast = add(x = out_57_cast, y = var_5656_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_5659_to_fp16 = const()[name = tensor<string, []>("op_5659_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1456191168)))];
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_209_cast = mul(x = var_5657_cast, y = var_5659_to_fp16);
            tensor<int32, [2]> var_5666 = const()[name = tensor<string, []>("op_5666"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5668 = const()[name = tensor<string, []>("op_5668"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_39_pad_type_0 = const()[name = tensor<string, []>("q_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_39_pad_0 = const()[name = tensor<string, []>("q_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1456193792)))];
            tensor<fp16, [2, 1280, 1, 256]> q_39_cast = conv(dilations = var_5668, groups = var_4272, pad = q_39_pad_0, pad_type = q_39_pad_type_0, strides = var_5666, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_209_cast);
            tensor<int32, [2]> var_5672 = const()[name = tensor<string, []>("op_5672"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5674 = const()[name = tensor<string, []>("op_5674"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_77_pad_type_0 = const()[name = tensor<string, []>("k_77_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_77_pad_0 = const()[name = tensor<string, []>("k_77_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1459470656)))];
            tensor<fp16, [2, 1280, 1, 77]> k_77_cast = conv(dilations = var_5674, groups = var_4272, pad = k_77_pad_0, pad_type = k_77_pad_type_0, strides = var_5672, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_5678 = const()[name = tensor<string, []>("op_5678"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5680 = const()[name = tensor<string, []>("op_5680"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_39_pad_type_0 = const()[name = tensor<string, []>("v_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_39_pad_0 = const()[name = tensor<string, []>("v_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 768, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [1280, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1461436800)))];
            tensor<fp16, [2, 1280, 1, 77]> v_39_cast = conv(dilations = var_5680, groups = var_4272, pad = v_39_pad_0, pad_type = v_39_pad_type_0, strides = var_5678, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_5684_begin_0 = const()[name = tensor<string, []>("op_5684_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5684_end_0 = const()[name = tensor<string, []>("op_5684_end_0"), val = tensor<int32, [4]>([2, 160, 1, 256])];
            tensor<bool, [4]> var_5684_end_mask_0 = const()[name = tensor<string, []>("op_5684_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5684_cast = slice_by_index(begin = var_5684_begin_0, end = var_5684_end_0, end_mask = var_5684_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_5688_begin_0 = const()[name = tensor<string, []>("op_5688_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_5688_end_0 = const()[name = tensor<string, []>("op_5688_end_0"), val = tensor<int32, [4]>([2, 320, 1, 256])];
            tensor<bool, [4]> var_5688_end_mask_0 = const()[name = tensor<string, []>("op_5688_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5688_cast = slice_by_index(begin = var_5688_begin_0, end = var_5688_end_0, end_mask = var_5688_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_5692_begin_0 = const()[name = tensor<string, []>("op_5692_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_5692_end_0 = const()[name = tensor<string, []>("op_5692_end_0"), val = tensor<int32, [4]>([2, 480, 1, 256])];
            tensor<bool, [4]> var_5692_end_mask_0 = const()[name = tensor<string, []>("op_5692_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5692_cast = slice_by_index(begin = var_5692_begin_0, end = var_5692_end_0, end_mask = var_5692_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_5696_begin_0 = const()[name = tensor<string, []>("op_5696_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_5696_end_0 = const()[name = tensor<string, []>("op_5696_end_0"), val = tensor<int32, [4]>([2, 640, 1, 256])];
            tensor<bool, [4]> var_5696_end_mask_0 = const()[name = tensor<string, []>("op_5696_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5696_cast = slice_by_index(begin = var_5696_begin_0, end = var_5696_end_0, end_mask = var_5696_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_5700_begin_0 = const()[name = tensor<string, []>("op_5700_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_5700_end_0 = const()[name = tensor<string, []>("op_5700_end_0"), val = tensor<int32, [4]>([2, 800, 1, 256])];
            tensor<bool, [4]> var_5700_end_mask_0 = const()[name = tensor<string, []>("op_5700_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5700_cast = slice_by_index(begin = var_5700_begin_0, end = var_5700_end_0, end_mask = var_5700_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_5704_begin_0 = const()[name = tensor<string, []>("op_5704_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_5704_end_0 = const()[name = tensor<string, []>("op_5704_end_0"), val = tensor<int32, [4]>([2, 960, 1, 256])];
            tensor<bool, [4]> var_5704_end_mask_0 = const()[name = tensor<string, []>("op_5704_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5704_cast = slice_by_index(begin = var_5704_begin_0, end = var_5704_end_0, end_mask = var_5704_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_5708_begin_0 = const()[name = tensor<string, []>("op_5708_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_5708_end_0 = const()[name = tensor<string, []>("op_5708_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 256])];
            tensor<bool, [4]> var_5708_end_mask_0 = const()[name = tensor<string, []>("op_5708_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5708_cast = slice_by_index(begin = var_5708_begin_0, end = var_5708_end_0, end_mask = var_5708_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> var_5712_begin_0 = const()[name = tensor<string, []>("op_5712_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_5712_end_0 = const()[name = tensor<string, []>("op_5712_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 256])];
            tensor<bool, [4]> var_5712_end_mask_0 = const()[name = tensor<string, []>("op_5712_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 256]> var_5712_cast = slice_by_index(begin = var_5712_begin_0, end = var_5712_end_0, end_mask = var_5712_end_mask_0, x = q_39_cast);
            tensor<int32, [4]> k_79_perm_0 = const()[name = tensor<string, []>("k_79_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_5719_begin_0 = const()[name = tensor<string, []>("op_5719_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5719_end_0 = const()[name = tensor<string, []>("op_5719_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_5719_end_mask_0 = const()[name = tensor<string, []>("op_5719_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 1280]> transpose_12 = transpose(perm = k_79_perm_0, x = k_77_cast);
            tensor<fp16, [2, 77, 1, 160]> var_5719_cast = slice_by_index(begin = var_5719_begin_0, end = var_5719_end_0, end_mask = var_5719_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_5723_begin_0 = const()[name = tensor<string, []>("op_5723_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_5723_end_0 = const()[name = tensor<string, []>("op_5723_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_5723_end_mask_0 = const()[name = tensor<string, []>("op_5723_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5723_cast = slice_by_index(begin = var_5723_begin_0, end = var_5723_end_0, end_mask = var_5723_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_5727_begin_0 = const()[name = tensor<string, []>("op_5727_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_5727_end_0 = const()[name = tensor<string, []>("op_5727_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_5727_end_mask_0 = const()[name = tensor<string, []>("op_5727_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5727_cast = slice_by_index(begin = var_5727_begin_0, end = var_5727_end_0, end_mask = var_5727_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_5731_begin_0 = const()[name = tensor<string, []>("op_5731_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_5731_end_0 = const()[name = tensor<string, []>("op_5731_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_5731_end_mask_0 = const()[name = tensor<string, []>("op_5731_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5731_cast = slice_by_index(begin = var_5731_begin_0, end = var_5731_end_0, end_mask = var_5731_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_5735_begin_0 = const()[name = tensor<string, []>("op_5735_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 640])];
            tensor<int32, [4]> var_5735_end_0 = const()[name = tensor<string, []>("op_5735_end_0"), val = tensor<int32, [4]>([2, 77, 1, 800])];
            tensor<bool, [4]> var_5735_end_mask_0 = const()[name = tensor<string, []>("op_5735_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5735_cast = slice_by_index(begin = var_5735_begin_0, end = var_5735_end_0, end_mask = var_5735_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_5739_begin_0 = const()[name = tensor<string, []>("op_5739_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 800])];
            tensor<int32, [4]> var_5739_end_0 = const()[name = tensor<string, []>("op_5739_end_0"), val = tensor<int32, [4]>([2, 77, 1, 960])];
            tensor<bool, [4]> var_5739_end_mask_0 = const()[name = tensor<string, []>("op_5739_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5739_cast = slice_by_index(begin = var_5739_begin_0, end = var_5739_end_0, end_mask = var_5739_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_5743_begin_0 = const()[name = tensor<string, []>("op_5743_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 960])];
            tensor<int32, [4]> var_5743_end_0 = const()[name = tensor<string, []>("op_5743_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1120])];
            tensor<bool, [4]> var_5743_end_mask_0 = const()[name = tensor<string, []>("op_5743_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5743_cast = slice_by_index(begin = var_5743_begin_0, end = var_5743_end_0, end_mask = var_5743_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_5747_begin_0 = const()[name = tensor<string, []>("op_5747_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1120])];
            tensor<int32, [4]> var_5747_end_0 = const()[name = tensor<string, []>("op_5747_end_0"), val = tensor<int32, [4]>([2, 77, 1, 1280])];
            tensor<bool, [4]> var_5747_end_mask_0 = const()[name = tensor<string, []>("op_5747_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 160]> var_5747_cast = slice_by_index(begin = var_5747_begin_0, end = var_5747_end_0, end_mask = var_5747_end_mask_0, x = transpose_12);
            tensor<int32, [4]> var_5749_begin_0 = const()[name = tensor<string, []>("op_5749_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5749_end_0 = const()[name = tensor<string, []>("op_5749_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_5749_end_mask_0 = const()[name = tensor<string, []>("op_5749_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5749_cast = slice_by_index(begin = var_5749_begin_0, end = var_5749_end_0, end_mask = var_5749_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_5753_begin_0 = const()[name = tensor<string, []>("op_5753_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_5753_end_0 = const()[name = tensor<string, []>("op_5753_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_5753_end_mask_0 = const()[name = tensor<string, []>("op_5753_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5753_cast = slice_by_index(begin = var_5753_begin_0, end = var_5753_end_0, end_mask = var_5753_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_5757_begin_0 = const()[name = tensor<string, []>("op_5757_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_5757_end_0 = const()[name = tensor<string, []>("op_5757_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_5757_end_mask_0 = const()[name = tensor<string, []>("op_5757_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5757_cast = slice_by_index(begin = var_5757_begin_0, end = var_5757_end_0, end_mask = var_5757_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_5761_begin_0 = const()[name = tensor<string, []>("op_5761_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_5761_end_0 = const()[name = tensor<string, []>("op_5761_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_5761_end_mask_0 = const()[name = tensor<string, []>("op_5761_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5761_cast = slice_by_index(begin = var_5761_begin_0, end = var_5761_end_0, end_mask = var_5761_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_5765_begin_0 = const()[name = tensor<string, []>("op_5765_begin_0"), val = tensor<int32, [4]>([0, 640, 0, 0])];
            tensor<int32, [4]> var_5765_end_0 = const()[name = tensor<string, []>("op_5765_end_0"), val = tensor<int32, [4]>([2, 800, 1, 77])];
            tensor<bool, [4]> var_5765_end_mask_0 = const()[name = tensor<string, []>("op_5765_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5765_cast = slice_by_index(begin = var_5765_begin_0, end = var_5765_end_0, end_mask = var_5765_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_5769_begin_0 = const()[name = tensor<string, []>("op_5769_begin_0"), val = tensor<int32, [4]>([0, 800, 0, 0])];
            tensor<int32, [4]> var_5769_end_0 = const()[name = tensor<string, []>("op_5769_end_0"), val = tensor<int32, [4]>([2, 960, 1, 77])];
            tensor<bool, [4]> var_5769_end_mask_0 = const()[name = tensor<string, []>("op_5769_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5769_cast = slice_by_index(begin = var_5769_begin_0, end = var_5769_end_0, end_mask = var_5769_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_5773_begin_0 = const()[name = tensor<string, []>("op_5773_begin_0"), val = tensor<int32, [4]>([0, 960, 0, 0])];
            tensor<int32, [4]> var_5773_end_0 = const()[name = tensor<string, []>("op_5773_end_0"), val = tensor<int32, [4]>([2, 1120, 1, 77])];
            tensor<bool, [4]> var_5773_end_mask_0 = const()[name = tensor<string, []>("op_5773_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5773_cast = slice_by_index(begin = var_5773_begin_0, end = var_5773_end_0, end_mask = var_5773_end_mask_0, x = v_39_cast);
            tensor<int32, [4]> var_5777_begin_0 = const()[name = tensor<string, []>("op_5777_begin_0"), val = tensor<int32, [4]>([0, 1120, 0, 0])];
            tensor<int32, [4]> var_5777_end_0 = const()[name = tensor<string, []>("op_5777_end_0"), val = tensor<int32, [4]>([2, 1280, 1, 77])];
            tensor<bool, [4]> var_5777_end_mask_0 = const()[name = tensor<string, []>("op_5777_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 160, 1, 77]> var_5777_cast = slice_by_index(begin = var_5777_begin_0, end = var_5777_end_0, end_mask = var_5777_end_mask_0, x = v_39_cast);
            tensor<string, []> var_5781_equation_0 = const()[name = tensor<string, []>("op_5781_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5781_cast = einsum(equation = var_5781_equation_0, values = (var_5719_cast, var_5684_cast));
            tensor<fp16, []> var_5782_to_fp16 = const()[name = tensor<string, []>("op_5782_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_305_cast = mul(x = var_5781_cast, y = var_5782_to_fp16);
            tensor<string, []> var_5785_equation_0 = const()[name = tensor<string, []>("op_5785_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5785_cast = einsum(equation = var_5785_equation_0, values = (var_5723_cast, var_5688_cast));
            tensor<fp16, []> var_5786_to_fp16 = const()[name = tensor<string, []>("op_5786_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_307_cast = mul(x = var_5785_cast, y = var_5786_to_fp16);
            tensor<string, []> var_5789_equation_0 = const()[name = tensor<string, []>("op_5789_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5789_cast = einsum(equation = var_5789_equation_0, values = (var_5727_cast, var_5692_cast));
            tensor<fp16, []> var_5790_to_fp16 = const()[name = tensor<string, []>("op_5790_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_309_cast = mul(x = var_5789_cast, y = var_5790_to_fp16);
            tensor<string, []> var_5793_equation_0 = const()[name = tensor<string, []>("op_5793_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5793_cast = einsum(equation = var_5793_equation_0, values = (var_5731_cast, var_5696_cast));
            tensor<fp16, []> var_5794_to_fp16 = const()[name = tensor<string, []>("op_5794_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_311_cast = mul(x = var_5793_cast, y = var_5794_to_fp16);
            tensor<string, []> var_5797_equation_0 = const()[name = tensor<string, []>("op_5797_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5797_cast = einsum(equation = var_5797_equation_0, values = (var_5735_cast, var_5700_cast));
            tensor<fp16, []> var_5798_to_fp16 = const()[name = tensor<string, []>("op_5798_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_313_cast = mul(x = var_5797_cast, y = var_5798_to_fp16);
            tensor<string, []> var_5801_equation_0 = const()[name = tensor<string, []>("op_5801_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5801_cast = einsum(equation = var_5801_equation_0, values = (var_5739_cast, var_5704_cast));
            tensor<fp16, []> var_5802_to_fp16 = const()[name = tensor<string, []>("op_5802_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_315_cast = mul(x = var_5801_cast, y = var_5802_to_fp16);
            tensor<string, []> var_5805_equation_0 = const()[name = tensor<string, []>("op_5805_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5805_cast = einsum(equation = var_5805_equation_0, values = (var_5743_cast, var_5708_cast));
            tensor<fp16, []> var_5806_to_fp16 = const()[name = tensor<string, []>("op_5806_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_317_cast = mul(x = var_5805_cast, y = var_5806_to_fp16);
            tensor<string, []> var_5809_equation_0 = const()[name = tensor<string, []>("op_5809_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 256]> var_5809_cast = einsum(equation = var_5809_equation_0, values = (var_5747_cast, var_5712_cast));
            tensor<fp16, []> var_5810_to_fp16 = const()[name = tensor<string, []>("op_5810_to_fp16"), val = tensor<fp16, []>(0x1.43cp-4)];
            tensor<fp16, [2, 77, 1, 256]> aw_319_cast = mul(x = var_5809_cast, y = var_5810_to_fp16);
            tensor<fp16, [2, 77, 1, 256]> var_5812_cast = softmax(axis = var_4272, x = aw_305_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5813_cast = softmax(axis = var_4272, x = aw_307_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5814_cast = softmax(axis = var_4272, x = aw_309_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5815_cast = softmax(axis = var_4272, x = aw_311_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5816_cast = softmax(axis = var_4272, x = aw_313_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5817_cast = softmax(axis = var_4272, x = aw_315_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5818_cast = softmax(axis = var_4272, x = aw_317_cast);
            tensor<fp16, [2, 77, 1, 256]> var_5819_cast = softmax(axis = var_4272, x = aw_319_cast);
            tensor<string, []> var_5821_equation_0 = const()[name = tensor<string, []>("op_5821_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5821_cast = einsum(equation = var_5821_equation_0, values = (var_5749_cast, var_5812_cast));
            tensor<string, []> var_5823_equation_0 = const()[name = tensor<string, []>("op_5823_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5823_cast = einsum(equation = var_5823_equation_0, values = (var_5753_cast, var_5813_cast));
            tensor<string, []> var_5825_equation_0 = const()[name = tensor<string, []>("op_5825_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5825_cast = einsum(equation = var_5825_equation_0, values = (var_5757_cast, var_5814_cast));
            tensor<string, []> var_5827_equation_0 = const()[name = tensor<string, []>("op_5827_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5827_cast = einsum(equation = var_5827_equation_0, values = (var_5761_cast, var_5815_cast));
            tensor<string, []> var_5829_equation_0 = const()[name = tensor<string, []>("op_5829_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5829_cast = einsum(equation = var_5829_equation_0, values = (var_5765_cast, var_5816_cast));
            tensor<string, []> var_5831_equation_0 = const()[name = tensor<string, []>("op_5831_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5831_cast = einsum(equation = var_5831_equation_0, values = (var_5769_cast, var_5817_cast));
            tensor<string, []> var_5833_equation_0 = const()[name = tensor<string, []>("op_5833_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5833_cast = einsum(equation = var_5833_equation_0, values = (var_5773_cast, var_5818_cast));
            tensor<string, []> var_5835_equation_0 = const()[name = tensor<string, []>("op_5835_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 160, 1, 256]> var_5835_cast = einsum(equation = var_5835_equation_0, values = (var_5777_cast, var_5819_cast));
            tensor<bool, []> input_355_interleave_0 = const()[name = tensor<string, []>("input_355_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 1, 256]> input_355_cast = concat(axis = var_4272, interleave = input_355_interleave_0, values = (var_5821_cast, var_5823_cast, var_5825_cast, var_5827_cast, var_5829_cast, var_5831_cast, var_5833_cast, var_5835_cast));
            tensor<int32, [2]> var_5841 = const()[name = tensor<string, []>("op_5841"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5843 = const()[name = tensor<string, []>("op_5843"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_5845_pad_type_0 = const()[name = tensor<string, []>("op_5845_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_5845_pad_0 = const()[name = tensor<string, []>("op_5845_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1463402944)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1466679808)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5845_cast = conv(bias = up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_5843, groups = var_4272, pad = var_5845_pad_0, pad_type = var_5845_pad_type_0, strides = var_5841, weight = up_blocks_1_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_355_cast);
            tensor<fp16, [2, 1280, 1, 256]> inputs_59_cast = add(x = var_5845_cast, y = inputs_57_cast);
            tensor<int32, [1]> var_5849 = const()[name = tensor<string, []>("op_5849"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> channels_mean_59_cast = reduce_mean(axes = var_5849, keep_dims = var_4267, x = inputs_59_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_59_cast = sub(x = inputs_59_cast, y = channels_mean_59_cast);
            tensor<fp16, [2, 1280, 1, 256]> zero_mean_sq_59_cast = mul(x = zero_mean_59_cast, y = zero_mean_59_cast);
            tensor<int32, [1]> var_5853 = const()[name = tensor<string, []>("op_5853"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 256]> var_5854_cast = reduce_mean(axes = var_5853, keep_dims = var_4267, x = zero_mean_sq_59_cast);
            tensor<fp16, []> var_5855_to_fp16 = const()[name = tensor<string, []>("op_5855_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 256]> var_5856_cast = add(x = var_5854_cast, y = var_5855_to_fp16);
            tensor<fp16, []> denom_59_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_59_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 256]> denom_59_cast = rsqrt(epsilon = denom_59_epsilon_0_to_fp16, x = var_5856_cast);
            tensor<fp16, [2, 1280, 1, 256]> out_59_cast = mul(x = zero_mean_59_cast, y = denom_59_cast);
            tensor<fp16, [1, 1280, 1, 1]> var_5860_to_fp16 = const()[name = tensor<string, []>("op_5860_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1466682432)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5861_cast = add(x = out_59_cast, y = var_5860_to_fp16);
            tensor<fp16, [1, 1280, 1, 1]> var_5863_to_fp16 = const()[name = tensor<string, []>("op_5863_to_fp16"), val = tensor<fp16, [1, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1466685056)))];
            tensor<fp16, [2, 1280, 1, 256]> input_357_cast = mul(x = var_5861_cast, y = var_5863_to_fp16);
            tensor<int32, [2]> var_5871 = const()[name = tensor<string, []>("op_5871"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5873 = const()[name = tensor<string, []>("op_5873"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_5875_pad_type_0 = const()[name = tensor<string, []>("op_5875_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_5875_pad_0 = const()[name = tensor<string, []>("op_5875_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [10240, 1280, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [10240, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1466687680)))];
            tensor<fp16, [10240]> up_blocks_1_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [10240]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1492902144)))];
            tensor<fp16, [2, 10240, 1, 256]> var_5875_cast = conv(bias = up_blocks_1_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_5873, groups = var_4272, pad = var_5875_pad_0, pad_type = var_5875_pad_type_0, strides = var_5871, weight = up_blocks_1_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_357_cast);
            tensor<int32, [2]> var_5876_split_sizes_0 = const()[name = tensor<string, []>("op_5876_split_sizes_0"), val = tensor<int32, [2]>([5120, 5120])];
            tensor<int32, []> var_5876_axis_0 = const()[name = tensor<string, []>("op_5876_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 5120, 1, 256]> var_5876_cast_0, tensor<fp16, [2, 5120, 1, 256]> var_5876_cast_1 = split(axis = var_5876_axis_0, split_sizes = var_5876_split_sizes_0, x = var_5875_cast);
            tensor<string, []> var_5878_mode_0 = const()[name = tensor<string, []>("op_5878_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 5120, 1, 256]> var_5878_cast = gelu(mode = var_5878_mode_0, x = var_5876_cast_1);
            tensor<fp16, [2, 5120, 1, 256]> input_359_cast = mul(x = var_5876_cast_0, y = var_5878_cast);
            tensor<int32, [2]> var_5882 = const()[name = tensor<string, []>("op_5882"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5884 = const()[name = tensor<string, []>("op_5884"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_5886_pad_type_0 = const()[name = tensor<string, []>("op_5886_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_5886_pad_0 = const()[name = tensor<string, []>("op_5886_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 5120, 1, 1]> up_blocks_1_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [1280, 5120, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1492922688)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1506029952)))];
            tensor<fp16, [2, 1280, 1, 256]> var_5886_cast = conv(bias = up_blocks_1_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_5884, groups = var_4272, pad = var_5886_pad_0, pad_type = var_5886_pad_type_0, strides = var_5882, weight = up_blocks_1_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_359_cast);
            tensor<fp16, [2, 1280, 1, 256]> hidden_states_213_cast = add(x = var_5886_cast, y = inputs_59_cast);
            tensor<int32, [4]> var_5888 = const()[name = tensor<string, []>("op_5888"), val = tensor<int32, [4]>([2, 1280, 16, 16])];
            tensor<fp16, [2, 1280, 16, 16]> input_361_cast = reshape(shape = var_5888, x = hidden_states_213_cast);
            tensor<int32, [2]> var_5892 = const()[name = tensor<string, []>("op_5892"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5894 = const()[name = tensor<string, []>("op_5894"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_215_pad_type_0 = const()[name = tensor<string, []>("hidden_states_215_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_215_pad_0 = const()[name = tensor<string, []>("hidden_states_215_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1280, 1280, 1, 1]> up_blocks_1_attentions_2_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_proj_out_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1506032576)))];
            tensor<fp16, [1280]> up_blocks_1_attentions_2_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_attentions_2_proj_out_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1509309440)))];
            tensor<fp16, [2, 1280, 16, 16]> hidden_states_215_cast = conv(bias = up_blocks_1_attentions_2_proj_out_bias_to_fp16, dilations = var_5894, groups = var_4272, pad = hidden_states_215_pad_0, pad_type = hidden_states_215_pad_type_0, strides = var_5892, weight = up_blocks_1_attentions_2_proj_out_weight_to_fp16, x = input_361_cast);
            tensor<fp16, [2, 1280, 16, 16]> input_363_cast = add(x = hidden_states_215_cast, y = hidden_states_203_cast);
            tensor<fp32, []> input_365_scale_factor_height_0 = const()[name = tensor<string, []>("input_365_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> input_365_scale_factor_width_0 = const()[name = tensor<string, []>("input_365_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [2, 1280, 32, 32]> input_365_cast = upsample_nearest_neighbor(scale_factor_height = input_365_scale_factor_height_0, scale_factor_width = input_365_scale_factor_width_0, x = input_363_cast);
            tensor<int32, [2]> var_5903 = const()[name = tensor<string, []>("op_5903"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5905 = const()[name = tensor<string, []>("op_5905"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_217_pad_type_0 = const()[name = tensor<string, []>("hidden_states_217_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_217_pad_0 = const()[name = tensor<string, []>("hidden_states_217_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [1280, 1280, 3, 3]> up_blocks_1_upsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_upsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [1280, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1509312064)))];
            tensor<fp16, [1280]> up_blocks_1_upsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_1_upsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1538803328)))];
            tensor<fp16, [2, 1280, 32, 32]> hidden_states_217_cast = conv(bias = up_blocks_1_upsamplers_0_conv_bias_to_fp16, dilations = var_5905, groups = var_4272, pad = hidden_states_217_pad_0, pad_type = hidden_states_217_pad_type_0, strides = var_5903, weight = up_blocks_1_upsamplers_0_conv_weight_to_fp16, x = input_365_cast);
            tensor<bool, []> var_5925 = const()[name = tensor<string, []>("op_5925"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_5930 = const()[name = tensor<string, []>("op_5930"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_367_interleave_0 = const()[name = tensor<string, []>("input_367_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1920, 32, 32]> input_367_cast = concat(axis = var_5930, interleave = input_367_interleave_0, values = (hidden_states_217_cast, input_115_cast));
            tensor<int32, [5]> reshape_168_shape_0 = const()[name = tensor<string, []>("reshape_168_shape_0"), val = tensor<int32, [5]>([2, 32, 60, 32, 32])];
            tensor<fp16, [2, 32, 60, 32, 32]> reshape_168_cast = reshape(shape = reshape_168_shape_0, x = input_367_cast);
            tensor<int32, [3]> reduce_mean_126_axes_0 = const()[name = tensor<string, []>("reduce_mean_126_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_126_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_126_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_126_cast = reduce_mean(axes = reduce_mean_126_axes_0, keep_dims = reduce_mean_126_keep_dims_0, x = reshape_168_cast);
            tensor<fp16, [2, 32, 60, 32, 32]> sub_84_cast = sub(x = reshape_168_cast, y = reduce_mean_126_cast);
            tensor<fp16, [2, 32, 60, 32, 32]> square_42_cast = square(x = sub_84_cast);
            tensor<int32, [3]> reduce_mean_128_axes_0 = const()[name = tensor<string, []>("reduce_mean_128_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_128_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_128_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_128_cast = reduce_mean(axes = reduce_mean_128_axes_0, keep_dims = reduce_mean_128_keep_dims_0, x = square_42_cast);
            tensor<fp16, []> add_84_y_0_to_fp16 = const()[name = tensor<string, []>("add_84_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_84_cast = add(x = reduce_mean_128_cast, y = add_84_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_42_cast = sqrt(x = add_84_cast);
            tensor<fp16, [2, 32, 60, 32, 32]> real_div_42_cast = real_div(x = sub_84_cast, y = sqrt_42_cast);
            tensor<int32, [4]> reshape_169_shape_0 = const()[name = tensor<string, []>("reshape_169_shape_0"), val = tensor<int32, [4]>([2, 1920, 32, 32])];
            tensor<fp16, [2, 1920, 32, 32]> reshape_169_cast = reshape(shape = reshape_169_shape_0, x = real_div_42_cast);
            tensor<fp16, [1920]> add_85_mean_0_to_fp16 = const()[name = tensor<string, []>("add_85_mean_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1538805952)))];
            tensor<fp16, [1920]> add_85_variance_0_to_fp16 = const()[name = tensor<string, []>("add_85_variance_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1538809856)))];
            tensor<fp16, [1920]> add_85_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_85_gamma_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1538813760)))];
            tensor<fp16, [1920]> add_85_beta_0_to_fp16 = const()[name = tensor<string, []>("add_85_beta_0_to_fp16"), val = tensor<fp16, [1920]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1538817664)))];
            tensor<fp16, []> add_85_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_85_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1920, 32, 32]> add_85_cast = batch_norm(beta = add_85_beta_0_to_fp16, epsilon = add_85_epsilon_0_to_fp16, gamma = add_85_gamma_0_to_fp16, mean = add_85_mean_0_to_fp16, variance = add_85_variance_0_to_fp16, x = reshape_169_cast);
            tensor<fp16, [2, 1920, 32, 32]> input_371_cast = silu(x = add_85_cast);
            tensor<int32, [2]> var_5959 = const()[name = tensor<string, []>("op_5959"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5961 = const()[name = tensor<string, []>("op_5961"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_219_pad_type_0 = const()[name = tensor<string, []>("hidden_states_219_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_219_pad_0 = const()[name = tensor<string, []>("hidden_states_219_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 1920, 3, 3]> up_blocks_2_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [640, 1920, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1538821568)))];
            tensor<fp16, [640]> up_blocks_2_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1560940032)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_219_cast = conv(bias = up_blocks_2_resnets_0_conv1_bias_to_fp16, dilations = var_5961, groups = var_5930, pad = hidden_states_219_pad_0, pad_type = hidden_states_219_pad_type_0, strides = var_5959, weight = up_blocks_2_resnets_0_conv1_weight_to_fp16, x = input_371_cast);
            tensor<int32, [2]> var_5967 = const()[name = tensor<string, []>("op_5967"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5969 = const()[name = tensor<string, []>("op_5969"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_33_pad_type_0 = const()[name = tensor<string, []>("temb_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_33_pad_0 = const()[name = tensor<string, []>("temb_33_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1280, 1, 1]> up_blocks_2_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [640, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1560941376)))];
            tensor<fp16, [640]> up_blocks_2_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1562579840)))];
            tensor<fp16, [2, 640, 1, 1]> temb_33_cast = conv(bias = up_blocks_2_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_5969, groups = var_5930, pad = temb_33_pad_0, pad_type = temb_33_pad_type_0, strides = var_5967, weight = up_blocks_2_resnets_0_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 640, 32, 32]> input_375_cast = add(x = hidden_states_219_cast, y = temb_33_cast);
            tensor<int32, [5]> reshape_172_shape_0 = const()[name = tensor<string, []>("reshape_172_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_172_cast = reshape(shape = reshape_172_shape_0, x = input_375_cast);
            tensor<int32, [3]> reduce_mean_129_axes_0 = const()[name = tensor<string, []>("reduce_mean_129_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_129_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_129_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_129_cast = reduce_mean(axes = reduce_mean_129_axes_0, keep_dims = reduce_mean_129_keep_dims_0, x = reshape_172_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_86_cast = sub(x = reshape_172_cast, y = reduce_mean_129_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_43_cast = square(x = sub_86_cast);
            tensor<int32, [3]> reduce_mean_131_axes_0 = const()[name = tensor<string, []>("reduce_mean_131_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_131_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_131_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_131_cast = reduce_mean(axes = reduce_mean_131_axes_0, keep_dims = reduce_mean_131_keep_dims_0, x = square_43_cast);
            tensor<fp16, []> add_86_y_0_to_fp16 = const()[name = tensor<string, []>("add_86_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_86_cast = add(x = reduce_mean_131_cast, y = add_86_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_43_cast = sqrt(x = add_86_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_43_cast = real_div(x = sub_86_cast, y = sqrt_43_cast);
            tensor<int32, [4]> reshape_173_shape_0 = const()[name = tensor<string, []>("reshape_173_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_173_cast = reshape(shape = reshape_173_shape_0, x = real_div_43_cast);
            tensor<fp16, [640]> add_87_mean_0_to_fp16 = const()[name = tensor<string, []>("add_87_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1562581184)))];
            tensor<fp16, [640]> add_87_variance_0_to_fp16 = const()[name = tensor<string, []>("add_87_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1562582528)))];
            tensor<fp16, [640]> add_87_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_87_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1562583872)))];
            tensor<fp16, [640]> add_87_beta_0_to_fp16 = const()[name = tensor<string, []>("add_87_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1562585216)))];
            tensor<fp16, []> add_87_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_87_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_87_cast = batch_norm(beta = add_87_beta_0_to_fp16, epsilon = add_87_epsilon_0_to_fp16, gamma = add_87_gamma_0_to_fp16, mean = add_87_mean_0_to_fp16, variance = add_87_variance_0_to_fp16, x = reshape_173_cast);
            tensor<fp16, [2, 640, 32, 32]> input_379_cast = silu(x = add_87_cast);
            tensor<int32, [2]> var_5979 = const()[name = tensor<string, []>("op_5979"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5981 = const()[name = tensor<string, []>("op_5981"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_221_pad_type_0 = const()[name = tensor<string, []>("hidden_states_221_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_221_pad_0 = const()[name = tensor<string, []>("hidden_states_221_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> up_blocks_2_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1562586560)))];
            tensor<fp16, [640]> up_blocks_2_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1569959424)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_221_cast = conv(bias = up_blocks_2_resnets_0_conv2_bias_to_fp16, dilations = var_5981, groups = var_5930, pad = hidden_states_221_pad_0, pad_type = hidden_states_221_pad_type_0, strides = var_5979, weight = up_blocks_2_resnets_0_conv2_weight_to_fp16, x = input_379_cast);
            tensor<int32, [2]> var_5986 = const()[name = tensor<string, []>("op_5986"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5988 = const()[name = tensor<string, []>("op_5988"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_17_pad_type_0 = const()[name = tensor<string, []>("x_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_17_pad_0 = const()[name = tensor<string, []>("x_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1920, 1, 1]> up_blocks_2_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [640, 1920, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1569960768)))];
            tensor<fp16, [640]> up_blocks_2_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1572418432)))];
            tensor<fp16, [2, 640, 32, 32]> x_17_cast = conv(bias = up_blocks_2_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_5988, groups = var_5930, pad = x_17_pad_0, pad_type = x_17_pad_type_0, strides = var_5986, weight = up_blocks_2_resnets_0_conv_shortcut_weight_to_fp16, x = input_367_cast);
            tensor<fp16, [2, 640, 32, 32]> hidden_states_223_cast = add(x = x_17_cast, y = hidden_states_221_cast);
            tensor<int32, [5]> reshape_176_shape_0 = const()[name = tensor<string, []>("reshape_176_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_176_cast = reshape(shape = reshape_176_shape_0, x = hidden_states_223_cast);
            tensor<int32, [3]> reduce_mean_132_axes_0 = const()[name = tensor<string, []>("reduce_mean_132_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_132_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_132_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_132_cast = reduce_mean(axes = reduce_mean_132_axes_0, keep_dims = reduce_mean_132_keep_dims_0, x = reshape_176_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_88_cast = sub(x = reshape_176_cast, y = reduce_mean_132_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_44_cast = square(x = sub_88_cast);
            tensor<int32, [3]> reduce_mean_134_axes_0 = const()[name = tensor<string, []>("reduce_mean_134_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_134_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_134_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_134_cast = reduce_mean(axes = reduce_mean_134_axes_0, keep_dims = reduce_mean_134_keep_dims_0, x = square_44_cast);
            tensor<fp16, []> add_88_y_0_to_fp16 = const()[name = tensor<string, []>("add_88_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_88_cast = add(x = reduce_mean_134_cast, y = add_88_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_44_cast = sqrt(x = add_88_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_44_cast = real_div(x = sub_88_cast, y = sqrt_44_cast);
            tensor<int32, [4]> reshape_177_shape_0 = const()[name = tensor<string, []>("reshape_177_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_177_cast = reshape(shape = reshape_177_shape_0, x = real_div_44_cast);
            tensor<fp16, [640]> add_89_mean_0_to_fp16 = const()[name = tensor<string, []>("add_89_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1572419776)))];
            tensor<fp16, [640]> add_89_variance_0_to_fp16 = const()[name = tensor<string, []>("add_89_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1572421120)))];
            tensor<fp16, [640]> add_89_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_89_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1572422464)))];
            tensor<fp16, [640]> add_89_beta_0_to_fp16 = const()[name = tensor<string, []>("add_89_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1572423808)))];
            tensor<fp16, []> add_89_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_89_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_89_cast = batch_norm(beta = add_89_beta_0_to_fp16, epsilon = add_89_epsilon_0_to_fp16, gamma = add_89_gamma_0_to_fp16, mean = add_89_mean_0_to_fp16, variance = add_89_variance_0_to_fp16, x = reshape_177_cast);
            tensor<int32, [2]> var_6008 = const()[name = tensor<string, []>("op_6008"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6010 = const()[name = tensor<string, []>("op_6010"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_225_pad_type_0 = const()[name = tensor<string, []>("hidden_states_225_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_225_pad_0 = const()[name = tensor<string, []>("hidden_states_225_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_proj_in_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1572425152)))];
            tensor<fp16, [640]> up_blocks_2_attentions_0_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_proj_in_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1573244416)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_225_cast = conv(bias = up_blocks_2_attentions_0_proj_in_bias_to_fp16, dilations = var_6010, groups = var_5930, pad = hidden_states_225_pad_0, pad_type = hidden_states_225_pad_type_0, strides = var_6008, weight = up_blocks_2_attentions_0_proj_in_weight_to_fp16, x = add_89_cast);
            tensor<int32, [4]> var_6015 = const()[name = tensor<string, []>("op_6015"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<fp16, [2, 640, 1, 1024]> inputs_61_cast = reshape(shape = var_6015, x = hidden_states_225_cast);
            tensor<int32, [1]> var_6025 = const()[name = tensor<string, []>("op_6025"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_61_cast = reduce_mean(axes = var_6025, keep_dims = var_5925, x = inputs_61_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_61_cast = sub(x = inputs_61_cast, y = channels_mean_61_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_61_cast = mul(x = zero_mean_61_cast, y = zero_mean_61_cast);
            tensor<int32, [1]> var_6029 = const()[name = tensor<string, []>("op_6029"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_6030_cast = reduce_mean(axes = var_6029, keep_dims = var_5925, x = zero_mean_sq_61_cast);
            tensor<fp16, []> var_6031_to_fp16 = const()[name = tensor<string, []>("op_6031_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_6032_cast = add(x = var_6030_cast, y = var_6031_to_fp16);
            tensor<fp16, []> denom_61_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_61_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_61_cast = rsqrt(epsilon = denom_61_epsilon_0_to_fp16, x = var_6032_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_61_cast = mul(x = zero_mean_61_cast, y = denom_61_cast);
            tensor<fp16, [1, 640, 1, 1]> var_6036_to_fp16 = const()[name = tensor<string, []>("op_6036_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1573245760)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6037_cast = add(x = out_61_cast, y = var_6036_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_6039_to_fp16 = const()[name = tensor<string, []>("op_6039_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1573247104)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_227_cast = mul(x = var_6037_cast, y = var_6039_to_fp16);
            tensor<int32, [2]> var_6046 = const()[name = tensor<string, []>("op_6046"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6048 = const()[name = tensor<string, []>("op_6048"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_41_pad_type_0 = const()[name = tensor<string, []>("q_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_41_pad_0 = const()[name = tensor<string, []>("q_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1573248448)))];
            tensor<fp16, [2, 640, 1, 1024]> q_41_cast = conv(dilations = var_6048, groups = var_5930, pad = q_41_pad_0, pad_type = q_41_pad_type_0, strides = var_6046, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_227_cast);
            tensor<int32, [2]> var_6052 = const()[name = tensor<string, []>("op_6052"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6054 = const()[name = tensor<string, []>("op_6054"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_81_pad_type_0 = const()[name = tensor<string, []>("k_81_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_81_pad_0 = const()[name = tensor<string, []>("k_81_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1574067712)))];
            tensor<fp16, [2, 640, 1, 1024]> k_81_cast = conv(dilations = var_6054, groups = var_5930, pad = k_81_pad_0, pad_type = k_81_pad_type_0, strides = var_6052, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_227_cast);
            tensor<int32, [2]> var_6058 = const()[name = tensor<string, []>("op_6058"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6060 = const()[name = tensor<string, []>("op_6060"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_41_pad_type_0 = const()[name = tensor<string, []>("v_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_41_pad_0 = const()[name = tensor<string, []>("v_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1574886976)))];
            tensor<fp16, [2, 640, 1, 1024]> v_41_cast = conv(dilations = var_6060, groups = var_5930, pad = v_41_pad_0, pad_type = v_41_pad_type_0, strides = var_6058, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_227_cast);
            tensor<int32, [4]> var_6064_begin_0 = const()[name = tensor<string, []>("op_6064_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6064_end_0 = const()[name = tensor<string, []>("op_6064_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_6064_end_mask_0 = const()[name = tensor<string, []>("op_6064_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6064_cast = slice_by_index(begin = var_6064_begin_0, end = var_6064_end_0, end_mask = var_6064_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_6068_begin_0 = const()[name = tensor<string, []>("op_6068_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_6068_end_0 = const()[name = tensor<string, []>("op_6068_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_6068_end_mask_0 = const()[name = tensor<string, []>("op_6068_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6068_cast = slice_by_index(begin = var_6068_begin_0, end = var_6068_end_0, end_mask = var_6068_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_6072_begin_0 = const()[name = tensor<string, []>("op_6072_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_6072_end_0 = const()[name = tensor<string, []>("op_6072_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_6072_end_mask_0 = const()[name = tensor<string, []>("op_6072_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6072_cast = slice_by_index(begin = var_6072_begin_0, end = var_6072_end_0, end_mask = var_6072_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_6076_begin_0 = const()[name = tensor<string, []>("op_6076_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_6076_end_0 = const()[name = tensor<string, []>("op_6076_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_6076_end_mask_0 = const()[name = tensor<string, []>("op_6076_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6076_cast = slice_by_index(begin = var_6076_begin_0, end = var_6076_end_0, end_mask = var_6076_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_6080_begin_0 = const()[name = tensor<string, []>("op_6080_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_6080_end_0 = const()[name = tensor<string, []>("op_6080_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_6080_end_mask_0 = const()[name = tensor<string, []>("op_6080_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6080_cast = slice_by_index(begin = var_6080_begin_0, end = var_6080_end_0, end_mask = var_6080_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_6084_begin_0 = const()[name = tensor<string, []>("op_6084_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_6084_end_0 = const()[name = tensor<string, []>("op_6084_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_6084_end_mask_0 = const()[name = tensor<string, []>("op_6084_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6084_cast = slice_by_index(begin = var_6084_begin_0, end = var_6084_end_0, end_mask = var_6084_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_6088_begin_0 = const()[name = tensor<string, []>("op_6088_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_6088_end_0 = const()[name = tensor<string, []>("op_6088_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_6088_end_mask_0 = const()[name = tensor<string, []>("op_6088_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6088_cast = slice_by_index(begin = var_6088_begin_0, end = var_6088_end_0, end_mask = var_6088_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> var_6092_begin_0 = const()[name = tensor<string, []>("op_6092_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_6092_end_0 = const()[name = tensor<string, []>("op_6092_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_6092_end_mask_0 = const()[name = tensor<string, []>("op_6092_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6092_cast = slice_by_index(begin = var_6092_begin_0, end = var_6092_end_0, end_mask = var_6092_end_mask_0, x = q_41_cast);
            tensor<int32, [4]> k_83_perm_0 = const()[name = tensor<string, []>("k_83_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_6099_begin_0 = const()[name = tensor<string, []>("op_6099_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6099_end_0 = const()[name = tensor<string, []>("op_6099_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 80])];
            tensor<bool, [4]> var_6099_end_mask_0 = const()[name = tensor<string, []>("op_6099_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 640]> transpose_11 = transpose(perm = k_83_perm_0, x = k_81_cast);
            tensor<fp16, [2, 1024, 1, 80]> var_6099_cast = slice_by_index(begin = var_6099_begin_0, end = var_6099_end_0, end_mask = var_6099_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_6103_begin_0 = const()[name = tensor<string, []>("op_6103_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_6103_end_0 = const()[name = tensor<string, []>("op_6103_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 160])];
            tensor<bool, [4]> var_6103_end_mask_0 = const()[name = tensor<string, []>("op_6103_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6103_cast = slice_by_index(begin = var_6103_begin_0, end = var_6103_end_0, end_mask = var_6103_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_6107_begin_0 = const()[name = tensor<string, []>("op_6107_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_6107_end_0 = const()[name = tensor<string, []>("op_6107_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 240])];
            tensor<bool, [4]> var_6107_end_mask_0 = const()[name = tensor<string, []>("op_6107_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6107_cast = slice_by_index(begin = var_6107_begin_0, end = var_6107_end_0, end_mask = var_6107_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_6111_begin_0 = const()[name = tensor<string, []>("op_6111_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_6111_end_0 = const()[name = tensor<string, []>("op_6111_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 320])];
            tensor<bool, [4]> var_6111_end_mask_0 = const()[name = tensor<string, []>("op_6111_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6111_cast = slice_by_index(begin = var_6111_begin_0, end = var_6111_end_0, end_mask = var_6111_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_6115_begin_0 = const()[name = tensor<string, []>("op_6115_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_6115_end_0 = const()[name = tensor<string, []>("op_6115_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 400])];
            tensor<bool, [4]> var_6115_end_mask_0 = const()[name = tensor<string, []>("op_6115_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6115_cast = slice_by_index(begin = var_6115_begin_0, end = var_6115_end_0, end_mask = var_6115_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_6119_begin_0 = const()[name = tensor<string, []>("op_6119_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 400])];
            tensor<int32, [4]> var_6119_end_0 = const()[name = tensor<string, []>("op_6119_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 480])];
            tensor<bool, [4]> var_6119_end_mask_0 = const()[name = tensor<string, []>("op_6119_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6119_cast = slice_by_index(begin = var_6119_begin_0, end = var_6119_end_0, end_mask = var_6119_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_6123_begin_0 = const()[name = tensor<string, []>("op_6123_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_6123_end_0 = const()[name = tensor<string, []>("op_6123_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 560])];
            tensor<bool, [4]> var_6123_end_mask_0 = const()[name = tensor<string, []>("op_6123_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6123_cast = slice_by_index(begin = var_6123_begin_0, end = var_6123_end_0, end_mask = var_6123_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_6127_begin_0 = const()[name = tensor<string, []>("op_6127_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 560])];
            tensor<int32, [4]> var_6127_end_0 = const()[name = tensor<string, []>("op_6127_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 640])];
            tensor<bool, [4]> var_6127_end_mask_0 = const()[name = tensor<string, []>("op_6127_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6127_cast = slice_by_index(begin = var_6127_begin_0, end = var_6127_end_0, end_mask = var_6127_end_mask_0, x = transpose_11);
            tensor<int32, [4]> var_6129_begin_0 = const()[name = tensor<string, []>("op_6129_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6129_end_0 = const()[name = tensor<string, []>("op_6129_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_6129_end_mask_0 = const()[name = tensor<string, []>("op_6129_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6129_cast = slice_by_index(begin = var_6129_begin_0, end = var_6129_end_0, end_mask = var_6129_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_6133_begin_0 = const()[name = tensor<string, []>("op_6133_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_6133_end_0 = const()[name = tensor<string, []>("op_6133_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_6133_end_mask_0 = const()[name = tensor<string, []>("op_6133_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6133_cast = slice_by_index(begin = var_6133_begin_0, end = var_6133_end_0, end_mask = var_6133_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_6137_begin_0 = const()[name = tensor<string, []>("op_6137_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_6137_end_0 = const()[name = tensor<string, []>("op_6137_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_6137_end_mask_0 = const()[name = tensor<string, []>("op_6137_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6137_cast = slice_by_index(begin = var_6137_begin_0, end = var_6137_end_0, end_mask = var_6137_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_6141_begin_0 = const()[name = tensor<string, []>("op_6141_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_6141_end_0 = const()[name = tensor<string, []>("op_6141_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_6141_end_mask_0 = const()[name = tensor<string, []>("op_6141_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6141_cast = slice_by_index(begin = var_6141_begin_0, end = var_6141_end_0, end_mask = var_6141_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_6145_begin_0 = const()[name = tensor<string, []>("op_6145_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_6145_end_0 = const()[name = tensor<string, []>("op_6145_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_6145_end_mask_0 = const()[name = tensor<string, []>("op_6145_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6145_cast = slice_by_index(begin = var_6145_begin_0, end = var_6145_end_0, end_mask = var_6145_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_6149_begin_0 = const()[name = tensor<string, []>("op_6149_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_6149_end_0 = const()[name = tensor<string, []>("op_6149_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_6149_end_mask_0 = const()[name = tensor<string, []>("op_6149_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6149_cast = slice_by_index(begin = var_6149_begin_0, end = var_6149_end_0, end_mask = var_6149_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_6153_begin_0 = const()[name = tensor<string, []>("op_6153_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_6153_end_0 = const()[name = tensor<string, []>("op_6153_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_6153_end_mask_0 = const()[name = tensor<string, []>("op_6153_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6153_cast = slice_by_index(begin = var_6153_begin_0, end = var_6153_end_0, end_mask = var_6153_end_mask_0, x = v_41_cast);
            tensor<int32, [4]> var_6157_begin_0 = const()[name = tensor<string, []>("op_6157_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_6157_end_0 = const()[name = tensor<string, []>("op_6157_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_6157_end_mask_0 = const()[name = tensor<string, []>("op_6157_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6157_cast = slice_by_index(begin = var_6157_begin_0, end = var_6157_end_0, end_mask = var_6157_end_mask_0, x = v_41_cast);
            tensor<string, []> var_6161_equation_0 = const()[name = tensor<string, []>("op_6161_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6161_cast = einsum(equation = var_6161_equation_0, values = (var_6099_cast, var_6064_cast));
            tensor<fp16, []> var_6162_to_fp16 = const()[name = tensor<string, []>("op_6162_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_321_cast = mul(x = var_6161_cast, y = var_6162_to_fp16);
            tensor<string, []> var_6165_equation_0 = const()[name = tensor<string, []>("op_6165_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6165_cast = einsum(equation = var_6165_equation_0, values = (var_6103_cast, var_6068_cast));
            tensor<fp16, []> var_6166_to_fp16 = const()[name = tensor<string, []>("op_6166_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_323_cast = mul(x = var_6165_cast, y = var_6166_to_fp16);
            tensor<string, []> var_6169_equation_0 = const()[name = tensor<string, []>("op_6169_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6169_cast = einsum(equation = var_6169_equation_0, values = (var_6107_cast, var_6072_cast));
            tensor<fp16, []> var_6170_to_fp16 = const()[name = tensor<string, []>("op_6170_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_325_cast = mul(x = var_6169_cast, y = var_6170_to_fp16);
            tensor<string, []> var_6173_equation_0 = const()[name = tensor<string, []>("op_6173_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6173_cast = einsum(equation = var_6173_equation_0, values = (var_6111_cast, var_6076_cast));
            tensor<fp16, []> var_6174_to_fp16 = const()[name = tensor<string, []>("op_6174_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_327_cast = mul(x = var_6173_cast, y = var_6174_to_fp16);
            tensor<string, []> var_6177_equation_0 = const()[name = tensor<string, []>("op_6177_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6177_cast = einsum(equation = var_6177_equation_0, values = (var_6115_cast, var_6080_cast));
            tensor<fp16, []> var_6178_to_fp16 = const()[name = tensor<string, []>("op_6178_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_329_cast = mul(x = var_6177_cast, y = var_6178_to_fp16);
            tensor<string, []> var_6181_equation_0 = const()[name = tensor<string, []>("op_6181_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6181_cast = einsum(equation = var_6181_equation_0, values = (var_6119_cast, var_6084_cast));
            tensor<fp16, []> var_6182_to_fp16 = const()[name = tensor<string, []>("op_6182_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_331_cast = mul(x = var_6181_cast, y = var_6182_to_fp16);
            tensor<string, []> var_6185_equation_0 = const()[name = tensor<string, []>("op_6185_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6185_cast = einsum(equation = var_6185_equation_0, values = (var_6123_cast, var_6088_cast));
            tensor<fp16, []> var_6186_to_fp16 = const()[name = tensor<string, []>("op_6186_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_333_cast = mul(x = var_6185_cast, y = var_6186_to_fp16);
            tensor<string, []> var_6189_equation_0 = const()[name = tensor<string, []>("op_6189_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6189_cast = einsum(equation = var_6189_equation_0, values = (var_6127_cast, var_6092_cast));
            tensor<fp16, []> var_6190_to_fp16 = const()[name = tensor<string, []>("op_6190_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_335_cast = mul(x = var_6189_cast, y = var_6190_to_fp16);
            tensor<fp16, [2, 1024, 1, 1024]> var_6192_cast = softmax(axis = var_5930, x = aw_321_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6193_cast = softmax(axis = var_5930, x = aw_323_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6194_cast = softmax(axis = var_5930, x = aw_325_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6195_cast = softmax(axis = var_5930, x = aw_327_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6196_cast = softmax(axis = var_5930, x = aw_329_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6197_cast = softmax(axis = var_5930, x = aw_331_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6198_cast = softmax(axis = var_5930, x = aw_333_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6199_cast = softmax(axis = var_5930, x = aw_335_cast);
            tensor<string, []> var_6201_equation_0 = const()[name = tensor<string, []>("op_6201_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6201_cast = einsum(equation = var_6201_equation_0, values = (var_6129_cast, var_6192_cast));
            tensor<string, []> var_6203_equation_0 = const()[name = tensor<string, []>("op_6203_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6203_cast = einsum(equation = var_6203_equation_0, values = (var_6133_cast, var_6193_cast));
            tensor<string, []> var_6205_equation_0 = const()[name = tensor<string, []>("op_6205_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6205_cast = einsum(equation = var_6205_equation_0, values = (var_6137_cast, var_6194_cast));
            tensor<string, []> var_6207_equation_0 = const()[name = tensor<string, []>("op_6207_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6207_cast = einsum(equation = var_6207_equation_0, values = (var_6141_cast, var_6195_cast));
            tensor<string, []> var_6209_equation_0 = const()[name = tensor<string, []>("op_6209_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6209_cast = einsum(equation = var_6209_equation_0, values = (var_6145_cast, var_6196_cast));
            tensor<string, []> var_6211_equation_0 = const()[name = tensor<string, []>("op_6211_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6211_cast = einsum(equation = var_6211_equation_0, values = (var_6149_cast, var_6197_cast));
            tensor<string, []> var_6213_equation_0 = const()[name = tensor<string, []>("op_6213_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6213_cast = einsum(equation = var_6213_equation_0, values = (var_6153_cast, var_6198_cast));
            tensor<string, []> var_6215_equation_0 = const()[name = tensor<string, []>("op_6215_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6215_cast = einsum(equation = var_6215_equation_0, values = (var_6157_cast, var_6199_cast));
            tensor<bool, []> input_383_interleave_0 = const()[name = tensor<string, []>("input_383_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_383_cast = concat(axis = var_5930, interleave = input_383_interleave_0, values = (var_6201_cast, var_6203_cast, var_6205_cast, var_6207_cast, var_6209_cast, var_6211_cast, var_6213_cast, var_6215_cast));
            tensor<int32, [2]> var_6221 = const()[name = tensor<string, []>("op_6221"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6223 = const()[name = tensor<string, []>("op_6223"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_6225_pad_type_0 = const()[name = tensor<string, []>("op_6225_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_6225_pad_0 = const()[name = tensor<string, []>("op_6225_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1575706240)))];
            tensor<fp16, [640]> up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1576525504)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6225_cast = conv(bias = up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_6223, groups = var_5930, pad = var_6225_pad_0, pad_type = var_6225_pad_type_0, strides = var_6221, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_383_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_63_cast = add(x = var_6225_cast, y = inputs_61_cast);
            tensor<int32, [1]> var_6229 = const()[name = tensor<string, []>("op_6229"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_63_cast = reduce_mean(axes = var_6229, keep_dims = var_5925, x = inputs_63_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_63_cast = sub(x = inputs_63_cast, y = channels_mean_63_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_63_cast = mul(x = zero_mean_63_cast, y = zero_mean_63_cast);
            tensor<int32, [1]> var_6233 = const()[name = tensor<string, []>("op_6233"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_6234_cast = reduce_mean(axes = var_6233, keep_dims = var_5925, x = zero_mean_sq_63_cast);
            tensor<fp16, []> var_6235_to_fp16 = const()[name = tensor<string, []>("op_6235_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_6236_cast = add(x = var_6234_cast, y = var_6235_to_fp16);
            tensor<fp16, []> denom_63_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_63_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_63_cast = rsqrt(epsilon = denom_63_epsilon_0_to_fp16, x = var_6236_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_63_cast = mul(x = zero_mean_63_cast, y = denom_63_cast);
            tensor<fp16, [1, 640, 1, 1]> var_6240_to_fp16 = const()[name = tensor<string, []>("op_6240_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1576526848)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6241_cast = add(x = out_63_cast, y = var_6240_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_6243_to_fp16 = const()[name = tensor<string, []>("op_6243_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1576528192)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_229_cast = mul(x = var_6241_cast, y = var_6243_to_fp16);
            tensor<int32, [2]> var_6250 = const()[name = tensor<string, []>("op_6250"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6252 = const()[name = tensor<string, []>("op_6252"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_43_pad_type_0 = const()[name = tensor<string, []>("q_43_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_43_pad_0 = const()[name = tensor<string, []>("q_43_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1576529536)))];
            tensor<fp16, [2, 640, 1, 1024]> q_43_cast = conv(dilations = var_6252, groups = var_5930, pad = q_43_pad_0, pad_type = q_43_pad_type_0, strides = var_6250, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_229_cast);
            tensor<int32, [2]> var_6256 = const()[name = tensor<string, []>("op_6256"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6258 = const()[name = tensor<string, []>("op_6258"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_85_pad_type_0 = const()[name = tensor<string, []>("k_85_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_85_pad_0 = const()[name = tensor<string, []>("k_85_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 768, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [640, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1577348800)))];
            tensor<fp16, [2, 640, 1, 77]> k_85_cast = conv(dilations = var_6258, groups = var_5930, pad = k_85_pad_0, pad_type = k_85_pad_type_0, strides = var_6256, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_6262 = const()[name = tensor<string, []>("op_6262"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6264 = const()[name = tensor<string, []>("op_6264"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_43_pad_type_0 = const()[name = tensor<string, []>("v_43_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_43_pad_0 = const()[name = tensor<string, []>("v_43_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 768, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [640, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1578331904)))];
            tensor<fp16, [2, 640, 1, 77]> v_43_cast = conv(dilations = var_6264, groups = var_5930, pad = v_43_pad_0, pad_type = v_43_pad_type_0, strides = var_6262, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_6268_begin_0 = const()[name = tensor<string, []>("op_6268_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6268_end_0 = const()[name = tensor<string, []>("op_6268_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_6268_end_mask_0 = const()[name = tensor<string, []>("op_6268_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6268_cast = slice_by_index(begin = var_6268_begin_0, end = var_6268_end_0, end_mask = var_6268_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_6272_begin_0 = const()[name = tensor<string, []>("op_6272_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_6272_end_0 = const()[name = tensor<string, []>("op_6272_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_6272_end_mask_0 = const()[name = tensor<string, []>("op_6272_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6272_cast = slice_by_index(begin = var_6272_begin_0, end = var_6272_end_0, end_mask = var_6272_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_6276_begin_0 = const()[name = tensor<string, []>("op_6276_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_6276_end_0 = const()[name = tensor<string, []>("op_6276_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_6276_end_mask_0 = const()[name = tensor<string, []>("op_6276_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6276_cast = slice_by_index(begin = var_6276_begin_0, end = var_6276_end_0, end_mask = var_6276_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_6280_begin_0 = const()[name = tensor<string, []>("op_6280_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_6280_end_0 = const()[name = tensor<string, []>("op_6280_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_6280_end_mask_0 = const()[name = tensor<string, []>("op_6280_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6280_cast = slice_by_index(begin = var_6280_begin_0, end = var_6280_end_0, end_mask = var_6280_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_6284_begin_0 = const()[name = tensor<string, []>("op_6284_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_6284_end_0 = const()[name = tensor<string, []>("op_6284_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_6284_end_mask_0 = const()[name = tensor<string, []>("op_6284_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6284_cast = slice_by_index(begin = var_6284_begin_0, end = var_6284_end_0, end_mask = var_6284_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_6288_begin_0 = const()[name = tensor<string, []>("op_6288_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_6288_end_0 = const()[name = tensor<string, []>("op_6288_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_6288_end_mask_0 = const()[name = tensor<string, []>("op_6288_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6288_cast = slice_by_index(begin = var_6288_begin_0, end = var_6288_end_0, end_mask = var_6288_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_6292_begin_0 = const()[name = tensor<string, []>("op_6292_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_6292_end_0 = const()[name = tensor<string, []>("op_6292_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_6292_end_mask_0 = const()[name = tensor<string, []>("op_6292_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6292_cast = slice_by_index(begin = var_6292_begin_0, end = var_6292_end_0, end_mask = var_6292_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> var_6296_begin_0 = const()[name = tensor<string, []>("op_6296_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_6296_end_0 = const()[name = tensor<string, []>("op_6296_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_6296_end_mask_0 = const()[name = tensor<string, []>("op_6296_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6296_cast = slice_by_index(begin = var_6296_begin_0, end = var_6296_end_0, end_mask = var_6296_end_mask_0, x = q_43_cast);
            tensor<int32, [4]> k_87_perm_0 = const()[name = tensor<string, []>("k_87_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_6303_begin_0 = const()[name = tensor<string, []>("op_6303_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6303_end_0 = const()[name = tensor<string, []>("op_6303_end_0"), val = tensor<int32, [4]>([2, 77, 1, 80])];
            tensor<bool, [4]> var_6303_end_mask_0 = const()[name = tensor<string, []>("op_6303_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 640]> transpose_10 = transpose(perm = k_87_perm_0, x = k_85_cast);
            tensor<fp16, [2, 77, 1, 80]> var_6303_cast = slice_by_index(begin = var_6303_begin_0, end = var_6303_end_0, end_mask = var_6303_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_6307_begin_0 = const()[name = tensor<string, []>("op_6307_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_6307_end_0 = const()[name = tensor<string, []>("op_6307_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_6307_end_mask_0 = const()[name = tensor<string, []>("op_6307_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6307_cast = slice_by_index(begin = var_6307_begin_0, end = var_6307_end_0, end_mask = var_6307_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_6311_begin_0 = const()[name = tensor<string, []>("op_6311_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_6311_end_0 = const()[name = tensor<string, []>("op_6311_end_0"), val = tensor<int32, [4]>([2, 77, 1, 240])];
            tensor<bool, [4]> var_6311_end_mask_0 = const()[name = tensor<string, []>("op_6311_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6311_cast = slice_by_index(begin = var_6311_begin_0, end = var_6311_end_0, end_mask = var_6311_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_6315_begin_0 = const()[name = tensor<string, []>("op_6315_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_6315_end_0 = const()[name = tensor<string, []>("op_6315_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_6315_end_mask_0 = const()[name = tensor<string, []>("op_6315_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6315_cast = slice_by_index(begin = var_6315_begin_0, end = var_6315_end_0, end_mask = var_6315_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_6319_begin_0 = const()[name = tensor<string, []>("op_6319_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_6319_end_0 = const()[name = tensor<string, []>("op_6319_end_0"), val = tensor<int32, [4]>([2, 77, 1, 400])];
            tensor<bool, [4]> var_6319_end_mask_0 = const()[name = tensor<string, []>("op_6319_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6319_cast = slice_by_index(begin = var_6319_begin_0, end = var_6319_end_0, end_mask = var_6319_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_6323_begin_0 = const()[name = tensor<string, []>("op_6323_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 400])];
            tensor<int32, [4]> var_6323_end_0 = const()[name = tensor<string, []>("op_6323_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_6323_end_mask_0 = const()[name = tensor<string, []>("op_6323_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6323_cast = slice_by_index(begin = var_6323_begin_0, end = var_6323_end_0, end_mask = var_6323_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_6327_begin_0 = const()[name = tensor<string, []>("op_6327_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_6327_end_0 = const()[name = tensor<string, []>("op_6327_end_0"), val = tensor<int32, [4]>([2, 77, 1, 560])];
            tensor<bool, [4]> var_6327_end_mask_0 = const()[name = tensor<string, []>("op_6327_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6327_cast = slice_by_index(begin = var_6327_begin_0, end = var_6327_end_0, end_mask = var_6327_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_6331_begin_0 = const()[name = tensor<string, []>("op_6331_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 560])];
            tensor<int32, [4]> var_6331_end_0 = const()[name = tensor<string, []>("op_6331_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_6331_end_mask_0 = const()[name = tensor<string, []>("op_6331_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6331_cast = slice_by_index(begin = var_6331_begin_0, end = var_6331_end_0, end_mask = var_6331_end_mask_0, x = transpose_10);
            tensor<int32, [4]> var_6333_begin_0 = const()[name = tensor<string, []>("op_6333_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6333_end_0 = const()[name = tensor<string, []>("op_6333_end_0"), val = tensor<int32, [4]>([2, 80, 1, 77])];
            tensor<bool, [4]> var_6333_end_mask_0 = const()[name = tensor<string, []>("op_6333_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6333_cast = slice_by_index(begin = var_6333_begin_0, end = var_6333_end_0, end_mask = var_6333_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_6337_begin_0 = const()[name = tensor<string, []>("op_6337_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_6337_end_0 = const()[name = tensor<string, []>("op_6337_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_6337_end_mask_0 = const()[name = tensor<string, []>("op_6337_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6337_cast = slice_by_index(begin = var_6337_begin_0, end = var_6337_end_0, end_mask = var_6337_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_6341_begin_0 = const()[name = tensor<string, []>("op_6341_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_6341_end_0 = const()[name = tensor<string, []>("op_6341_end_0"), val = tensor<int32, [4]>([2, 240, 1, 77])];
            tensor<bool, [4]> var_6341_end_mask_0 = const()[name = tensor<string, []>("op_6341_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6341_cast = slice_by_index(begin = var_6341_begin_0, end = var_6341_end_0, end_mask = var_6341_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_6345_begin_0 = const()[name = tensor<string, []>("op_6345_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_6345_end_0 = const()[name = tensor<string, []>("op_6345_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_6345_end_mask_0 = const()[name = tensor<string, []>("op_6345_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6345_cast = slice_by_index(begin = var_6345_begin_0, end = var_6345_end_0, end_mask = var_6345_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_6349_begin_0 = const()[name = tensor<string, []>("op_6349_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_6349_end_0 = const()[name = tensor<string, []>("op_6349_end_0"), val = tensor<int32, [4]>([2, 400, 1, 77])];
            tensor<bool, [4]> var_6349_end_mask_0 = const()[name = tensor<string, []>("op_6349_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6349_cast = slice_by_index(begin = var_6349_begin_0, end = var_6349_end_0, end_mask = var_6349_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_6353_begin_0 = const()[name = tensor<string, []>("op_6353_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_6353_end_0 = const()[name = tensor<string, []>("op_6353_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_6353_end_mask_0 = const()[name = tensor<string, []>("op_6353_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6353_cast = slice_by_index(begin = var_6353_begin_0, end = var_6353_end_0, end_mask = var_6353_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_6357_begin_0 = const()[name = tensor<string, []>("op_6357_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_6357_end_0 = const()[name = tensor<string, []>("op_6357_end_0"), val = tensor<int32, [4]>([2, 560, 1, 77])];
            tensor<bool, [4]> var_6357_end_mask_0 = const()[name = tensor<string, []>("op_6357_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6357_cast = slice_by_index(begin = var_6357_begin_0, end = var_6357_end_0, end_mask = var_6357_end_mask_0, x = v_43_cast);
            tensor<int32, [4]> var_6361_begin_0 = const()[name = tensor<string, []>("op_6361_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_6361_end_0 = const()[name = tensor<string, []>("op_6361_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_6361_end_mask_0 = const()[name = tensor<string, []>("op_6361_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6361_cast = slice_by_index(begin = var_6361_begin_0, end = var_6361_end_0, end_mask = var_6361_end_mask_0, x = v_43_cast);
            tensor<string, []> var_6365_equation_0 = const()[name = tensor<string, []>("op_6365_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6365_cast = einsum(equation = var_6365_equation_0, values = (var_6303_cast, var_6268_cast));
            tensor<fp16, []> var_6366_to_fp16 = const()[name = tensor<string, []>("op_6366_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_337_cast = mul(x = var_6365_cast, y = var_6366_to_fp16);
            tensor<string, []> var_6369_equation_0 = const()[name = tensor<string, []>("op_6369_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6369_cast = einsum(equation = var_6369_equation_0, values = (var_6307_cast, var_6272_cast));
            tensor<fp16, []> var_6370_to_fp16 = const()[name = tensor<string, []>("op_6370_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_339_cast = mul(x = var_6369_cast, y = var_6370_to_fp16);
            tensor<string, []> var_6373_equation_0 = const()[name = tensor<string, []>("op_6373_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6373_cast = einsum(equation = var_6373_equation_0, values = (var_6311_cast, var_6276_cast));
            tensor<fp16, []> var_6374_to_fp16 = const()[name = tensor<string, []>("op_6374_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_341_cast = mul(x = var_6373_cast, y = var_6374_to_fp16);
            tensor<string, []> var_6377_equation_0 = const()[name = tensor<string, []>("op_6377_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6377_cast = einsum(equation = var_6377_equation_0, values = (var_6315_cast, var_6280_cast));
            tensor<fp16, []> var_6378_to_fp16 = const()[name = tensor<string, []>("op_6378_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_343_cast = mul(x = var_6377_cast, y = var_6378_to_fp16);
            tensor<string, []> var_6381_equation_0 = const()[name = tensor<string, []>("op_6381_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6381_cast = einsum(equation = var_6381_equation_0, values = (var_6319_cast, var_6284_cast));
            tensor<fp16, []> var_6382_to_fp16 = const()[name = tensor<string, []>("op_6382_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_345_cast = mul(x = var_6381_cast, y = var_6382_to_fp16);
            tensor<string, []> var_6385_equation_0 = const()[name = tensor<string, []>("op_6385_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6385_cast = einsum(equation = var_6385_equation_0, values = (var_6323_cast, var_6288_cast));
            tensor<fp16, []> var_6386_to_fp16 = const()[name = tensor<string, []>("op_6386_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_347_cast = mul(x = var_6385_cast, y = var_6386_to_fp16);
            tensor<string, []> var_6389_equation_0 = const()[name = tensor<string, []>("op_6389_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6389_cast = einsum(equation = var_6389_equation_0, values = (var_6327_cast, var_6292_cast));
            tensor<fp16, []> var_6390_to_fp16 = const()[name = tensor<string, []>("op_6390_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_349_cast = mul(x = var_6389_cast, y = var_6390_to_fp16);
            tensor<string, []> var_6393_equation_0 = const()[name = tensor<string, []>("op_6393_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6393_cast = einsum(equation = var_6393_equation_0, values = (var_6331_cast, var_6296_cast));
            tensor<fp16, []> var_6394_to_fp16 = const()[name = tensor<string, []>("op_6394_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_351_cast = mul(x = var_6393_cast, y = var_6394_to_fp16);
            tensor<fp16, [2, 77, 1, 1024]> var_6396_cast = softmax(axis = var_5930, x = aw_337_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6397_cast = softmax(axis = var_5930, x = aw_339_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6398_cast = softmax(axis = var_5930, x = aw_341_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6399_cast = softmax(axis = var_5930, x = aw_343_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6400_cast = softmax(axis = var_5930, x = aw_345_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6401_cast = softmax(axis = var_5930, x = aw_347_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6402_cast = softmax(axis = var_5930, x = aw_349_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6403_cast = softmax(axis = var_5930, x = aw_351_cast);
            tensor<string, []> var_6405_equation_0 = const()[name = tensor<string, []>("op_6405_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6405_cast = einsum(equation = var_6405_equation_0, values = (var_6333_cast, var_6396_cast));
            tensor<string, []> var_6407_equation_0 = const()[name = tensor<string, []>("op_6407_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6407_cast = einsum(equation = var_6407_equation_0, values = (var_6337_cast, var_6397_cast));
            tensor<string, []> var_6409_equation_0 = const()[name = tensor<string, []>("op_6409_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6409_cast = einsum(equation = var_6409_equation_0, values = (var_6341_cast, var_6398_cast));
            tensor<string, []> var_6411_equation_0 = const()[name = tensor<string, []>("op_6411_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6411_cast = einsum(equation = var_6411_equation_0, values = (var_6345_cast, var_6399_cast));
            tensor<string, []> var_6413_equation_0 = const()[name = tensor<string, []>("op_6413_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6413_cast = einsum(equation = var_6413_equation_0, values = (var_6349_cast, var_6400_cast));
            tensor<string, []> var_6415_equation_0 = const()[name = tensor<string, []>("op_6415_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6415_cast = einsum(equation = var_6415_equation_0, values = (var_6353_cast, var_6401_cast));
            tensor<string, []> var_6417_equation_0 = const()[name = tensor<string, []>("op_6417_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6417_cast = einsum(equation = var_6417_equation_0, values = (var_6357_cast, var_6402_cast));
            tensor<string, []> var_6419_equation_0 = const()[name = tensor<string, []>("op_6419_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6419_cast = einsum(equation = var_6419_equation_0, values = (var_6361_cast, var_6403_cast));
            tensor<bool, []> input_385_interleave_0 = const()[name = tensor<string, []>("input_385_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_385_cast = concat(axis = var_5930, interleave = input_385_interleave_0, values = (var_6405_cast, var_6407_cast, var_6409_cast, var_6411_cast, var_6413_cast, var_6415_cast, var_6417_cast, var_6419_cast));
            tensor<int32, [2]> var_6425 = const()[name = tensor<string, []>("op_6425"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6427 = const()[name = tensor<string, []>("op_6427"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_6429_pad_type_0 = const()[name = tensor<string, []>("op_6429_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_6429_pad_0 = const()[name = tensor<string, []>("op_6429_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1579315008)))];
            tensor<fp16, [640]> up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1580134272)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6429_cast = conv(bias = up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_6427, groups = var_5930, pad = var_6429_pad_0, pad_type = var_6429_pad_type_0, strides = var_6425, weight = up_blocks_2_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_385_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_65_cast = add(x = var_6429_cast, y = inputs_63_cast);
            tensor<int32, [1]> var_6433 = const()[name = tensor<string, []>("op_6433"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_65_cast = reduce_mean(axes = var_6433, keep_dims = var_5925, x = inputs_65_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_65_cast = sub(x = inputs_65_cast, y = channels_mean_65_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_65_cast = mul(x = zero_mean_65_cast, y = zero_mean_65_cast);
            tensor<int32, [1]> var_6437 = const()[name = tensor<string, []>("op_6437"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_6438_cast = reduce_mean(axes = var_6437, keep_dims = var_5925, x = zero_mean_sq_65_cast);
            tensor<fp16, []> var_6439_to_fp16 = const()[name = tensor<string, []>("op_6439_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_6440_cast = add(x = var_6438_cast, y = var_6439_to_fp16);
            tensor<fp16, []> denom_65_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_65_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_65_cast = rsqrt(epsilon = denom_65_epsilon_0_to_fp16, x = var_6440_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_65_cast = mul(x = zero_mean_65_cast, y = denom_65_cast);
            tensor<fp16, [1, 640, 1, 1]> var_6444_to_fp16 = const()[name = tensor<string, []>("op_6444_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1580135616)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6445_cast = add(x = out_65_cast, y = var_6444_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_6447_to_fp16 = const()[name = tensor<string, []>("op_6447_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1580136960)))];
            tensor<fp16, [2, 640, 1, 1024]> input_387_cast = mul(x = var_6445_cast, y = var_6447_to_fp16);
            tensor<int32, [2]> var_6455 = const()[name = tensor<string, []>("op_6455"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6457 = const()[name = tensor<string, []>("op_6457"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_6459_pad_type_0 = const()[name = tensor<string, []>("op_6459_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_6459_pad_0 = const()[name = tensor<string, []>("op_6459_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [5120, 640, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [5120, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1580138304)))];
            tensor<fp16, [5120]> up_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1586691968)))];
            tensor<fp16, [2, 5120, 1, 1024]> var_6459_cast = conv(bias = up_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_6457, groups = var_5930, pad = var_6459_pad_0, pad_type = var_6459_pad_type_0, strides = var_6455, weight = up_blocks_2_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_387_cast);
            tensor<int32, [2]> var_6460_split_sizes_0 = const()[name = tensor<string, []>("op_6460_split_sizes_0"), val = tensor<int32, [2]>([2560, 2560])];
            tensor<int32, []> var_6460_axis_0 = const()[name = tensor<string, []>("op_6460_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 2560, 1, 1024]> var_6460_cast_0, tensor<fp16, [2, 2560, 1, 1024]> var_6460_cast_1 = split(axis = var_6460_axis_0, split_sizes = var_6460_split_sizes_0, x = var_6459_cast);
            tensor<string, []> var_6462_mode_0 = const()[name = tensor<string, []>("op_6462_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 2560, 1, 1024]> var_6462_cast = gelu(mode = var_6462_mode_0, x = var_6460_cast_1);
            tensor<fp16, [2, 2560, 1, 1024]> input_389_cast = mul(x = var_6460_cast_0, y = var_6462_cast);
            tensor<int32, [2]> var_6466 = const()[name = tensor<string, []>("op_6466"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6468 = const()[name = tensor<string, []>("op_6468"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_6470_pad_type_0 = const()[name = tensor<string, []>("op_6470_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_6470_pad_0 = const()[name = tensor<string, []>("op_6470_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 2560, 1, 1]> up_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [640, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1586702272)))];
            tensor<fp16, [640]> up_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1589979136)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6470_cast = conv(bias = up_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_6468, groups = var_5930, pad = var_6470_pad_0, pad_type = var_6470_pad_type_0, strides = var_6466, weight = up_blocks_2_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_389_cast);
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_233_cast = add(x = var_6470_cast, y = inputs_65_cast);
            tensor<int32, [4]> var_6472 = const()[name = tensor<string, []>("op_6472"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> input_391_cast = reshape(shape = var_6472, x = hidden_states_233_cast);
            tensor<int32, [2]> var_6476 = const()[name = tensor<string, []>("op_6476"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6478 = const()[name = tensor<string, []>("op_6478"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_235_pad_type_0 = const()[name = tensor<string, []>("hidden_states_235_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_235_pad_0 = const()[name = tensor<string, []>("hidden_states_235_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_0_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_proj_out_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1589980480)))];
            tensor<fp16, [640]> up_blocks_2_attentions_0_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_0_proj_out_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1590799744)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_235_cast = conv(bias = up_blocks_2_attentions_0_proj_out_bias_to_fp16, dilations = var_6478, groups = var_5930, pad = hidden_states_235_pad_0, pad_type = hidden_states_235_pad_type_0, strides = var_6476, weight = up_blocks_2_attentions_0_proj_out_weight_to_fp16, x = input_391_cast);
            tensor<fp16, [2, 640, 32, 32]> hidden_states_237_cast = add(x = hidden_states_235_cast, y = hidden_states_223_cast);
            tensor<bool, []> input_393_interleave_0 = const()[name = tensor<string, []>("input_393_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 1280, 32, 32]> input_393_cast = concat(axis = var_5930, interleave = input_393_interleave_0, values = (hidden_states_237_cast, input_89_cast));
            tensor<int32, [5]> reshape_180_shape_0 = const()[name = tensor<string, []>("reshape_180_shape_0"), val = tensor<int32, [5]>([2, 32, 40, 32, 32])];
            tensor<fp16, [2, 32, 40, 32, 32]> reshape_180_cast = reshape(shape = reshape_180_shape_0, x = input_393_cast);
            tensor<int32, [3]> reduce_mean_135_axes_0 = const()[name = tensor<string, []>("reduce_mean_135_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_135_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_135_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_135_cast = reduce_mean(axes = reduce_mean_135_axes_0, keep_dims = reduce_mean_135_keep_dims_0, x = reshape_180_cast);
            tensor<fp16, [2, 32, 40, 32, 32]> sub_90_cast = sub(x = reshape_180_cast, y = reduce_mean_135_cast);
            tensor<fp16, [2, 32, 40, 32, 32]> square_45_cast = square(x = sub_90_cast);
            tensor<int32, [3]> reduce_mean_137_axes_0 = const()[name = tensor<string, []>("reduce_mean_137_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_137_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_137_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_137_cast = reduce_mean(axes = reduce_mean_137_axes_0, keep_dims = reduce_mean_137_keep_dims_0, x = square_45_cast);
            tensor<fp16, []> add_90_y_0_to_fp16 = const()[name = tensor<string, []>("add_90_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_90_cast = add(x = reduce_mean_137_cast, y = add_90_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_45_cast = sqrt(x = add_90_cast);
            tensor<fp16, [2, 32, 40, 32, 32]> real_div_45_cast = real_div(x = sub_90_cast, y = sqrt_45_cast);
            tensor<int32, [4]> reshape_181_shape_0 = const()[name = tensor<string, []>("reshape_181_shape_0"), val = tensor<int32, [4]>([2, 1280, 32, 32])];
            tensor<fp16, [2, 1280, 32, 32]> reshape_181_cast = reshape(shape = reshape_181_shape_0, x = real_div_45_cast);
            tensor<fp16, [1280]> add_91_mean_0_to_fp16 = const()[name = tensor<string, []>("add_91_mean_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1590801088)))];
            tensor<fp16, [1280]> add_91_variance_0_to_fp16 = const()[name = tensor<string, []>("add_91_variance_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1590803712)))];
            tensor<fp16, [1280]> add_91_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_91_gamma_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1590806336)))];
            tensor<fp16, [1280]> add_91_beta_0_to_fp16 = const()[name = tensor<string, []>("add_91_beta_0_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1590808960)))];
            tensor<fp16, []> add_91_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_91_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1280, 32, 32]> add_91_cast = batch_norm(beta = add_91_beta_0_to_fp16, epsilon = add_91_epsilon_0_to_fp16, gamma = add_91_gamma_0_to_fp16, mean = add_91_mean_0_to_fp16, variance = add_91_variance_0_to_fp16, x = reshape_181_cast);
            tensor<fp16, [2, 1280, 32, 32]> input_397_cast = silu(x = add_91_cast);
            tensor<int32, [2]> var_6496 = const()[name = tensor<string, []>("op_6496"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6498 = const()[name = tensor<string, []>("op_6498"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_239_pad_type_0 = const()[name = tensor<string, []>("hidden_states_239_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_239_pad_0 = const()[name = tensor<string, []>("hidden_states_239_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 1280, 3, 3]> up_blocks_2_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [640, 1280, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1590811584)))];
            tensor<fp16, [640]> up_blocks_2_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1605557248)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_239_cast = conv(bias = up_blocks_2_resnets_1_conv1_bias_to_fp16, dilations = var_6498, groups = var_5930, pad = hidden_states_239_pad_0, pad_type = hidden_states_239_pad_type_0, strides = var_6496, weight = up_blocks_2_resnets_1_conv1_weight_to_fp16, x = input_397_cast);
            tensor<int32, [2]> var_6504 = const()[name = tensor<string, []>("op_6504"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6506 = const()[name = tensor<string, []>("op_6506"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_35_pad_type_0 = const()[name = tensor<string, []>("temb_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_35_pad_0 = const()[name = tensor<string, []>("temb_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1280, 1, 1]> up_blocks_2_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [640, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1605558592)))];
            tensor<fp16, [640]> up_blocks_2_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1607197056)))];
            tensor<fp16, [2, 640, 1, 1]> temb_35_cast = conv(bias = up_blocks_2_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_6506, groups = var_5930, pad = temb_35_pad_0, pad_type = temb_35_pad_type_0, strides = var_6504, weight = up_blocks_2_resnets_1_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 640, 32, 32]> input_401_cast = add(x = hidden_states_239_cast, y = temb_35_cast);
            tensor<int32, [5]> reshape_184_shape_0 = const()[name = tensor<string, []>("reshape_184_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_184_cast = reshape(shape = reshape_184_shape_0, x = input_401_cast);
            tensor<int32, [3]> reduce_mean_138_axes_0 = const()[name = tensor<string, []>("reduce_mean_138_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_138_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_138_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_138_cast = reduce_mean(axes = reduce_mean_138_axes_0, keep_dims = reduce_mean_138_keep_dims_0, x = reshape_184_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_92_cast = sub(x = reshape_184_cast, y = reduce_mean_138_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_46_cast = square(x = sub_92_cast);
            tensor<int32, [3]> reduce_mean_140_axes_0 = const()[name = tensor<string, []>("reduce_mean_140_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_140_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_140_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_140_cast = reduce_mean(axes = reduce_mean_140_axes_0, keep_dims = reduce_mean_140_keep_dims_0, x = square_46_cast);
            tensor<fp16, []> add_92_y_0_to_fp16 = const()[name = tensor<string, []>("add_92_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_92_cast = add(x = reduce_mean_140_cast, y = add_92_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_46_cast = sqrt(x = add_92_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_46_cast = real_div(x = sub_92_cast, y = sqrt_46_cast);
            tensor<int32, [4]> reshape_185_shape_0 = const()[name = tensor<string, []>("reshape_185_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_185_cast = reshape(shape = reshape_185_shape_0, x = real_div_46_cast);
            tensor<fp16, [640]> add_93_mean_0_to_fp16 = const()[name = tensor<string, []>("add_93_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1607198400)))];
            tensor<fp16, [640]> add_93_variance_0_to_fp16 = const()[name = tensor<string, []>("add_93_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1607199744)))];
            tensor<fp16, [640]> add_93_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_93_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1607201088)))];
            tensor<fp16, [640]> add_93_beta_0_to_fp16 = const()[name = tensor<string, []>("add_93_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1607202432)))];
            tensor<fp16, []> add_93_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_93_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_93_cast = batch_norm(beta = add_93_beta_0_to_fp16, epsilon = add_93_epsilon_0_to_fp16, gamma = add_93_gamma_0_to_fp16, mean = add_93_mean_0_to_fp16, variance = add_93_variance_0_to_fp16, x = reshape_185_cast);
            tensor<fp16, [2, 640, 32, 32]> input_405_cast = silu(x = add_93_cast);
            tensor<int32, [2]> var_6516 = const()[name = tensor<string, []>("op_6516"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6518 = const()[name = tensor<string, []>("op_6518"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_241_pad_type_0 = const()[name = tensor<string, []>("hidden_states_241_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_241_pad_0 = const()[name = tensor<string, []>("hidden_states_241_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> up_blocks_2_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1607203776)))];
            tensor<fp16, [640]> up_blocks_2_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1614576640)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_241_cast = conv(bias = up_blocks_2_resnets_1_conv2_bias_to_fp16, dilations = var_6518, groups = var_5930, pad = hidden_states_241_pad_0, pad_type = hidden_states_241_pad_type_0, strides = var_6516, weight = up_blocks_2_resnets_1_conv2_weight_to_fp16, x = input_405_cast);
            tensor<int32, [2]> var_6523 = const()[name = tensor<string, []>("op_6523"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6525 = const()[name = tensor<string, []>("op_6525"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_19_pad_type_0 = const()[name = tensor<string, []>("x_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_19_pad_0 = const()[name = tensor<string, []>("x_19_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1280, 1, 1]> up_blocks_2_resnets_1_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [640, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1614577984)))];
            tensor<fp16, [640]> up_blocks_2_resnets_1_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_1_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1616216448)))];
            tensor<fp16, [2, 640, 32, 32]> x_19_cast = conv(bias = up_blocks_2_resnets_1_conv_shortcut_bias_to_fp16, dilations = var_6525, groups = var_5930, pad = x_19_pad_0, pad_type = x_19_pad_type_0, strides = var_6523, weight = up_blocks_2_resnets_1_conv_shortcut_weight_to_fp16, x = input_393_cast);
            tensor<fp16, [2, 640, 32, 32]> hidden_states_243_cast = add(x = x_19_cast, y = hidden_states_241_cast);
            tensor<int32, [5]> reshape_188_shape_0 = const()[name = tensor<string, []>("reshape_188_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_188_cast = reshape(shape = reshape_188_shape_0, x = hidden_states_243_cast);
            tensor<int32, [3]> reduce_mean_141_axes_0 = const()[name = tensor<string, []>("reduce_mean_141_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_141_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_141_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_141_cast = reduce_mean(axes = reduce_mean_141_axes_0, keep_dims = reduce_mean_141_keep_dims_0, x = reshape_188_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_94_cast = sub(x = reshape_188_cast, y = reduce_mean_141_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_47_cast = square(x = sub_94_cast);
            tensor<int32, [3]> reduce_mean_143_axes_0 = const()[name = tensor<string, []>("reduce_mean_143_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_143_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_143_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_143_cast = reduce_mean(axes = reduce_mean_143_axes_0, keep_dims = reduce_mean_143_keep_dims_0, x = square_47_cast);
            tensor<fp16, []> add_94_y_0_to_fp16 = const()[name = tensor<string, []>("add_94_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_94_cast = add(x = reduce_mean_143_cast, y = add_94_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_47_cast = sqrt(x = add_94_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_47_cast = real_div(x = sub_94_cast, y = sqrt_47_cast);
            tensor<int32, [4]> reshape_189_shape_0 = const()[name = tensor<string, []>("reshape_189_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_189_cast = reshape(shape = reshape_189_shape_0, x = real_div_47_cast);
            tensor<fp16, [640]> add_95_mean_0_to_fp16 = const()[name = tensor<string, []>("add_95_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1616217792)))];
            tensor<fp16, [640]> add_95_variance_0_to_fp16 = const()[name = tensor<string, []>("add_95_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1616219136)))];
            tensor<fp16, [640]> add_95_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_95_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1616220480)))];
            tensor<fp16, [640]> add_95_beta_0_to_fp16 = const()[name = tensor<string, []>("add_95_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1616221824)))];
            tensor<fp16, []> add_95_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_95_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_95_cast = batch_norm(beta = add_95_beta_0_to_fp16, epsilon = add_95_epsilon_0_to_fp16, gamma = add_95_gamma_0_to_fp16, mean = add_95_mean_0_to_fp16, variance = add_95_variance_0_to_fp16, x = reshape_189_cast);
            tensor<int32, [2]> var_6545 = const()[name = tensor<string, []>("op_6545"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6547 = const()[name = tensor<string, []>("op_6547"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_245_pad_type_0 = const()[name = tensor<string, []>("hidden_states_245_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_245_pad_0 = const()[name = tensor<string, []>("hidden_states_245_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_proj_in_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1616223168)))];
            tensor<fp16, [640]> up_blocks_2_attentions_1_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_proj_in_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1617042432)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_245_cast = conv(bias = up_blocks_2_attentions_1_proj_in_bias_to_fp16, dilations = var_6547, groups = var_5930, pad = hidden_states_245_pad_0, pad_type = hidden_states_245_pad_type_0, strides = var_6545, weight = up_blocks_2_attentions_1_proj_in_weight_to_fp16, x = add_95_cast);
            tensor<int32, [4]> var_6552 = const()[name = tensor<string, []>("op_6552"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<fp16, [2, 640, 1, 1024]> inputs_67_cast = reshape(shape = var_6552, x = hidden_states_245_cast);
            tensor<int32, [1]> var_6562 = const()[name = tensor<string, []>("op_6562"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_67_cast = reduce_mean(axes = var_6562, keep_dims = var_5925, x = inputs_67_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_67_cast = sub(x = inputs_67_cast, y = channels_mean_67_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_67_cast = mul(x = zero_mean_67_cast, y = zero_mean_67_cast);
            tensor<int32, [1]> var_6566 = const()[name = tensor<string, []>("op_6566"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_6567_cast = reduce_mean(axes = var_6566, keep_dims = var_5925, x = zero_mean_sq_67_cast);
            tensor<fp16, []> var_6568_to_fp16 = const()[name = tensor<string, []>("op_6568_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_6569_cast = add(x = var_6567_cast, y = var_6568_to_fp16);
            tensor<fp16, []> denom_67_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_67_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_67_cast = rsqrt(epsilon = denom_67_epsilon_0_to_fp16, x = var_6569_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_67_cast = mul(x = zero_mean_67_cast, y = denom_67_cast);
            tensor<fp16, [1, 640, 1, 1]> var_6573_to_fp16 = const()[name = tensor<string, []>("op_6573_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1617043776)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6574_cast = add(x = out_67_cast, y = var_6573_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_6576_to_fp16 = const()[name = tensor<string, []>("op_6576_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1617045120)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_247_cast = mul(x = var_6574_cast, y = var_6576_to_fp16);
            tensor<int32, [2]> var_6583 = const()[name = tensor<string, []>("op_6583"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6585 = const()[name = tensor<string, []>("op_6585"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_45_pad_type_0 = const()[name = tensor<string, []>("q_45_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_45_pad_0 = const()[name = tensor<string, []>("q_45_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1617046464)))];
            tensor<fp16, [2, 640, 1, 1024]> q_45_cast = conv(dilations = var_6585, groups = var_5930, pad = q_45_pad_0, pad_type = q_45_pad_type_0, strides = var_6583, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_247_cast);
            tensor<int32, [2]> var_6589 = const()[name = tensor<string, []>("op_6589"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6591 = const()[name = tensor<string, []>("op_6591"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_89_pad_type_0 = const()[name = tensor<string, []>("k_89_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_89_pad_0 = const()[name = tensor<string, []>("k_89_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1617865728)))];
            tensor<fp16, [2, 640, 1, 1024]> k_89_cast = conv(dilations = var_6591, groups = var_5930, pad = k_89_pad_0, pad_type = k_89_pad_type_0, strides = var_6589, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_247_cast);
            tensor<int32, [2]> var_6595 = const()[name = tensor<string, []>("op_6595"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6597 = const()[name = tensor<string, []>("op_6597"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_45_pad_type_0 = const()[name = tensor<string, []>("v_45_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_45_pad_0 = const()[name = tensor<string, []>("v_45_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1618684992)))];
            tensor<fp16, [2, 640, 1, 1024]> v_45_cast = conv(dilations = var_6597, groups = var_5930, pad = v_45_pad_0, pad_type = v_45_pad_type_0, strides = var_6595, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_247_cast);
            tensor<int32, [4]> var_6601_begin_0 = const()[name = tensor<string, []>("op_6601_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6601_end_0 = const()[name = tensor<string, []>("op_6601_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_6601_end_mask_0 = const()[name = tensor<string, []>("op_6601_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6601_cast = slice_by_index(begin = var_6601_begin_0, end = var_6601_end_0, end_mask = var_6601_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_6605_begin_0 = const()[name = tensor<string, []>("op_6605_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_6605_end_0 = const()[name = tensor<string, []>("op_6605_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_6605_end_mask_0 = const()[name = tensor<string, []>("op_6605_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6605_cast = slice_by_index(begin = var_6605_begin_0, end = var_6605_end_0, end_mask = var_6605_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_6609_begin_0 = const()[name = tensor<string, []>("op_6609_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_6609_end_0 = const()[name = tensor<string, []>("op_6609_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_6609_end_mask_0 = const()[name = tensor<string, []>("op_6609_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6609_cast = slice_by_index(begin = var_6609_begin_0, end = var_6609_end_0, end_mask = var_6609_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_6613_begin_0 = const()[name = tensor<string, []>("op_6613_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_6613_end_0 = const()[name = tensor<string, []>("op_6613_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_6613_end_mask_0 = const()[name = tensor<string, []>("op_6613_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6613_cast = slice_by_index(begin = var_6613_begin_0, end = var_6613_end_0, end_mask = var_6613_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_6617_begin_0 = const()[name = tensor<string, []>("op_6617_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_6617_end_0 = const()[name = tensor<string, []>("op_6617_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_6617_end_mask_0 = const()[name = tensor<string, []>("op_6617_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6617_cast = slice_by_index(begin = var_6617_begin_0, end = var_6617_end_0, end_mask = var_6617_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_6621_begin_0 = const()[name = tensor<string, []>("op_6621_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_6621_end_0 = const()[name = tensor<string, []>("op_6621_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_6621_end_mask_0 = const()[name = tensor<string, []>("op_6621_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6621_cast = slice_by_index(begin = var_6621_begin_0, end = var_6621_end_0, end_mask = var_6621_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_6625_begin_0 = const()[name = tensor<string, []>("op_6625_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_6625_end_0 = const()[name = tensor<string, []>("op_6625_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_6625_end_mask_0 = const()[name = tensor<string, []>("op_6625_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6625_cast = slice_by_index(begin = var_6625_begin_0, end = var_6625_end_0, end_mask = var_6625_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> var_6629_begin_0 = const()[name = tensor<string, []>("op_6629_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_6629_end_0 = const()[name = tensor<string, []>("op_6629_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_6629_end_mask_0 = const()[name = tensor<string, []>("op_6629_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6629_cast = slice_by_index(begin = var_6629_begin_0, end = var_6629_end_0, end_mask = var_6629_end_mask_0, x = q_45_cast);
            tensor<int32, [4]> k_91_perm_0 = const()[name = tensor<string, []>("k_91_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_6636_begin_0 = const()[name = tensor<string, []>("op_6636_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6636_end_0 = const()[name = tensor<string, []>("op_6636_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 80])];
            tensor<bool, [4]> var_6636_end_mask_0 = const()[name = tensor<string, []>("op_6636_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 640]> transpose_9 = transpose(perm = k_91_perm_0, x = k_89_cast);
            tensor<fp16, [2, 1024, 1, 80]> var_6636_cast = slice_by_index(begin = var_6636_begin_0, end = var_6636_end_0, end_mask = var_6636_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_6640_begin_0 = const()[name = tensor<string, []>("op_6640_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_6640_end_0 = const()[name = tensor<string, []>("op_6640_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 160])];
            tensor<bool, [4]> var_6640_end_mask_0 = const()[name = tensor<string, []>("op_6640_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6640_cast = slice_by_index(begin = var_6640_begin_0, end = var_6640_end_0, end_mask = var_6640_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_6644_begin_0 = const()[name = tensor<string, []>("op_6644_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_6644_end_0 = const()[name = tensor<string, []>("op_6644_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 240])];
            tensor<bool, [4]> var_6644_end_mask_0 = const()[name = tensor<string, []>("op_6644_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6644_cast = slice_by_index(begin = var_6644_begin_0, end = var_6644_end_0, end_mask = var_6644_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_6648_begin_0 = const()[name = tensor<string, []>("op_6648_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_6648_end_0 = const()[name = tensor<string, []>("op_6648_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 320])];
            tensor<bool, [4]> var_6648_end_mask_0 = const()[name = tensor<string, []>("op_6648_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6648_cast = slice_by_index(begin = var_6648_begin_0, end = var_6648_end_0, end_mask = var_6648_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_6652_begin_0 = const()[name = tensor<string, []>("op_6652_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_6652_end_0 = const()[name = tensor<string, []>("op_6652_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 400])];
            tensor<bool, [4]> var_6652_end_mask_0 = const()[name = tensor<string, []>("op_6652_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6652_cast = slice_by_index(begin = var_6652_begin_0, end = var_6652_end_0, end_mask = var_6652_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_6656_begin_0 = const()[name = tensor<string, []>("op_6656_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 400])];
            tensor<int32, [4]> var_6656_end_0 = const()[name = tensor<string, []>("op_6656_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 480])];
            tensor<bool, [4]> var_6656_end_mask_0 = const()[name = tensor<string, []>("op_6656_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6656_cast = slice_by_index(begin = var_6656_begin_0, end = var_6656_end_0, end_mask = var_6656_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_6660_begin_0 = const()[name = tensor<string, []>("op_6660_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_6660_end_0 = const()[name = tensor<string, []>("op_6660_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 560])];
            tensor<bool, [4]> var_6660_end_mask_0 = const()[name = tensor<string, []>("op_6660_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6660_cast = slice_by_index(begin = var_6660_begin_0, end = var_6660_end_0, end_mask = var_6660_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_6664_begin_0 = const()[name = tensor<string, []>("op_6664_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 560])];
            tensor<int32, [4]> var_6664_end_0 = const()[name = tensor<string, []>("op_6664_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 640])];
            tensor<bool, [4]> var_6664_end_mask_0 = const()[name = tensor<string, []>("op_6664_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_6664_cast = slice_by_index(begin = var_6664_begin_0, end = var_6664_end_0, end_mask = var_6664_end_mask_0, x = transpose_9);
            tensor<int32, [4]> var_6666_begin_0 = const()[name = tensor<string, []>("op_6666_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6666_end_0 = const()[name = tensor<string, []>("op_6666_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_6666_end_mask_0 = const()[name = tensor<string, []>("op_6666_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6666_cast = slice_by_index(begin = var_6666_begin_0, end = var_6666_end_0, end_mask = var_6666_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_6670_begin_0 = const()[name = tensor<string, []>("op_6670_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_6670_end_0 = const()[name = tensor<string, []>("op_6670_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_6670_end_mask_0 = const()[name = tensor<string, []>("op_6670_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6670_cast = slice_by_index(begin = var_6670_begin_0, end = var_6670_end_0, end_mask = var_6670_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_6674_begin_0 = const()[name = tensor<string, []>("op_6674_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_6674_end_0 = const()[name = tensor<string, []>("op_6674_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_6674_end_mask_0 = const()[name = tensor<string, []>("op_6674_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6674_cast = slice_by_index(begin = var_6674_begin_0, end = var_6674_end_0, end_mask = var_6674_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_6678_begin_0 = const()[name = tensor<string, []>("op_6678_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_6678_end_0 = const()[name = tensor<string, []>("op_6678_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_6678_end_mask_0 = const()[name = tensor<string, []>("op_6678_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6678_cast = slice_by_index(begin = var_6678_begin_0, end = var_6678_end_0, end_mask = var_6678_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_6682_begin_0 = const()[name = tensor<string, []>("op_6682_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_6682_end_0 = const()[name = tensor<string, []>("op_6682_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_6682_end_mask_0 = const()[name = tensor<string, []>("op_6682_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6682_cast = slice_by_index(begin = var_6682_begin_0, end = var_6682_end_0, end_mask = var_6682_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_6686_begin_0 = const()[name = tensor<string, []>("op_6686_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_6686_end_0 = const()[name = tensor<string, []>("op_6686_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_6686_end_mask_0 = const()[name = tensor<string, []>("op_6686_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6686_cast = slice_by_index(begin = var_6686_begin_0, end = var_6686_end_0, end_mask = var_6686_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_6690_begin_0 = const()[name = tensor<string, []>("op_6690_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_6690_end_0 = const()[name = tensor<string, []>("op_6690_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_6690_end_mask_0 = const()[name = tensor<string, []>("op_6690_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6690_cast = slice_by_index(begin = var_6690_begin_0, end = var_6690_end_0, end_mask = var_6690_end_mask_0, x = v_45_cast);
            tensor<int32, [4]> var_6694_begin_0 = const()[name = tensor<string, []>("op_6694_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_6694_end_0 = const()[name = tensor<string, []>("op_6694_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_6694_end_mask_0 = const()[name = tensor<string, []>("op_6694_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6694_cast = slice_by_index(begin = var_6694_begin_0, end = var_6694_end_0, end_mask = var_6694_end_mask_0, x = v_45_cast);
            tensor<string, []> var_6698_equation_0 = const()[name = tensor<string, []>("op_6698_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6698_cast = einsum(equation = var_6698_equation_0, values = (var_6636_cast, var_6601_cast));
            tensor<fp16, []> var_6699_to_fp16 = const()[name = tensor<string, []>("op_6699_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_353_cast = mul(x = var_6698_cast, y = var_6699_to_fp16);
            tensor<string, []> var_6702_equation_0 = const()[name = tensor<string, []>("op_6702_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6702_cast = einsum(equation = var_6702_equation_0, values = (var_6640_cast, var_6605_cast));
            tensor<fp16, []> var_6703_to_fp16 = const()[name = tensor<string, []>("op_6703_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_355_cast = mul(x = var_6702_cast, y = var_6703_to_fp16);
            tensor<string, []> var_6706_equation_0 = const()[name = tensor<string, []>("op_6706_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6706_cast = einsum(equation = var_6706_equation_0, values = (var_6644_cast, var_6609_cast));
            tensor<fp16, []> var_6707_to_fp16 = const()[name = tensor<string, []>("op_6707_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_357_cast = mul(x = var_6706_cast, y = var_6707_to_fp16);
            tensor<string, []> var_6710_equation_0 = const()[name = tensor<string, []>("op_6710_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6710_cast = einsum(equation = var_6710_equation_0, values = (var_6648_cast, var_6613_cast));
            tensor<fp16, []> var_6711_to_fp16 = const()[name = tensor<string, []>("op_6711_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_359_cast = mul(x = var_6710_cast, y = var_6711_to_fp16);
            tensor<string, []> var_6714_equation_0 = const()[name = tensor<string, []>("op_6714_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6714_cast = einsum(equation = var_6714_equation_0, values = (var_6652_cast, var_6617_cast));
            tensor<fp16, []> var_6715_to_fp16 = const()[name = tensor<string, []>("op_6715_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_361_cast = mul(x = var_6714_cast, y = var_6715_to_fp16);
            tensor<string, []> var_6718_equation_0 = const()[name = tensor<string, []>("op_6718_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6718_cast = einsum(equation = var_6718_equation_0, values = (var_6656_cast, var_6621_cast));
            tensor<fp16, []> var_6719_to_fp16 = const()[name = tensor<string, []>("op_6719_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_363_cast = mul(x = var_6718_cast, y = var_6719_to_fp16);
            tensor<string, []> var_6722_equation_0 = const()[name = tensor<string, []>("op_6722_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6722_cast = einsum(equation = var_6722_equation_0, values = (var_6660_cast, var_6625_cast));
            tensor<fp16, []> var_6723_to_fp16 = const()[name = tensor<string, []>("op_6723_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_365_cast = mul(x = var_6722_cast, y = var_6723_to_fp16);
            tensor<string, []> var_6726_equation_0 = const()[name = tensor<string, []>("op_6726_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_6726_cast = einsum(equation = var_6726_equation_0, values = (var_6664_cast, var_6629_cast));
            tensor<fp16, []> var_6727_to_fp16 = const()[name = tensor<string, []>("op_6727_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_367_cast = mul(x = var_6726_cast, y = var_6727_to_fp16);
            tensor<fp16, [2, 1024, 1, 1024]> var_6729_cast = softmax(axis = var_5930, x = aw_353_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6730_cast = softmax(axis = var_5930, x = aw_355_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6731_cast = softmax(axis = var_5930, x = aw_357_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6732_cast = softmax(axis = var_5930, x = aw_359_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6733_cast = softmax(axis = var_5930, x = aw_361_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6734_cast = softmax(axis = var_5930, x = aw_363_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6735_cast = softmax(axis = var_5930, x = aw_365_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_6736_cast = softmax(axis = var_5930, x = aw_367_cast);
            tensor<string, []> var_6738_equation_0 = const()[name = tensor<string, []>("op_6738_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6738_cast = einsum(equation = var_6738_equation_0, values = (var_6666_cast, var_6729_cast));
            tensor<string, []> var_6740_equation_0 = const()[name = tensor<string, []>("op_6740_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6740_cast = einsum(equation = var_6740_equation_0, values = (var_6670_cast, var_6730_cast));
            tensor<string, []> var_6742_equation_0 = const()[name = tensor<string, []>("op_6742_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6742_cast = einsum(equation = var_6742_equation_0, values = (var_6674_cast, var_6731_cast));
            tensor<string, []> var_6744_equation_0 = const()[name = tensor<string, []>("op_6744_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6744_cast = einsum(equation = var_6744_equation_0, values = (var_6678_cast, var_6732_cast));
            tensor<string, []> var_6746_equation_0 = const()[name = tensor<string, []>("op_6746_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6746_cast = einsum(equation = var_6746_equation_0, values = (var_6682_cast, var_6733_cast));
            tensor<string, []> var_6748_equation_0 = const()[name = tensor<string, []>("op_6748_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6748_cast = einsum(equation = var_6748_equation_0, values = (var_6686_cast, var_6734_cast));
            tensor<string, []> var_6750_equation_0 = const()[name = tensor<string, []>("op_6750_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6750_cast = einsum(equation = var_6750_equation_0, values = (var_6690_cast, var_6735_cast));
            tensor<string, []> var_6752_equation_0 = const()[name = tensor<string, []>("op_6752_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6752_cast = einsum(equation = var_6752_equation_0, values = (var_6694_cast, var_6736_cast));
            tensor<bool, []> input_409_interleave_0 = const()[name = tensor<string, []>("input_409_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_409_cast = concat(axis = var_5930, interleave = input_409_interleave_0, values = (var_6738_cast, var_6740_cast, var_6742_cast, var_6744_cast, var_6746_cast, var_6748_cast, var_6750_cast, var_6752_cast));
            tensor<int32, [2]> var_6758 = const()[name = tensor<string, []>("op_6758"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6760 = const()[name = tensor<string, []>("op_6760"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_6762_pad_type_0 = const()[name = tensor<string, []>("op_6762_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_6762_pad_0 = const()[name = tensor<string, []>("op_6762_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1619504256)))];
            tensor<fp16, [640]> up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1620323520)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6762_cast = conv(bias = up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_6760, groups = var_5930, pad = var_6762_pad_0, pad_type = var_6762_pad_type_0, strides = var_6758, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_409_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_69_cast = add(x = var_6762_cast, y = inputs_67_cast);
            tensor<int32, [1]> var_6766 = const()[name = tensor<string, []>("op_6766"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_69_cast = reduce_mean(axes = var_6766, keep_dims = var_5925, x = inputs_69_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_69_cast = sub(x = inputs_69_cast, y = channels_mean_69_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_69_cast = mul(x = zero_mean_69_cast, y = zero_mean_69_cast);
            tensor<int32, [1]> var_6770 = const()[name = tensor<string, []>("op_6770"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_6771_cast = reduce_mean(axes = var_6770, keep_dims = var_5925, x = zero_mean_sq_69_cast);
            tensor<fp16, []> var_6772_to_fp16 = const()[name = tensor<string, []>("op_6772_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_6773_cast = add(x = var_6771_cast, y = var_6772_to_fp16);
            tensor<fp16, []> denom_69_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_69_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_69_cast = rsqrt(epsilon = denom_69_epsilon_0_to_fp16, x = var_6773_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_69_cast = mul(x = zero_mean_69_cast, y = denom_69_cast);
            tensor<fp16, [1, 640, 1, 1]> var_6777_to_fp16 = const()[name = tensor<string, []>("op_6777_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1620324864)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6778_cast = add(x = out_69_cast, y = var_6777_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_6780_to_fp16 = const()[name = tensor<string, []>("op_6780_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1620326208)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_249_cast = mul(x = var_6778_cast, y = var_6780_to_fp16);
            tensor<int32, [2]> var_6787 = const()[name = tensor<string, []>("op_6787"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6789 = const()[name = tensor<string, []>("op_6789"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_47_pad_type_0 = const()[name = tensor<string, []>("q_47_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_47_pad_0 = const()[name = tensor<string, []>("q_47_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1620327552)))];
            tensor<fp16, [2, 640, 1, 1024]> q_47_cast = conv(dilations = var_6789, groups = var_5930, pad = q_47_pad_0, pad_type = q_47_pad_type_0, strides = var_6787, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_249_cast);
            tensor<int32, [2]> var_6793 = const()[name = tensor<string, []>("op_6793"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6795 = const()[name = tensor<string, []>("op_6795"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_93_pad_type_0 = const()[name = tensor<string, []>("k_93_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_93_pad_0 = const()[name = tensor<string, []>("k_93_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 768, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [640, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1621146816)))];
            tensor<fp16, [2, 640, 1, 77]> k_93_cast = conv(dilations = var_6795, groups = var_5930, pad = k_93_pad_0, pad_type = k_93_pad_type_0, strides = var_6793, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_6799 = const()[name = tensor<string, []>("op_6799"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6801 = const()[name = tensor<string, []>("op_6801"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_47_pad_type_0 = const()[name = tensor<string, []>("v_47_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_47_pad_0 = const()[name = tensor<string, []>("v_47_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 768, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [640, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1622129920)))];
            tensor<fp16, [2, 640, 1, 77]> v_47_cast = conv(dilations = var_6801, groups = var_5930, pad = v_47_pad_0, pad_type = v_47_pad_type_0, strides = var_6799, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_6805_begin_0 = const()[name = tensor<string, []>("op_6805_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6805_end_0 = const()[name = tensor<string, []>("op_6805_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_6805_end_mask_0 = const()[name = tensor<string, []>("op_6805_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6805_cast = slice_by_index(begin = var_6805_begin_0, end = var_6805_end_0, end_mask = var_6805_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_6809_begin_0 = const()[name = tensor<string, []>("op_6809_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_6809_end_0 = const()[name = tensor<string, []>("op_6809_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_6809_end_mask_0 = const()[name = tensor<string, []>("op_6809_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6809_cast = slice_by_index(begin = var_6809_begin_0, end = var_6809_end_0, end_mask = var_6809_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_6813_begin_0 = const()[name = tensor<string, []>("op_6813_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_6813_end_0 = const()[name = tensor<string, []>("op_6813_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_6813_end_mask_0 = const()[name = tensor<string, []>("op_6813_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6813_cast = slice_by_index(begin = var_6813_begin_0, end = var_6813_end_0, end_mask = var_6813_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_6817_begin_0 = const()[name = tensor<string, []>("op_6817_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_6817_end_0 = const()[name = tensor<string, []>("op_6817_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_6817_end_mask_0 = const()[name = tensor<string, []>("op_6817_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6817_cast = slice_by_index(begin = var_6817_begin_0, end = var_6817_end_0, end_mask = var_6817_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_6821_begin_0 = const()[name = tensor<string, []>("op_6821_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_6821_end_0 = const()[name = tensor<string, []>("op_6821_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_6821_end_mask_0 = const()[name = tensor<string, []>("op_6821_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6821_cast = slice_by_index(begin = var_6821_begin_0, end = var_6821_end_0, end_mask = var_6821_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_6825_begin_0 = const()[name = tensor<string, []>("op_6825_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_6825_end_0 = const()[name = tensor<string, []>("op_6825_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_6825_end_mask_0 = const()[name = tensor<string, []>("op_6825_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6825_cast = slice_by_index(begin = var_6825_begin_0, end = var_6825_end_0, end_mask = var_6825_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_6829_begin_0 = const()[name = tensor<string, []>("op_6829_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_6829_end_0 = const()[name = tensor<string, []>("op_6829_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_6829_end_mask_0 = const()[name = tensor<string, []>("op_6829_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6829_cast = slice_by_index(begin = var_6829_begin_0, end = var_6829_end_0, end_mask = var_6829_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> var_6833_begin_0 = const()[name = tensor<string, []>("op_6833_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_6833_end_0 = const()[name = tensor<string, []>("op_6833_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_6833_end_mask_0 = const()[name = tensor<string, []>("op_6833_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_6833_cast = slice_by_index(begin = var_6833_begin_0, end = var_6833_end_0, end_mask = var_6833_end_mask_0, x = q_47_cast);
            tensor<int32, [4]> k_95_perm_0 = const()[name = tensor<string, []>("k_95_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_6840_begin_0 = const()[name = tensor<string, []>("op_6840_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6840_end_0 = const()[name = tensor<string, []>("op_6840_end_0"), val = tensor<int32, [4]>([2, 77, 1, 80])];
            tensor<bool, [4]> var_6840_end_mask_0 = const()[name = tensor<string, []>("op_6840_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 640]> transpose_8 = transpose(perm = k_95_perm_0, x = k_93_cast);
            tensor<fp16, [2, 77, 1, 80]> var_6840_cast = slice_by_index(begin = var_6840_begin_0, end = var_6840_end_0, end_mask = var_6840_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_6844_begin_0 = const()[name = tensor<string, []>("op_6844_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_6844_end_0 = const()[name = tensor<string, []>("op_6844_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_6844_end_mask_0 = const()[name = tensor<string, []>("op_6844_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6844_cast = slice_by_index(begin = var_6844_begin_0, end = var_6844_end_0, end_mask = var_6844_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_6848_begin_0 = const()[name = tensor<string, []>("op_6848_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_6848_end_0 = const()[name = tensor<string, []>("op_6848_end_0"), val = tensor<int32, [4]>([2, 77, 1, 240])];
            tensor<bool, [4]> var_6848_end_mask_0 = const()[name = tensor<string, []>("op_6848_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6848_cast = slice_by_index(begin = var_6848_begin_0, end = var_6848_end_0, end_mask = var_6848_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_6852_begin_0 = const()[name = tensor<string, []>("op_6852_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_6852_end_0 = const()[name = tensor<string, []>("op_6852_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_6852_end_mask_0 = const()[name = tensor<string, []>("op_6852_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6852_cast = slice_by_index(begin = var_6852_begin_0, end = var_6852_end_0, end_mask = var_6852_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_6856_begin_0 = const()[name = tensor<string, []>("op_6856_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_6856_end_0 = const()[name = tensor<string, []>("op_6856_end_0"), val = tensor<int32, [4]>([2, 77, 1, 400])];
            tensor<bool, [4]> var_6856_end_mask_0 = const()[name = tensor<string, []>("op_6856_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6856_cast = slice_by_index(begin = var_6856_begin_0, end = var_6856_end_0, end_mask = var_6856_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_6860_begin_0 = const()[name = tensor<string, []>("op_6860_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 400])];
            tensor<int32, [4]> var_6860_end_0 = const()[name = tensor<string, []>("op_6860_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_6860_end_mask_0 = const()[name = tensor<string, []>("op_6860_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6860_cast = slice_by_index(begin = var_6860_begin_0, end = var_6860_end_0, end_mask = var_6860_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_6864_begin_0 = const()[name = tensor<string, []>("op_6864_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_6864_end_0 = const()[name = tensor<string, []>("op_6864_end_0"), val = tensor<int32, [4]>([2, 77, 1, 560])];
            tensor<bool, [4]> var_6864_end_mask_0 = const()[name = tensor<string, []>("op_6864_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6864_cast = slice_by_index(begin = var_6864_begin_0, end = var_6864_end_0, end_mask = var_6864_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_6868_begin_0 = const()[name = tensor<string, []>("op_6868_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 560])];
            tensor<int32, [4]> var_6868_end_0 = const()[name = tensor<string, []>("op_6868_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_6868_end_mask_0 = const()[name = tensor<string, []>("op_6868_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_6868_cast = slice_by_index(begin = var_6868_begin_0, end = var_6868_end_0, end_mask = var_6868_end_mask_0, x = transpose_8);
            tensor<int32, [4]> var_6870_begin_0 = const()[name = tensor<string, []>("op_6870_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6870_end_0 = const()[name = tensor<string, []>("op_6870_end_0"), val = tensor<int32, [4]>([2, 80, 1, 77])];
            tensor<bool, [4]> var_6870_end_mask_0 = const()[name = tensor<string, []>("op_6870_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6870_cast = slice_by_index(begin = var_6870_begin_0, end = var_6870_end_0, end_mask = var_6870_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_6874_begin_0 = const()[name = tensor<string, []>("op_6874_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_6874_end_0 = const()[name = tensor<string, []>("op_6874_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_6874_end_mask_0 = const()[name = tensor<string, []>("op_6874_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6874_cast = slice_by_index(begin = var_6874_begin_0, end = var_6874_end_0, end_mask = var_6874_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_6878_begin_0 = const()[name = tensor<string, []>("op_6878_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_6878_end_0 = const()[name = tensor<string, []>("op_6878_end_0"), val = tensor<int32, [4]>([2, 240, 1, 77])];
            tensor<bool, [4]> var_6878_end_mask_0 = const()[name = tensor<string, []>("op_6878_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6878_cast = slice_by_index(begin = var_6878_begin_0, end = var_6878_end_0, end_mask = var_6878_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_6882_begin_0 = const()[name = tensor<string, []>("op_6882_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_6882_end_0 = const()[name = tensor<string, []>("op_6882_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_6882_end_mask_0 = const()[name = tensor<string, []>("op_6882_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6882_cast = slice_by_index(begin = var_6882_begin_0, end = var_6882_end_0, end_mask = var_6882_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_6886_begin_0 = const()[name = tensor<string, []>("op_6886_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_6886_end_0 = const()[name = tensor<string, []>("op_6886_end_0"), val = tensor<int32, [4]>([2, 400, 1, 77])];
            tensor<bool, [4]> var_6886_end_mask_0 = const()[name = tensor<string, []>("op_6886_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6886_cast = slice_by_index(begin = var_6886_begin_0, end = var_6886_end_0, end_mask = var_6886_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_6890_begin_0 = const()[name = tensor<string, []>("op_6890_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_6890_end_0 = const()[name = tensor<string, []>("op_6890_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_6890_end_mask_0 = const()[name = tensor<string, []>("op_6890_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6890_cast = slice_by_index(begin = var_6890_begin_0, end = var_6890_end_0, end_mask = var_6890_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_6894_begin_0 = const()[name = tensor<string, []>("op_6894_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_6894_end_0 = const()[name = tensor<string, []>("op_6894_end_0"), val = tensor<int32, [4]>([2, 560, 1, 77])];
            tensor<bool, [4]> var_6894_end_mask_0 = const()[name = tensor<string, []>("op_6894_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6894_cast = slice_by_index(begin = var_6894_begin_0, end = var_6894_end_0, end_mask = var_6894_end_mask_0, x = v_47_cast);
            tensor<int32, [4]> var_6898_begin_0 = const()[name = tensor<string, []>("op_6898_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_6898_end_0 = const()[name = tensor<string, []>("op_6898_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_6898_end_mask_0 = const()[name = tensor<string, []>("op_6898_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_6898_cast = slice_by_index(begin = var_6898_begin_0, end = var_6898_end_0, end_mask = var_6898_end_mask_0, x = v_47_cast);
            tensor<string, []> var_6902_equation_0 = const()[name = tensor<string, []>("op_6902_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6902_cast = einsum(equation = var_6902_equation_0, values = (var_6840_cast, var_6805_cast));
            tensor<fp16, []> var_6903_to_fp16 = const()[name = tensor<string, []>("op_6903_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_369_cast = mul(x = var_6902_cast, y = var_6903_to_fp16);
            tensor<string, []> var_6906_equation_0 = const()[name = tensor<string, []>("op_6906_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6906_cast = einsum(equation = var_6906_equation_0, values = (var_6844_cast, var_6809_cast));
            tensor<fp16, []> var_6907_to_fp16 = const()[name = tensor<string, []>("op_6907_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_371_cast = mul(x = var_6906_cast, y = var_6907_to_fp16);
            tensor<string, []> var_6910_equation_0 = const()[name = tensor<string, []>("op_6910_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6910_cast = einsum(equation = var_6910_equation_0, values = (var_6848_cast, var_6813_cast));
            tensor<fp16, []> var_6911_to_fp16 = const()[name = tensor<string, []>("op_6911_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_373_cast = mul(x = var_6910_cast, y = var_6911_to_fp16);
            tensor<string, []> var_6914_equation_0 = const()[name = tensor<string, []>("op_6914_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6914_cast = einsum(equation = var_6914_equation_0, values = (var_6852_cast, var_6817_cast));
            tensor<fp16, []> var_6915_to_fp16 = const()[name = tensor<string, []>("op_6915_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_375_cast = mul(x = var_6914_cast, y = var_6915_to_fp16);
            tensor<string, []> var_6918_equation_0 = const()[name = tensor<string, []>("op_6918_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6918_cast = einsum(equation = var_6918_equation_0, values = (var_6856_cast, var_6821_cast));
            tensor<fp16, []> var_6919_to_fp16 = const()[name = tensor<string, []>("op_6919_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_377_cast = mul(x = var_6918_cast, y = var_6919_to_fp16);
            tensor<string, []> var_6922_equation_0 = const()[name = tensor<string, []>("op_6922_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6922_cast = einsum(equation = var_6922_equation_0, values = (var_6860_cast, var_6825_cast));
            tensor<fp16, []> var_6923_to_fp16 = const()[name = tensor<string, []>("op_6923_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_379_cast = mul(x = var_6922_cast, y = var_6923_to_fp16);
            tensor<string, []> var_6926_equation_0 = const()[name = tensor<string, []>("op_6926_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6926_cast = einsum(equation = var_6926_equation_0, values = (var_6864_cast, var_6829_cast));
            tensor<fp16, []> var_6927_to_fp16 = const()[name = tensor<string, []>("op_6927_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_381_cast = mul(x = var_6926_cast, y = var_6927_to_fp16);
            tensor<string, []> var_6930_equation_0 = const()[name = tensor<string, []>("op_6930_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_6930_cast = einsum(equation = var_6930_equation_0, values = (var_6868_cast, var_6833_cast));
            tensor<fp16, []> var_6931_to_fp16 = const()[name = tensor<string, []>("op_6931_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_383_cast = mul(x = var_6930_cast, y = var_6931_to_fp16);
            tensor<fp16, [2, 77, 1, 1024]> var_6933_cast = softmax(axis = var_5930, x = aw_369_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6934_cast = softmax(axis = var_5930, x = aw_371_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6935_cast = softmax(axis = var_5930, x = aw_373_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6936_cast = softmax(axis = var_5930, x = aw_375_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6937_cast = softmax(axis = var_5930, x = aw_377_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6938_cast = softmax(axis = var_5930, x = aw_379_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6939_cast = softmax(axis = var_5930, x = aw_381_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_6940_cast = softmax(axis = var_5930, x = aw_383_cast);
            tensor<string, []> var_6942_equation_0 = const()[name = tensor<string, []>("op_6942_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6942_cast = einsum(equation = var_6942_equation_0, values = (var_6870_cast, var_6933_cast));
            tensor<string, []> var_6944_equation_0 = const()[name = tensor<string, []>("op_6944_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6944_cast = einsum(equation = var_6944_equation_0, values = (var_6874_cast, var_6934_cast));
            tensor<string, []> var_6946_equation_0 = const()[name = tensor<string, []>("op_6946_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6946_cast = einsum(equation = var_6946_equation_0, values = (var_6878_cast, var_6935_cast));
            tensor<string, []> var_6948_equation_0 = const()[name = tensor<string, []>("op_6948_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6948_cast = einsum(equation = var_6948_equation_0, values = (var_6882_cast, var_6936_cast));
            tensor<string, []> var_6950_equation_0 = const()[name = tensor<string, []>("op_6950_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6950_cast = einsum(equation = var_6950_equation_0, values = (var_6886_cast, var_6937_cast));
            tensor<string, []> var_6952_equation_0 = const()[name = tensor<string, []>("op_6952_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6952_cast = einsum(equation = var_6952_equation_0, values = (var_6890_cast, var_6938_cast));
            tensor<string, []> var_6954_equation_0 = const()[name = tensor<string, []>("op_6954_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6954_cast = einsum(equation = var_6954_equation_0, values = (var_6894_cast, var_6939_cast));
            tensor<string, []> var_6956_equation_0 = const()[name = tensor<string, []>("op_6956_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_6956_cast = einsum(equation = var_6956_equation_0, values = (var_6898_cast, var_6940_cast));
            tensor<bool, []> input_411_interleave_0 = const()[name = tensor<string, []>("input_411_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_411_cast = concat(axis = var_5930, interleave = input_411_interleave_0, values = (var_6942_cast, var_6944_cast, var_6946_cast, var_6948_cast, var_6950_cast, var_6952_cast, var_6954_cast, var_6956_cast));
            tensor<int32, [2]> var_6962 = const()[name = tensor<string, []>("op_6962"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6964 = const()[name = tensor<string, []>("op_6964"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_6966_pad_type_0 = const()[name = tensor<string, []>("op_6966_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_6966_pad_0 = const()[name = tensor<string, []>("op_6966_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1623113024)))];
            tensor<fp16, [640]> up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1623932288)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6966_cast = conv(bias = up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_6964, groups = var_5930, pad = var_6966_pad_0, pad_type = var_6966_pad_type_0, strides = var_6962, weight = up_blocks_2_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_411_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_71_cast = add(x = var_6966_cast, y = inputs_69_cast);
            tensor<int32, [1]> var_6970 = const()[name = tensor<string, []>("op_6970"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_71_cast = reduce_mean(axes = var_6970, keep_dims = var_5925, x = inputs_71_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_71_cast = sub(x = inputs_71_cast, y = channels_mean_71_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_71_cast = mul(x = zero_mean_71_cast, y = zero_mean_71_cast);
            tensor<int32, [1]> var_6974 = const()[name = tensor<string, []>("op_6974"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_6975_cast = reduce_mean(axes = var_6974, keep_dims = var_5925, x = zero_mean_sq_71_cast);
            tensor<fp16, []> var_6976_to_fp16 = const()[name = tensor<string, []>("op_6976_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_6977_cast = add(x = var_6975_cast, y = var_6976_to_fp16);
            tensor<fp16, []> denom_71_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_71_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_71_cast = rsqrt(epsilon = denom_71_epsilon_0_to_fp16, x = var_6977_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_71_cast = mul(x = zero_mean_71_cast, y = denom_71_cast);
            tensor<fp16, [1, 640, 1, 1]> var_6981_to_fp16 = const()[name = tensor<string, []>("op_6981_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1623933632)))];
            tensor<fp16, [2, 640, 1, 1024]> var_6982_cast = add(x = out_71_cast, y = var_6981_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_6984_to_fp16 = const()[name = tensor<string, []>("op_6984_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1623934976)))];
            tensor<fp16, [2, 640, 1, 1024]> input_413_cast = mul(x = var_6982_cast, y = var_6984_to_fp16);
            tensor<int32, [2]> var_6992 = const()[name = tensor<string, []>("op_6992"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6994 = const()[name = tensor<string, []>("op_6994"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_6996_pad_type_0 = const()[name = tensor<string, []>("op_6996_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_6996_pad_0 = const()[name = tensor<string, []>("op_6996_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [5120, 640, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [5120, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1623936320)))];
            tensor<fp16, [5120]> up_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1630489984)))];
            tensor<fp16, [2, 5120, 1, 1024]> var_6996_cast = conv(bias = up_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_6994, groups = var_5930, pad = var_6996_pad_0, pad_type = var_6996_pad_type_0, strides = var_6992, weight = up_blocks_2_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_413_cast);
            tensor<int32, [2]> var_6997_split_sizes_0 = const()[name = tensor<string, []>("op_6997_split_sizes_0"), val = tensor<int32, [2]>([2560, 2560])];
            tensor<int32, []> var_6997_axis_0 = const()[name = tensor<string, []>("op_6997_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 2560, 1, 1024]> var_6997_cast_0, tensor<fp16, [2, 2560, 1, 1024]> var_6997_cast_1 = split(axis = var_6997_axis_0, split_sizes = var_6997_split_sizes_0, x = var_6996_cast);
            tensor<string, []> var_6999_mode_0 = const()[name = tensor<string, []>("op_6999_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 2560, 1, 1024]> var_6999_cast = gelu(mode = var_6999_mode_0, x = var_6997_cast_1);
            tensor<fp16, [2, 2560, 1, 1024]> input_415_cast = mul(x = var_6997_cast_0, y = var_6999_cast);
            tensor<int32, [2]> var_7003 = const()[name = tensor<string, []>("op_7003"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7005 = const()[name = tensor<string, []>("op_7005"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_7007_pad_type_0 = const()[name = tensor<string, []>("op_7007_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_7007_pad_0 = const()[name = tensor<string, []>("op_7007_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 2560, 1, 1]> up_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [640, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1630500288)))];
            tensor<fp16, [640]> up_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1633777152)))];
            tensor<fp16, [2, 640, 1, 1024]> var_7007_cast = conv(bias = up_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_7005, groups = var_5930, pad = var_7007_pad_0, pad_type = var_7007_pad_type_0, strides = var_7003, weight = up_blocks_2_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_415_cast);
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_253_cast = add(x = var_7007_cast, y = inputs_71_cast);
            tensor<int32, [4]> var_7009 = const()[name = tensor<string, []>("op_7009"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> input_417_cast = reshape(shape = var_7009, x = hidden_states_253_cast);
            tensor<int32, [2]> var_7013 = const()[name = tensor<string, []>("op_7013"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7015 = const()[name = tensor<string, []>("op_7015"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_255_pad_type_0 = const()[name = tensor<string, []>("hidden_states_255_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_255_pad_0 = const()[name = tensor<string, []>("hidden_states_255_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_1_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_proj_out_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1633778496)))];
            tensor<fp16, [640]> up_blocks_2_attentions_1_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_1_proj_out_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1634597760)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_255_cast = conv(bias = up_blocks_2_attentions_1_proj_out_bias_to_fp16, dilations = var_7015, groups = var_5930, pad = hidden_states_255_pad_0, pad_type = hidden_states_255_pad_type_0, strides = var_7013, weight = up_blocks_2_attentions_1_proj_out_weight_to_fp16, x = input_417_cast);
            tensor<fp16, [2, 640, 32, 32]> hidden_states_257_cast = add(x = hidden_states_255_cast, y = hidden_states_243_cast);
            tensor<bool, []> input_419_interleave_0 = const()[name = tensor<string, []>("input_419_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 960, 32, 32]> input_419_cast = concat(axis = var_5930, interleave = input_419_interleave_0, values = (hidden_states_257_cast, input_63_cast));
            tensor<int32, [5]> reshape_192_shape_0 = const()[name = tensor<string, []>("reshape_192_shape_0"), val = tensor<int32, [5]>([2, 32, 30, 32, 32])];
            tensor<fp16, [2, 32, 30, 32, 32]> reshape_192_cast = reshape(shape = reshape_192_shape_0, x = input_419_cast);
            tensor<int32, [3]> reduce_mean_144_axes_0 = const()[name = tensor<string, []>("reduce_mean_144_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_144_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_144_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_144_cast = reduce_mean(axes = reduce_mean_144_axes_0, keep_dims = reduce_mean_144_keep_dims_0, x = reshape_192_cast);
            tensor<fp16, [2, 32, 30, 32, 32]> sub_96_cast = sub(x = reshape_192_cast, y = reduce_mean_144_cast);
            tensor<fp16, [2, 32, 30, 32, 32]> square_48_cast = square(x = sub_96_cast);
            tensor<int32, [3]> reduce_mean_146_axes_0 = const()[name = tensor<string, []>("reduce_mean_146_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_146_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_146_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_146_cast = reduce_mean(axes = reduce_mean_146_axes_0, keep_dims = reduce_mean_146_keep_dims_0, x = square_48_cast);
            tensor<fp16, []> add_96_y_0_to_fp16 = const()[name = tensor<string, []>("add_96_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_96_cast = add(x = reduce_mean_146_cast, y = add_96_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_48_cast = sqrt(x = add_96_cast);
            tensor<fp16, [2, 32, 30, 32, 32]> real_div_48_cast = real_div(x = sub_96_cast, y = sqrt_48_cast);
            tensor<int32, [4]> reshape_193_shape_0 = const()[name = tensor<string, []>("reshape_193_shape_0"), val = tensor<int32, [4]>([2, 960, 32, 32])];
            tensor<fp16, [2, 960, 32, 32]> reshape_193_cast = reshape(shape = reshape_193_shape_0, x = real_div_48_cast);
            tensor<fp16, [960]> add_97_mean_0_to_fp16 = const()[name = tensor<string, []>("add_97_mean_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1634599104)))];
            tensor<fp16, [960]> add_97_variance_0_to_fp16 = const()[name = tensor<string, []>("add_97_variance_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1634601088)))];
            tensor<fp16, [960]> add_97_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_97_gamma_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1634603072)))];
            tensor<fp16, [960]> add_97_beta_0_to_fp16 = const()[name = tensor<string, []>("add_97_beta_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1634605056)))];
            tensor<fp16, []> add_97_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_97_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 960, 32, 32]> add_97_cast = batch_norm(beta = add_97_beta_0_to_fp16, epsilon = add_97_epsilon_0_to_fp16, gamma = add_97_gamma_0_to_fp16, mean = add_97_mean_0_to_fp16, variance = add_97_variance_0_to_fp16, x = reshape_193_cast);
            tensor<fp16, [2, 960, 32, 32]> input_423_cast = silu(x = add_97_cast);
            tensor<int32, [2]> var_7033 = const()[name = tensor<string, []>("op_7033"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7035 = const()[name = tensor<string, []>("op_7035"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_259_pad_type_0 = const()[name = tensor<string, []>("hidden_states_259_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_259_pad_0 = const()[name = tensor<string, []>("hidden_states_259_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 960, 3, 3]> up_blocks_2_resnets_2_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_conv1_weight_to_fp16"), val = tensor<fp16, [640, 960, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1634607040)))];
            tensor<fp16, [640]> up_blocks_2_resnets_2_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_conv1_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1645666304)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_259_cast = conv(bias = up_blocks_2_resnets_2_conv1_bias_to_fp16, dilations = var_7035, groups = var_5930, pad = hidden_states_259_pad_0, pad_type = hidden_states_259_pad_type_0, strides = var_7033, weight = up_blocks_2_resnets_2_conv1_weight_to_fp16, x = input_423_cast);
            tensor<int32, [2]> var_7041 = const()[name = tensor<string, []>("op_7041"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7043 = const()[name = tensor<string, []>("op_7043"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_37_pad_type_0 = const()[name = tensor<string, []>("temb_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_37_pad_0 = const()[name = tensor<string, []>("temb_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 1280, 1, 1]> up_blocks_2_resnets_2_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [640, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1645667648)))];
            tensor<fp16, [640]> up_blocks_2_resnets_2_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1647306112)))];
            tensor<fp16, [2, 640, 1, 1]> temb_37_cast = conv(bias = up_blocks_2_resnets_2_time_emb_proj_bias_to_fp16, dilations = var_7043, groups = var_5930, pad = temb_37_pad_0, pad_type = temb_37_pad_type_0, strides = var_7041, weight = up_blocks_2_resnets_2_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 640, 32, 32]> input_427_cast = add(x = hidden_states_259_cast, y = temb_37_cast);
            tensor<int32, [5]> reshape_196_shape_0 = const()[name = tensor<string, []>("reshape_196_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_196_cast = reshape(shape = reshape_196_shape_0, x = input_427_cast);
            tensor<int32, [3]> reduce_mean_147_axes_0 = const()[name = tensor<string, []>("reduce_mean_147_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_147_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_147_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_147_cast = reduce_mean(axes = reduce_mean_147_axes_0, keep_dims = reduce_mean_147_keep_dims_0, x = reshape_196_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_98_cast = sub(x = reshape_196_cast, y = reduce_mean_147_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_49_cast = square(x = sub_98_cast);
            tensor<int32, [3]> reduce_mean_149_axes_0 = const()[name = tensor<string, []>("reduce_mean_149_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_149_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_149_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_149_cast = reduce_mean(axes = reduce_mean_149_axes_0, keep_dims = reduce_mean_149_keep_dims_0, x = square_49_cast);
            tensor<fp16, []> add_98_y_0_to_fp16 = const()[name = tensor<string, []>("add_98_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_98_cast = add(x = reduce_mean_149_cast, y = add_98_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_49_cast = sqrt(x = add_98_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_49_cast = real_div(x = sub_98_cast, y = sqrt_49_cast);
            tensor<int32, [4]> reshape_197_shape_0 = const()[name = tensor<string, []>("reshape_197_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_197_cast = reshape(shape = reshape_197_shape_0, x = real_div_49_cast);
            tensor<fp16, [640]> add_99_mean_0_to_fp16 = const()[name = tensor<string, []>("add_99_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1647307456)))];
            tensor<fp16, [640]> add_99_variance_0_to_fp16 = const()[name = tensor<string, []>("add_99_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1647308800)))];
            tensor<fp16, [640]> add_99_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_99_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1647310144)))];
            tensor<fp16, [640]> add_99_beta_0_to_fp16 = const()[name = tensor<string, []>("add_99_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1647311488)))];
            tensor<fp16, []> add_99_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_99_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_99_cast = batch_norm(beta = add_99_beta_0_to_fp16, epsilon = add_99_epsilon_0_to_fp16, gamma = add_99_gamma_0_to_fp16, mean = add_99_mean_0_to_fp16, variance = add_99_variance_0_to_fp16, x = reshape_197_cast);
            tensor<fp16, [2, 640, 32, 32]> input_431_cast = silu(x = add_99_cast);
            tensor<int32, [2]> var_7053 = const()[name = tensor<string, []>("op_7053"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7055 = const()[name = tensor<string, []>("op_7055"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_261_pad_type_0 = const()[name = tensor<string, []>("hidden_states_261_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_261_pad_0 = const()[name = tensor<string, []>("hidden_states_261_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> up_blocks_2_resnets_2_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_conv2_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1647312832)))];
            tensor<fp16, [640]> up_blocks_2_resnets_2_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_conv2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1654685696)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_261_cast = conv(bias = up_blocks_2_resnets_2_conv2_bias_to_fp16, dilations = var_7055, groups = var_5930, pad = hidden_states_261_pad_0, pad_type = hidden_states_261_pad_type_0, strides = var_7053, weight = up_blocks_2_resnets_2_conv2_weight_to_fp16, x = input_431_cast);
            tensor<int32, [2]> var_7060 = const()[name = tensor<string, []>("op_7060"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7062 = const()[name = tensor<string, []>("op_7062"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_21_pad_type_0 = const()[name = tensor<string, []>("x_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_21_pad_0 = const()[name = tensor<string, []>("x_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 960, 1, 1]> up_blocks_2_resnets_2_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [640, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1654687040)))];
            tensor<fp16, [640]> up_blocks_2_resnets_2_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_resnets_2_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1655915904)))];
            tensor<fp16, [2, 640, 32, 32]> x_21_cast = conv(bias = up_blocks_2_resnets_2_conv_shortcut_bias_to_fp16, dilations = var_7062, groups = var_5930, pad = x_21_pad_0, pad_type = x_21_pad_type_0, strides = var_7060, weight = up_blocks_2_resnets_2_conv_shortcut_weight_to_fp16, x = input_419_cast);
            tensor<fp16, [2, 640, 32, 32]> hidden_states_263_cast = add(x = x_21_cast, y = hidden_states_261_cast);
            tensor<int32, [5]> reshape_200_shape_0 = const()[name = tensor<string, []>("reshape_200_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 32, 32])];
            tensor<fp16, [2, 32, 20, 32, 32]> reshape_200_cast = reshape(shape = reshape_200_shape_0, x = hidden_states_263_cast);
            tensor<int32, [3]> reduce_mean_150_axes_0 = const()[name = tensor<string, []>("reduce_mean_150_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_150_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_150_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_150_cast = reduce_mean(axes = reduce_mean_150_axes_0, keep_dims = reduce_mean_150_keep_dims_0, x = reshape_200_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> sub_100_cast = sub(x = reshape_200_cast, y = reduce_mean_150_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> square_50_cast = square(x = sub_100_cast);
            tensor<int32, [3]> reduce_mean_152_axes_0 = const()[name = tensor<string, []>("reduce_mean_152_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_152_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_152_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_152_cast = reduce_mean(axes = reduce_mean_152_axes_0, keep_dims = reduce_mean_152_keep_dims_0, x = square_50_cast);
            tensor<fp16, []> add_100_y_0_to_fp16 = const()[name = tensor<string, []>("add_100_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_100_cast = add(x = reduce_mean_152_cast, y = add_100_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_50_cast = sqrt(x = add_100_cast);
            tensor<fp16, [2, 32, 20, 32, 32]> real_div_50_cast = real_div(x = sub_100_cast, y = sqrt_50_cast);
            tensor<int32, [4]> reshape_201_shape_0 = const()[name = tensor<string, []>("reshape_201_shape_0"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> reshape_201_cast = reshape(shape = reshape_201_shape_0, x = real_div_50_cast);
            tensor<fp16, [640]> add_101_mean_0_to_fp16 = const()[name = tensor<string, []>("add_101_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1655917248)))];
            tensor<fp16, [640]> add_101_variance_0_to_fp16 = const()[name = tensor<string, []>("add_101_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1655918592)))];
            tensor<fp16, [640]> add_101_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_101_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1655919936)))];
            tensor<fp16, [640]> add_101_beta_0_to_fp16 = const()[name = tensor<string, []>("add_101_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1655921280)))];
            tensor<fp16, []> add_101_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_101_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 32, 32]> add_101_cast = batch_norm(beta = add_101_beta_0_to_fp16, epsilon = add_101_epsilon_0_to_fp16, gamma = add_101_gamma_0_to_fp16, mean = add_101_mean_0_to_fp16, variance = add_101_variance_0_to_fp16, x = reshape_201_cast);
            tensor<int32, [2]> var_7082 = const()[name = tensor<string, []>("op_7082"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7084 = const()[name = tensor<string, []>("op_7084"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_265_pad_type_0 = const()[name = tensor<string, []>("hidden_states_265_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_265_pad_0 = const()[name = tensor<string, []>("hidden_states_265_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_proj_in_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1655922624)))];
            tensor<fp16, [640]> up_blocks_2_attentions_2_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_proj_in_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1656741888)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_265_cast = conv(bias = up_blocks_2_attentions_2_proj_in_bias_to_fp16, dilations = var_7084, groups = var_5930, pad = hidden_states_265_pad_0, pad_type = hidden_states_265_pad_type_0, strides = var_7082, weight = up_blocks_2_attentions_2_proj_in_weight_to_fp16, x = add_101_cast);
            tensor<int32, [4]> var_7089 = const()[name = tensor<string, []>("op_7089"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<fp16, [2, 640, 1, 1024]> inputs_73_cast = reshape(shape = var_7089, x = hidden_states_265_cast);
            tensor<int32, [1]> var_7099 = const()[name = tensor<string, []>("op_7099"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_73_cast = reduce_mean(axes = var_7099, keep_dims = var_5925, x = inputs_73_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_73_cast = sub(x = inputs_73_cast, y = channels_mean_73_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_73_cast = mul(x = zero_mean_73_cast, y = zero_mean_73_cast);
            tensor<int32, [1]> var_7103 = const()[name = tensor<string, []>("op_7103"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_7104_cast = reduce_mean(axes = var_7103, keep_dims = var_5925, x = zero_mean_sq_73_cast);
            tensor<fp16, []> var_7105_to_fp16 = const()[name = tensor<string, []>("op_7105_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_7106_cast = add(x = var_7104_cast, y = var_7105_to_fp16);
            tensor<fp16, []> denom_73_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_73_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_73_cast = rsqrt(epsilon = denom_73_epsilon_0_to_fp16, x = var_7106_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_73_cast = mul(x = zero_mean_73_cast, y = denom_73_cast);
            tensor<fp16, [1, 640, 1, 1]> var_7110_to_fp16 = const()[name = tensor<string, []>("op_7110_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1656743232)))];
            tensor<fp16, [2, 640, 1, 1024]> var_7111_cast = add(x = out_73_cast, y = var_7110_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_7113_to_fp16 = const()[name = tensor<string, []>("op_7113_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1656744576)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_267_cast = mul(x = var_7111_cast, y = var_7113_to_fp16);
            tensor<int32, [2]> var_7120 = const()[name = tensor<string, []>("op_7120"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7122 = const()[name = tensor<string, []>("op_7122"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_49_pad_type_0 = const()[name = tensor<string, []>("q_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_49_pad_0 = const()[name = tensor<string, []>("q_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1656745920)))];
            tensor<fp16, [2, 640, 1, 1024]> q_49_cast = conv(dilations = var_7122, groups = var_5930, pad = q_49_pad_0, pad_type = q_49_pad_type_0, strides = var_7120, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_267_cast);
            tensor<int32, [2]> var_7126 = const()[name = tensor<string, []>("op_7126"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7128 = const()[name = tensor<string, []>("op_7128"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_97_pad_type_0 = const()[name = tensor<string, []>("k_97_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_97_pad_0 = const()[name = tensor<string, []>("k_97_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1657565184)))];
            tensor<fp16, [2, 640, 1, 1024]> k_97_cast = conv(dilations = var_7128, groups = var_5930, pad = k_97_pad_0, pad_type = k_97_pad_type_0, strides = var_7126, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_267_cast);
            tensor<int32, [2]> var_7132 = const()[name = tensor<string, []>("op_7132"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7134 = const()[name = tensor<string, []>("op_7134"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_49_pad_type_0 = const()[name = tensor<string, []>("v_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_49_pad_0 = const()[name = tensor<string, []>("v_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1658384448)))];
            tensor<fp16, [2, 640, 1, 1024]> v_49_cast = conv(dilations = var_7134, groups = var_5930, pad = v_49_pad_0, pad_type = v_49_pad_type_0, strides = var_7132, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_267_cast);
            tensor<int32, [4]> var_7138_begin_0 = const()[name = tensor<string, []>("op_7138_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7138_end_0 = const()[name = tensor<string, []>("op_7138_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_7138_end_mask_0 = const()[name = tensor<string, []>("op_7138_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7138_cast = slice_by_index(begin = var_7138_begin_0, end = var_7138_end_0, end_mask = var_7138_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_7142_begin_0 = const()[name = tensor<string, []>("op_7142_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_7142_end_0 = const()[name = tensor<string, []>("op_7142_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_7142_end_mask_0 = const()[name = tensor<string, []>("op_7142_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7142_cast = slice_by_index(begin = var_7142_begin_0, end = var_7142_end_0, end_mask = var_7142_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_7146_begin_0 = const()[name = tensor<string, []>("op_7146_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_7146_end_0 = const()[name = tensor<string, []>("op_7146_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_7146_end_mask_0 = const()[name = tensor<string, []>("op_7146_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7146_cast = slice_by_index(begin = var_7146_begin_0, end = var_7146_end_0, end_mask = var_7146_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_7150_begin_0 = const()[name = tensor<string, []>("op_7150_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_7150_end_0 = const()[name = tensor<string, []>("op_7150_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_7150_end_mask_0 = const()[name = tensor<string, []>("op_7150_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7150_cast = slice_by_index(begin = var_7150_begin_0, end = var_7150_end_0, end_mask = var_7150_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_7154_begin_0 = const()[name = tensor<string, []>("op_7154_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_7154_end_0 = const()[name = tensor<string, []>("op_7154_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_7154_end_mask_0 = const()[name = tensor<string, []>("op_7154_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7154_cast = slice_by_index(begin = var_7154_begin_0, end = var_7154_end_0, end_mask = var_7154_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_7158_begin_0 = const()[name = tensor<string, []>("op_7158_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_7158_end_0 = const()[name = tensor<string, []>("op_7158_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_7158_end_mask_0 = const()[name = tensor<string, []>("op_7158_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7158_cast = slice_by_index(begin = var_7158_begin_0, end = var_7158_end_0, end_mask = var_7158_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_7162_begin_0 = const()[name = tensor<string, []>("op_7162_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_7162_end_0 = const()[name = tensor<string, []>("op_7162_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_7162_end_mask_0 = const()[name = tensor<string, []>("op_7162_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7162_cast = slice_by_index(begin = var_7162_begin_0, end = var_7162_end_0, end_mask = var_7162_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> var_7166_begin_0 = const()[name = tensor<string, []>("op_7166_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_7166_end_0 = const()[name = tensor<string, []>("op_7166_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_7166_end_mask_0 = const()[name = tensor<string, []>("op_7166_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7166_cast = slice_by_index(begin = var_7166_begin_0, end = var_7166_end_0, end_mask = var_7166_end_mask_0, x = q_49_cast);
            tensor<int32, [4]> k_99_perm_0 = const()[name = tensor<string, []>("k_99_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_7173_begin_0 = const()[name = tensor<string, []>("op_7173_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7173_end_0 = const()[name = tensor<string, []>("op_7173_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 80])];
            tensor<bool, [4]> var_7173_end_mask_0 = const()[name = tensor<string, []>("op_7173_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 640]> transpose_7 = transpose(perm = k_99_perm_0, x = k_97_cast);
            tensor<fp16, [2, 1024, 1, 80]> var_7173_cast = slice_by_index(begin = var_7173_begin_0, end = var_7173_end_0, end_mask = var_7173_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_7177_begin_0 = const()[name = tensor<string, []>("op_7177_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_7177_end_0 = const()[name = tensor<string, []>("op_7177_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 160])];
            tensor<bool, [4]> var_7177_end_mask_0 = const()[name = tensor<string, []>("op_7177_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_7177_cast = slice_by_index(begin = var_7177_begin_0, end = var_7177_end_0, end_mask = var_7177_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_7181_begin_0 = const()[name = tensor<string, []>("op_7181_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_7181_end_0 = const()[name = tensor<string, []>("op_7181_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 240])];
            tensor<bool, [4]> var_7181_end_mask_0 = const()[name = tensor<string, []>("op_7181_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_7181_cast = slice_by_index(begin = var_7181_begin_0, end = var_7181_end_0, end_mask = var_7181_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_7185_begin_0 = const()[name = tensor<string, []>("op_7185_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_7185_end_0 = const()[name = tensor<string, []>("op_7185_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 320])];
            tensor<bool, [4]> var_7185_end_mask_0 = const()[name = tensor<string, []>("op_7185_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_7185_cast = slice_by_index(begin = var_7185_begin_0, end = var_7185_end_0, end_mask = var_7185_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_7189_begin_0 = const()[name = tensor<string, []>("op_7189_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_7189_end_0 = const()[name = tensor<string, []>("op_7189_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 400])];
            tensor<bool, [4]> var_7189_end_mask_0 = const()[name = tensor<string, []>("op_7189_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_7189_cast = slice_by_index(begin = var_7189_begin_0, end = var_7189_end_0, end_mask = var_7189_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_7193_begin_0 = const()[name = tensor<string, []>("op_7193_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 400])];
            tensor<int32, [4]> var_7193_end_0 = const()[name = tensor<string, []>("op_7193_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 480])];
            tensor<bool, [4]> var_7193_end_mask_0 = const()[name = tensor<string, []>("op_7193_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_7193_cast = slice_by_index(begin = var_7193_begin_0, end = var_7193_end_0, end_mask = var_7193_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_7197_begin_0 = const()[name = tensor<string, []>("op_7197_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_7197_end_0 = const()[name = tensor<string, []>("op_7197_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 560])];
            tensor<bool, [4]> var_7197_end_mask_0 = const()[name = tensor<string, []>("op_7197_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_7197_cast = slice_by_index(begin = var_7197_begin_0, end = var_7197_end_0, end_mask = var_7197_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_7201_begin_0 = const()[name = tensor<string, []>("op_7201_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 560])];
            tensor<int32, [4]> var_7201_end_0 = const()[name = tensor<string, []>("op_7201_end_0"), val = tensor<int32, [4]>([2, 1024, 1, 640])];
            tensor<bool, [4]> var_7201_end_mask_0 = const()[name = tensor<string, []>("op_7201_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 1024, 1, 80]> var_7201_cast = slice_by_index(begin = var_7201_begin_0, end = var_7201_end_0, end_mask = var_7201_end_mask_0, x = transpose_7);
            tensor<int32, [4]> var_7203_begin_0 = const()[name = tensor<string, []>("op_7203_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7203_end_0 = const()[name = tensor<string, []>("op_7203_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_7203_end_mask_0 = const()[name = tensor<string, []>("op_7203_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7203_cast = slice_by_index(begin = var_7203_begin_0, end = var_7203_end_0, end_mask = var_7203_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_7207_begin_0 = const()[name = tensor<string, []>("op_7207_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_7207_end_0 = const()[name = tensor<string, []>("op_7207_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_7207_end_mask_0 = const()[name = tensor<string, []>("op_7207_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7207_cast = slice_by_index(begin = var_7207_begin_0, end = var_7207_end_0, end_mask = var_7207_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_7211_begin_0 = const()[name = tensor<string, []>("op_7211_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_7211_end_0 = const()[name = tensor<string, []>("op_7211_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_7211_end_mask_0 = const()[name = tensor<string, []>("op_7211_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7211_cast = slice_by_index(begin = var_7211_begin_0, end = var_7211_end_0, end_mask = var_7211_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_7215_begin_0 = const()[name = tensor<string, []>("op_7215_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_7215_end_0 = const()[name = tensor<string, []>("op_7215_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_7215_end_mask_0 = const()[name = tensor<string, []>("op_7215_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7215_cast = slice_by_index(begin = var_7215_begin_0, end = var_7215_end_0, end_mask = var_7215_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_7219_begin_0 = const()[name = tensor<string, []>("op_7219_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_7219_end_0 = const()[name = tensor<string, []>("op_7219_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_7219_end_mask_0 = const()[name = tensor<string, []>("op_7219_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7219_cast = slice_by_index(begin = var_7219_begin_0, end = var_7219_end_0, end_mask = var_7219_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_7223_begin_0 = const()[name = tensor<string, []>("op_7223_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_7223_end_0 = const()[name = tensor<string, []>("op_7223_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_7223_end_mask_0 = const()[name = tensor<string, []>("op_7223_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7223_cast = slice_by_index(begin = var_7223_begin_0, end = var_7223_end_0, end_mask = var_7223_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_7227_begin_0 = const()[name = tensor<string, []>("op_7227_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_7227_end_0 = const()[name = tensor<string, []>("op_7227_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_7227_end_mask_0 = const()[name = tensor<string, []>("op_7227_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7227_cast = slice_by_index(begin = var_7227_begin_0, end = var_7227_end_0, end_mask = var_7227_end_mask_0, x = v_49_cast);
            tensor<int32, [4]> var_7231_begin_0 = const()[name = tensor<string, []>("op_7231_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_7231_end_0 = const()[name = tensor<string, []>("op_7231_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_7231_end_mask_0 = const()[name = tensor<string, []>("op_7231_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7231_cast = slice_by_index(begin = var_7231_begin_0, end = var_7231_end_0, end_mask = var_7231_end_mask_0, x = v_49_cast);
            tensor<string, []> var_7235_equation_0 = const()[name = tensor<string, []>("op_7235_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_7235_cast = einsum(equation = var_7235_equation_0, values = (var_7173_cast, var_7138_cast));
            tensor<fp16, []> var_7236_to_fp16 = const()[name = tensor<string, []>("op_7236_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_385_cast = mul(x = var_7235_cast, y = var_7236_to_fp16);
            tensor<string, []> var_7239_equation_0 = const()[name = tensor<string, []>("op_7239_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_7239_cast = einsum(equation = var_7239_equation_0, values = (var_7177_cast, var_7142_cast));
            tensor<fp16, []> var_7240_to_fp16 = const()[name = tensor<string, []>("op_7240_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_387_cast = mul(x = var_7239_cast, y = var_7240_to_fp16);
            tensor<string, []> var_7243_equation_0 = const()[name = tensor<string, []>("op_7243_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_7243_cast = einsum(equation = var_7243_equation_0, values = (var_7181_cast, var_7146_cast));
            tensor<fp16, []> var_7244_to_fp16 = const()[name = tensor<string, []>("op_7244_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_389_cast = mul(x = var_7243_cast, y = var_7244_to_fp16);
            tensor<string, []> var_7247_equation_0 = const()[name = tensor<string, []>("op_7247_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_7247_cast = einsum(equation = var_7247_equation_0, values = (var_7185_cast, var_7150_cast));
            tensor<fp16, []> var_7248_to_fp16 = const()[name = tensor<string, []>("op_7248_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_391_cast = mul(x = var_7247_cast, y = var_7248_to_fp16);
            tensor<string, []> var_7251_equation_0 = const()[name = tensor<string, []>("op_7251_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_7251_cast = einsum(equation = var_7251_equation_0, values = (var_7189_cast, var_7154_cast));
            tensor<fp16, []> var_7252_to_fp16 = const()[name = tensor<string, []>("op_7252_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_393_cast = mul(x = var_7251_cast, y = var_7252_to_fp16);
            tensor<string, []> var_7255_equation_0 = const()[name = tensor<string, []>("op_7255_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_7255_cast = einsum(equation = var_7255_equation_0, values = (var_7193_cast, var_7158_cast));
            tensor<fp16, []> var_7256_to_fp16 = const()[name = tensor<string, []>("op_7256_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_395_cast = mul(x = var_7255_cast, y = var_7256_to_fp16);
            tensor<string, []> var_7259_equation_0 = const()[name = tensor<string, []>("op_7259_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_7259_cast = einsum(equation = var_7259_equation_0, values = (var_7197_cast, var_7162_cast));
            tensor<fp16, []> var_7260_to_fp16 = const()[name = tensor<string, []>("op_7260_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_397_cast = mul(x = var_7259_cast, y = var_7260_to_fp16);
            tensor<string, []> var_7263_equation_0 = const()[name = tensor<string, []>("op_7263_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 1024, 1, 1024]> var_7263_cast = einsum(equation = var_7263_equation_0, values = (var_7201_cast, var_7166_cast));
            tensor<fp16, []> var_7264_to_fp16 = const()[name = tensor<string, []>("op_7264_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 1024, 1, 1024]> aw_399_cast = mul(x = var_7263_cast, y = var_7264_to_fp16);
            tensor<fp16, [2, 1024, 1, 1024]> var_7266_cast = softmax(axis = var_5930, x = aw_385_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_7267_cast = softmax(axis = var_5930, x = aw_387_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_7268_cast = softmax(axis = var_5930, x = aw_389_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_7269_cast = softmax(axis = var_5930, x = aw_391_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_7270_cast = softmax(axis = var_5930, x = aw_393_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_7271_cast = softmax(axis = var_5930, x = aw_395_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_7272_cast = softmax(axis = var_5930, x = aw_397_cast);
            tensor<fp16, [2, 1024, 1, 1024]> var_7273_cast = softmax(axis = var_5930, x = aw_399_cast);
            tensor<string, []> var_7275_equation_0 = const()[name = tensor<string, []>("op_7275_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7275_cast = einsum(equation = var_7275_equation_0, values = (var_7203_cast, var_7266_cast));
            tensor<string, []> var_7277_equation_0 = const()[name = tensor<string, []>("op_7277_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7277_cast = einsum(equation = var_7277_equation_0, values = (var_7207_cast, var_7267_cast));
            tensor<string, []> var_7279_equation_0 = const()[name = tensor<string, []>("op_7279_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7279_cast = einsum(equation = var_7279_equation_0, values = (var_7211_cast, var_7268_cast));
            tensor<string, []> var_7281_equation_0 = const()[name = tensor<string, []>("op_7281_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7281_cast = einsum(equation = var_7281_equation_0, values = (var_7215_cast, var_7269_cast));
            tensor<string, []> var_7283_equation_0 = const()[name = tensor<string, []>("op_7283_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7283_cast = einsum(equation = var_7283_equation_0, values = (var_7219_cast, var_7270_cast));
            tensor<string, []> var_7285_equation_0 = const()[name = tensor<string, []>("op_7285_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7285_cast = einsum(equation = var_7285_equation_0, values = (var_7223_cast, var_7271_cast));
            tensor<string, []> var_7287_equation_0 = const()[name = tensor<string, []>("op_7287_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7287_cast = einsum(equation = var_7287_equation_0, values = (var_7227_cast, var_7272_cast));
            tensor<string, []> var_7289_equation_0 = const()[name = tensor<string, []>("op_7289_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7289_cast = einsum(equation = var_7289_equation_0, values = (var_7231_cast, var_7273_cast));
            tensor<bool, []> input_435_interleave_0 = const()[name = tensor<string, []>("input_435_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_435_cast = concat(axis = var_5930, interleave = input_435_interleave_0, values = (var_7275_cast, var_7277_cast, var_7279_cast, var_7281_cast, var_7283_cast, var_7285_cast, var_7287_cast, var_7289_cast));
            tensor<int32, [2]> var_7295 = const()[name = tensor<string, []>("op_7295"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7297 = const()[name = tensor<string, []>("op_7297"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_7299_pad_type_0 = const()[name = tensor<string, []>("op_7299_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_7299_pad_0 = const()[name = tensor<string, []>("op_7299_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1659203712)))];
            tensor<fp16, [640]> up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1660022976)))];
            tensor<fp16, [2, 640, 1, 1024]> var_7299_cast = conv(bias = up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_7297, groups = var_5930, pad = var_7299_pad_0, pad_type = var_7299_pad_type_0, strides = var_7295, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_435_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_75_cast = add(x = var_7299_cast, y = inputs_73_cast);
            tensor<int32, [1]> var_7303 = const()[name = tensor<string, []>("op_7303"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_75_cast = reduce_mean(axes = var_7303, keep_dims = var_5925, x = inputs_75_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_75_cast = sub(x = inputs_75_cast, y = channels_mean_75_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_75_cast = mul(x = zero_mean_75_cast, y = zero_mean_75_cast);
            tensor<int32, [1]> var_7307 = const()[name = tensor<string, []>("op_7307"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_7308_cast = reduce_mean(axes = var_7307, keep_dims = var_5925, x = zero_mean_sq_75_cast);
            tensor<fp16, []> var_7309_to_fp16 = const()[name = tensor<string, []>("op_7309_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_7310_cast = add(x = var_7308_cast, y = var_7309_to_fp16);
            tensor<fp16, []> denom_75_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_75_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_75_cast = rsqrt(epsilon = denom_75_epsilon_0_to_fp16, x = var_7310_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_75_cast = mul(x = zero_mean_75_cast, y = denom_75_cast);
            tensor<fp16, [1, 640, 1, 1]> var_7314_to_fp16 = const()[name = tensor<string, []>("op_7314_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1660024320)))];
            tensor<fp16, [2, 640, 1, 1024]> var_7315_cast = add(x = out_75_cast, y = var_7314_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_7317_to_fp16 = const()[name = tensor<string, []>("op_7317_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1660025664)))];
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_269_cast = mul(x = var_7315_cast, y = var_7317_to_fp16);
            tensor<int32, [2]> var_7324 = const()[name = tensor<string, []>("op_7324"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7326 = const()[name = tensor<string, []>("op_7326"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_51_pad_type_0 = const()[name = tensor<string, []>("q_51_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_51_pad_0 = const()[name = tensor<string, []>("q_51_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1660027008)))];
            tensor<fp16, [2, 640, 1, 1024]> q_51_cast = conv(dilations = var_7326, groups = var_5930, pad = q_51_pad_0, pad_type = q_51_pad_type_0, strides = var_7324, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_269_cast);
            tensor<int32, [2]> var_7330 = const()[name = tensor<string, []>("op_7330"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7332 = const()[name = tensor<string, []>("op_7332"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_101_pad_type_0 = const()[name = tensor<string, []>("k_101_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_101_pad_0 = const()[name = tensor<string, []>("k_101_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 768, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [640, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1660846272)))];
            tensor<fp16, [2, 640, 1, 77]> k_101_cast = conv(dilations = var_7332, groups = var_5930, pad = k_101_pad_0, pad_type = k_101_pad_type_0, strides = var_7330, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_7336 = const()[name = tensor<string, []>("op_7336"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7338 = const()[name = tensor<string, []>("op_7338"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_51_pad_type_0 = const()[name = tensor<string, []>("v_51_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_51_pad_0 = const()[name = tensor<string, []>("v_51_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 768, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [640, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1661829376)))];
            tensor<fp16, [2, 640, 1, 77]> v_51_cast = conv(dilations = var_7338, groups = var_5930, pad = v_51_pad_0, pad_type = v_51_pad_type_0, strides = var_7336, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_7342_begin_0 = const()[name = tensor<string, []>("op_7342_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7342_end_0 = const()[name = tensor<string, []>("op_7342_end_0"), val = tensor<int32, [4]>([2, 80, 1, 1024])];
            tensor<bool, [4]> var_7342_end_mask_0 = const()[name = tensor<string, []>("op_7342_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7342_cast = slice_by_index(begin = var_7342_begin_0, end = var_7342_end_0, end_mask = var_7342_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_7346_begin_0 = const()[name = tensor<string, []>("op_7346_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_7346_end_0 = const()[name = tensor<string, []>("op_7346_end_0"), val = tensor<int32, [4]>([2, 160, 1, 1024])];
            tensor<bool, [4]> var_7346_end_mask_0 = const()[name = tensor<string, []>("op_7346_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7346_cast = slice_by_index(begin = var_7346_begin_0, end = var_7346_end_0, end_mask = var_7346_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_7350_begin_0 = const()[name = tensor<string, []>("op_7350_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_7350_end_0 = const()[name = tensor<string, []>("op_7350_end_0"), val = tensor<int32, [4]>([2, 240, 1, 1024])];
            tensor<bool, [4]> var_7350_end_mask_0 = const()[name = tensor<string, []>("op_7350_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7350_cast = slice_by_index(begin = var_7350_begin_0, end = var_7350_end_0, end_mask = var_7350_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_7354_begin_0 = const()[name = tensor<string, []>("op_7354_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_7354_end_0 = const()[name = tensor<string, []>("op_7354_end_0"), val = tensor<int32, [4]>([2, 320, 1, 1024])];
            tensor<bool, [4]> var_7354_end_mask_0 = const()[name = tensor<string, []>("op_7354_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7354_cast = slice_by_index(begin = var_7354_begin_0, end = var_7354_end_0, end_mask = var_7354_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_7358_begin_0 = const()[name = tensor<string, []>("op_7358_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_7358_end_0 = const()[name = tensor<string, []>("op_7358_end_0"), val = tensor<int32, [4]>([2, 400, 1, 1024])];
            tensor<bool, [4]> var_7358_end_mask_0 = const()[name = tensor<string, []>("op_7358_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7358_cast = slice_by_index(begin = var_7358_begin_0, end = var_7358_end_0, end_mask = var_7358_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_7362_begin_0 = const()[name = tensor<string, []>("op_7362_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_7362_end_0 = const()[name = tensor<string, []>("op_7362_end_0"), val = tensor<int32, [4]>([2, 480, 1, 1024])];
            tensor<bool, [4]> var_7362_end_mask_0 = const()[name = tensor<string, []>("op_7362_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7362_cast = slice_by_index(begin = var_7362_begin_0, end = var_7362_end_0, end_mask = var_7362_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_7366_begin_0 = const()[name = tensor<string, []>("op_7366_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_7366_end_0 = const()[name = tensor<string, []>("op_7366_end_0"), val = tensor<int32, [4]>([2, 560, 1, 1024])];
            tensor<bool, [4]> var_7366_end_mask_0 = const()[name = tensor<string, []>("op_7366_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7366_cast = slice_by_index(begin = var_7366_begin_0, end = var_7366_end_0, end_mask = var_7366_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> var_7370_begin_0 = const()[name = tensor<string, []>("op_7370_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_7370_end_0 = const()[name = tensor<string, []>("op_7370_end_0"), val = tensor<int32, [4]>([2, 640, 1, 1024])];
            tensor<bool, [4]> var_7370_end_mask_0 = const()[name = tensor<string, []>("op_7370_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 1024]> var_7370_cast = slice_by_index(begin = var_7370_begin_0, end = var_7370_end_0, end_mask = var_7370_end_mask_0, x = q_51_cast);
            tensor<int32, [4]> k_103_perm_0 = const()[name = tensor<string, []>("k_103_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_7377_begin_0 = const()[name = tensor<string, []>("op_7377_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7377_end_0 = const()[name = tensor<string, []>("op_7377_end_0"), val = tensor<int32, [4]>([2, 77, 1, 80])];
            tensor<bool, [4]> var_7377_end_mask_0 = const()[name = tensor<string, []>("op_7377_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 640]> transpose_6 = transpose(perm = k_103_perm_0, x = k_101_cast);
            tensor<fp16, [2, 77, 1, 80]> var_7377_cast = slice_by_index(begin = var_7377_begin_0, end = var_7377_end_0, end_mask = var_7377_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_7381_begin_0 = const()[name = tensor<string, []>("op_7381_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_7381_end_0 = const()[name = tensor<string, []>("op_7381_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_7381_end_mask_0 = const()[name = tensor<string, []>("op_7381_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_7381_cast = slice_by_index(begin = var_7381_begin_0, end = var_7381_end_0, end_mask = var_7381_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_7385_begin_0 = const()[name = tensor<string, []>("op_7385_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_7385_end_0 = const()[name = tensor<string, []>("op_7385_end_0"), val = tensor<int32, [4]>([2, 77, 1, 240])];
            tensor<bool, [4]> var_7385_end_mask_0 = const()[name = tensor<string, []>("op_7385_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_7385_cast = slice_by_index(begin = var_7385_begin_0, end = var_7385_end_0, end_mask = var_7385_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_7389_begin_0 = const()[name = tensor<string, []>("op_7389_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_7389_end_0 = const()[name = tensor<string, []>("op_7389_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_7389_end_mask_0 = const()[name = tensor<string, []>("op_7389_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_7389_cast = slice_by_index(begin = var_7389_begin_0, end = var_7389_end_0, end_mask = var_7389_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_7393_begin_0 = const()[name = tensor<string, []>("op_7393_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 320])];
            tensor<int32, [4]> var_7393_end_0 = const()[name = tensor<string, []>("op_7393_end_0"), val = tensor<int32, [4]>([2, 77, 1, 400])];
            tensor<bool, [4]> var_7393_end_mask_0 = const()[name = tensor<string, []>("op_7393_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_7393_cast = slice_by_index(begin = var_7393_begin_0, end = var_7393_end_0, end_mask = var_7393_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_7397_begin_0 = const()[name = tensor<string, []>("op_7397_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 400])];
            tensor<int32, [4]> var_7397_end_0 = const()[name = tensor<string, []>("op_7397_end_0"), val = tensor<int32, [4]>([2, 77, 1, 480])];
            tensor<bool, [4]> var_7397_end_mask_0 = const()[name = tensor<string, []>("op_7397_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_7397_cast = slice_by_index(begin = var_7397_begin_0, end = var_7397_end_0, end_mask = var_7397_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_7401_begin_0 = const()[name = tensor<string, []>("op_7401_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 480])];
            tensor<int32, [4]> var_7401_end_0 = const()[name = tensor<string, []>("op_7401_end_0"), val = tensor<int32, [4]>([2, 77, 1, 560])];
            tensor<bool, [4]> var_7401_end_mask_0 = const()[name = tensor<string, []>("op_7401_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_7401_cast = slice_by_index(begin = var_7401_begin_0, end = var_7401_end_0, end_mask = var_7401_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_7405_begin_0 = const()[name = tensor<string, []>("op_7405_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 560])];
            tensor<int32, [4]> var_7405_end_0 = const()[name = tensor<string, []>("op_7405_end_0"), val = tensor<int32, [4]>([2, 77, 1, 640])];
            tensor<bool, [4]> var_7405_end_mask_0 = const()[name = tensor<string, []>("op_7405_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 80]> var_7405_cast = slice_by_index(begin = var_7405_begin_0, end = var_7405_end_0, end_mask = var_7405_end_mask_0, x = transpose_6);
            tensor<int32, [4]> var_7407_begin_0 = const()[name = tensor<string, []>("op_7407_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7407_end_0 = const()[name = tensor<string, []>("op_7407_end_0"), val = tensor<int32, [4]>([2, 80, 1, 77])];
            tensor<bool, [4]> var_7407_end_mask_0 = const()[name = tensor<string, []>("op_7407_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_7407_cast = slice_by_index(begin = var_7407_begin_0, end = var_7407_end_0, end_mask = var_7407_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_7411_begin_0 = const()[name = tensor<string, []>("op_7411_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_7411_end_0 = const()[name = tensor<string, []>("op_7411_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_7411_end_mask_0 = const()[name = tensor<string, []>("op_7411_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_7411_cast = slice_by_index(begin = var_7411_begin_0, end = var_7411_end_0, end_mask = var_7411_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_7415_begin_0 = const()[name = tensor<string, []>("op_7415_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_7415_end_0 = const()[name = tensor<string, []>("op_7415_end_0"), val = tensor<int32, [4]>([2, 240, 1, 77])];
            tensor<bool, [4]> var_7415_end_mask_0 = const()[name = tensor<string, []>("op_7415_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_7415_cast = slice_by_index(begin = var_7415_begin_0, end = var_7415_end_0, end_mask = var_7415_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_7419_begin_0 = const()[name = tensor<string, []>("op_7419_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_7419_end_0 = const()[name = tensor<string, []>("op_7419_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_7419_end_mask_0 = const()[name = tensor<string, []>("op_7419_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_7419_cast = slice_by_index(begin = var_7419_begin_0, end = var_7419_end_0, end_mask = var_7419_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_7423_begin_0 = const()[name = tensor<string, []>("op_7423_begin_0"), val = tensor<int32, [4]>([0, 320, 0, 0])];
            tensor<int32, [4]> var_7423_end_0 = const()[name = tensor<string, []>("op_7423_end_0"), val = tensor<int32, [4]>([2, 400, 1, 77])];
            tensor<bool, [4]> var_7423_end_mask_0 = const()[name = tensor<string, []>("op_7423_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_7423_cast = slice_by_index(begin = var_7423_begin_0, end = var_7423_end_0, end_mask = var_7423_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_7427_begin_0 = const()[name = tensor<string, []>("op_7427_begin_0"), val = tensor<int32, [4]>([0, 400, 0, 0])];
            tensor<int32, [4]> var_7427_end_0 = const()[name = tensor<string, []>("op_7427_end_0"), val = tensor<int32, [4]>([2, 480, 1, 77])];
            tensor<bool, [4]> var_7427_end_mask_0 = const()[name = tensor<string, []>("op_7427_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_7427_cast = slice_by_index(begin = var_7427_begin_0, end = var_7427_end_0, end_mask = var_7427_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_7431_begin_0 = const()[name = tensor<string, []>("op_7431_begin_0"), val = tensor<int32, [4]>([0, 480, 0, 0])];
            tensor<int32, [4]> var_7431_end_0 = const()[name = tensor<string, []>("op_7431_end_0"), val = tensor<int32, [4]>([2, 560, 1, 77])];
            tensor<bool, [4]> var_7431_end_mask_0 = const()[name = tensor<string, []>("op_7431_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_7431_cast = slice_by_index(begin = var_7431_begin_0, end = var_7431_end_0, end_mask = var_7431_end_mask_0, x = v_51_cast);
            tensor<int32, [4]> var_7435_begin_0 = const()[name = tensor<string, []>("op_7435_begin_0"), val = tensor<int32, [4]>([0, 560, 0, 0])];
            tensor<int32, [4]> var_7435_end_0 = const()[name = tensor<string, []>("op_7435_end_0"), val = tensor<int32, [4]>([2, 640, 1, 77])];
            tensor<bool, [4]> var_7435_end_mask_0 = const()[name = tensor<string, []>("op_7435_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 80, 1, 77]> var_7435_cast = slice_by_index(begin = var_7435_begin_0, end = var_7435_end_0, end_mask = var_7435_end_mask_0, x = v_51_cast);
            tensor<string, []> var_7439_equation_0 = const()[name = tensor<string, []>("op_7439_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_7439_cast = einsum(equation = var_7439_equation_0, values = (var_7377_cast, var_7342_cast));
            tensor<fp16, []> var_7440_to_fp16 = const()[name = tensor<string, []>("op_7440_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_401_cast = mul(x = var_7439_cast, y = var_7440_to_fp16);
            tensor<string, []> var_7443_equation_0 = const()[name = tensor<string, []>("op_7443_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_7443_cast = einsum(equation = var_7443_equation_0, values = (var_7381_cast, var_7346_cast));
            tensor<fp16, []> var_7444_to_fp16 = const()[name = tensor<string, []>("op_7444_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_403_cast = mul(x = var_7443_cast, y = var_7444_to_fp16);
            tensor<string, []> var_7447_equation_0 = const()[name = tensor<string, []>("op_7447_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_7447_cast = einsum(equation = var_7447_equation_0, values = (var_7385_cast, var_7350_cast));
            tensor<fp16, []> var_7448_to_fp16 = const()[name = tensor<string, []>("op_7448_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_405_cast = mul(x = var_7447_cast, y = var_7448_to_fp16);
            tensor<string, []> var_7451_equation_0 = const()[name = tensor<string, []>("op_7451_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_7451_cast = einsum(equation = var_7451_equation_0, values = (var_7389_cast, var_7354_cast));
            tensor<fp16, []> var_7452_to_fp16 = const()[name = tensor<string, []>("op_7452_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_407_cast = mul(x = var_7451_cast, y = var_7452_to_fp16);
            tensor<string, []> var_7455_equation_0 = const()[name = tensor<string, []>("op_7455_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_7455_cast = einsum(equation = var_7455_equation_0, values = (var_7393_cast, var_7358_cast));
            tensor<fp16, []> var_7456_to_fp16 = const()[name = tensor<string, []>("op_7456_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_409_cast = mul(x = var_7455_cast, y = var_7456_to_fp16);
            tensor<string, []> var_7459_equation_0 = const()[name = tensor<string, []>("op_7459_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_7459_cast = einsum(equation = var_7459_equation_0, values = (var_7397_cast, var_7362_cast));
            tensor<fp16, []> var_7460_to_fp16 = const()[name = tensor<string, []>("op_7460_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_411_cast = mul(x = var_7459_cast, y = var_7460_to_fp16);
            tensor<string, []> var_7463_equation_0 = const()[name = tensor<string, []>("op_7463_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_7463_cast = einsum(equation = var_7463_equation_0, values = (var_7401_cast, var_7366_cast));
            tensor<fp16, []> var_7464_to_fp16 = const()[name = tensor<string, []>("op_7464_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_413_cast = mul(x = var_7463_cast, y = var_7464_to_fp16);
            tensor<string, []> var_7467_equation_0 = const()[name = tensor<string, []>("op_7467_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 1024]> var_7467_cast = einsum(equation = var_7467_equation_0, values = (var_7405_cast, var_7370_cast));
            tensor<fp16, []> var_7468_to_fp16 = const()[name = tensor<string, []>("op_7468_to_fp16"), val = tensor<fp16, []>(0x1.cap-4)];
            tensor<fp16, [2, 77, 1, 1024]> aw_415_cast = mul(x = var_7467_cast, y = var_7468_to_fp16);
            tensor<fp16, [2, 77, 1, 1024]> var_7470_cast = softmax(axis = var_5930, x = aw_401_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_7471_cast = softmax(axis = var_5930, x = aw_403_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_7472_cast = softmax(axis = var_5930, x = aw_405_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_7473_cast = softmax(axis = var_5930, x = aw_407_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_7474_cast = softmax(axis = var_5930, x = aw_409_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_7475_cast = softmax(axis = var_5930, x = aw_411_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_7476_cast = softmax(axis = var_5930, x = aw_413_cast);
            tensor<fp16, [2, 77, 1, 1024]> var_7477_cast = softmax(axis = var_5930, x = aw_415_cast);
            tensor<string, []> var_7479_equation_0 = const()[name = tensor<string, []>("op_7479_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7479_cast = einsum(equation = var_7479_equation_0, values = (var_7407_cast, var_7470_cast));
            tensor<string, []> var_7481_equation_0 = const()[name = tensor<string, []>("op_7481_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7481_cast = einsum(equation = var_7481_equation_0, values = (var_7411_cast, var_7471_cast));
            tensor<string, []> var_7483_equation_0 = const()[name = tensor<string, []>("op_7483_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7483_cast = einsum(equation = var_7483_equation_0, values = (var_7415_cast, var_7472_cast));
            tensor<string, []> var_7485_equation_0 = const()[name = tensor<string, []>("op_7485_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7485_cast = einsum(equation = var_7485_equation_0, values = (var_7419_cast, var_7473_cast));
            tensor<string, []> var_7487_equation_0 = const()[name = tensor<string, []>("op_7487_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7487_cast = einsum(equation = var_7487_equation_0, values = (var_7423_cast, var_7474_cast));
            tensor<string, []> var_7489_equation_0 = const()[name = tensor<string, []>("op_7489_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7489_cast = einsum(equation = var_7489_equation_0, values = (var_7427_cast, var_7475_cast));
            tensor<string, []> var_7491_equation_0 = const()[name = tensor<string, []>("op_7491_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7491_cast = einsum(equation = var_7491_equation_0, values = (var_7431_cast, var_7476_cast));
            tensor<string, []> var_7493_equation_0 = const()[name = tensor<string, []>("op_7493_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 80, 1, 1024]> var_7493_cast = einsum(equation = var_7493_equation_0, values = (var_7435_cast, var_7477_cast));
            tensor<bool, []> input_437_interleave_0 = const()[name = tensor<string, []>("input_437_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 1, 1024]> input_437_cast = concat(axis = var_5930, interleave = input_437_interleave_0, values = (var_7479_cast, var_7481_cast, var_7483_cast, var_7485_cast, var_7487_cast, var_7489_cast, var_7491_cast, var_7493_cast));
            tensor<int32, [2]> var_7499 = const()[name = tensor<string, []>("op_7499"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7501 = const()[name = tensor<string, []>("op_7501"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_7503_pad_type_0 = const()[name = tensor<string, []>("op_7503_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_7503_pad_0 = const()[name = tensor<string, []>("op_7503_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1662812480)))];
            tensor<fp16, [640]> up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1663631744)))];
            tensor<fp16, [2, 640, 1, 1024]> var_7503_cast = conv(bias = up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_7501, groups = var_5930, pad = var_7503_pad_0, pad_type = var_7503_pad_type_0, strides = var_7499, weight = up_blocks_2_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_437_cast);
            tensor<fp16, [2, 640, 1, 1024]> inputs_77_cast = add(x = var_7503_cast, y = inputs_75_cast);
            tensor<int32, [1]> var_7507 = const()[name = tensor<string, []>("op_7507"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> channels_mean_77_cast = reduce_mean(axes = var_7507, keep_dims = var_5925, x = inputs_77_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_77_cast = sub(x = inputs_77_cast, y = channels_mean_77_cast);
            tensor<fp16, [2, 640, 1, 1024]> zero_mean_sq_77_cast = mul(x = zero_mean_77_cast, y = zero_mean_77_cast);
            tensor<int32, [1]> var_7511 = const()[name = tensor<string, []>("op_7511"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 1024]> var_7512_cast = reduce_mean(axes = var_7511, keep_dims = var_5925, x = zero_mean_sq_77_cast);
            tensor<fp16, []> var_7513_to_fp16 = const()[name = tensor<string, []>("op_7513_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 1024]> var_7514_cast = add(x = var_7512_cast, y = var_7513_to_fp16);
            tensor<fp16, []> denom_77_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_77_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 1024]> denom_77_cast = rsqrt(epsilon = denom_77_epsilon_0_to_fp16, x = var_7514_cast);
            tensor<fp16, [2, 640, 1, 1024]> out_77_cast = mul(x = zero_mean_77_cast, y = denom_77_cast);
            tensor<fp16, [1, 640, 1, 1]> var_7518_to_fp16 = const()[name = tensor<string, []>("op_7518_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1663633088)))];
            tensor<fp16, [2, 640, 1, 1024]> var_7519_cast = add(x = out_77_cast, y = var_7518_to_fp16);
            tensor<fp16, [1, 640, 1, 1]> var_7521_to_fp16 = const()[name = tensor<string, []>("op_7521_to_fp16"), val = tensor<fp16, [1, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1663634432)))];
            tensor<fp16, [2, 640, 1, 1024]> input_439_cast = mul(x = var_7519_cast, y = var_7521_to_fp16);
            tensor<int32, [2]> var_7529 = const()[name = tensor<string, []>("op_7529"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7531 = const()[name = tensor<string, []>("op_7531"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_7533_pad_type_0 = const()[name = tensor<string, []>("op_7533_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_7533_pad_0 = const()[name = tensor<string, []>("op_7533_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [5120, 640, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [5120, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1663635776)))];
            tensor<fp16, [5120]> up_blocks_2_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [5120]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1670189440)))];
            tensor<fp16, [2, 5120, 1, 1024]> var_7533_cast = conv(bias = up_blocks_2_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_7531, groups = var_5930, pad = var_7533_pad_0, pad_type = var_7533_pad_type_0, strides = var_7529, weight = up_blocks_2_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_439_cast);
            tensor<int32, [2]> var_7534_split_sizes_0 = const()[name = tensor<string, []>("op_7534_split_sizes_0"), val = tensor<int32, [2]>([2560, 2560])];
            tensor<int32, []> var_7534_axis_0 = const()[name = tensor<string, []>("op_7534_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 2560, 1, 1024]> var_7534_cast_0, tensor<fp16, [2, 2560, 1, 1024]> var_7534_cast_1 = split(axis = var_7534_axis_0, split_sizes = var_7534_split_sizes_0, x = var_7533_cast);
            tensor<string, []> var_7536_mode_0 = const()[name = tensor<string, []>("op_7536_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 2560, 1, 1024]> var_7536_cast = gelu(mode = var_7536_mode_0, x = var_7534_cast_1);
            tensor<fp16, [2, 2560, 1, 1024]> input_441_cast = mul(x = var_7534_cast_0, y = var_7536_cast);
            tensor<int32, [2]> var_7540 = const()[name = tensor<string, []>("op_7540"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7542 = const()[name = tensor<string, []>("op_7542"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_7544_pad_type_0 = const()[name = tensor<string, []>("op_7544_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_7544_pad_0 = const()[name = tensor<string, []>("op_7544_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 2560, 1, 1]> up_blocks_2_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [640, 2560, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1670199744)))];
            tensor<fp16, [640]> up_blocks_2_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1673476608)))];
            tensor<fp16, [2, 640, 1, 1024]> var_7544_cast = conv(bias = up_blocks_2_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_7542, groups = var_5930, pad = var_7544_pad_0, pad_type = var_7544_pad_type_0, strides = var_7540, weight = up_blocks_2_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_441_cast);
            tensor<fp16, [2, 640, 1, 1024]> hidden_states_273_cast = add(x = var_7544_cast, y = inputs_77_cast);
            tensor<int32, [4]> var_7546 = const()[name = tensor<string, []>("op_7546"), val = tensor<int32, [4]>([2, 640, 32, 32])];
            tensor<fp16, [2, 640, 32, 32]> input_443_cast = reshape(shape = var_7546, x = hidden_states_273_cast);
            tensor<int32, [2]> var_7550 = const()[name = tensor<string, []>("op_7550"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7552 = const()[name = tensor<string, []>("op_7552"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_275_pad_type_0 = const()[name = tensor<string, []>("hidden_states_275_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_275_pad_0 = const()[name = tensor<string, []>("hidden_states_275_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [640, 640, 1, 1]> up_blocks_2_attentions_2_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_proj_out_weight_to_fp16"), val = tensor<fp16, [640, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1673477952)))];
            tensor<fp16, [640]> up_blocks_2_attentions_2_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_attentions_2_proj_out_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1674297216)))];
            tensor<fp16, [2, 640, 32, 32]> hidden_states_275_cast = conv(bias = up_blocks_2_attentions_2_proj_out_bias_to_fp16, dilations = var_7552, groups = var_5930, pad = hidden_states_275_pad_0, pad_type = hidden_states_275_pad_type_0, strides = var_7550, weight = up_blocks_2_attentions_2_proj_out_weight_to_fp16, x = input_443_cast);
            tensor<fp16, [2, 640, 32, 32]> input_445_cast = add(x = hidden_states_275_cast, y = hidden_states_263_cast);
            tensor<fp32, []> input_447_scale_factor_height_0 = const()[name = tensor<string, []>("input_447_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> input_447_scale_factor_width_0 = const()[name = tensor<string, []>("input_447_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [2, 640, 64, 64]> input_447_cast = upsample_nearest_neighbor(scale_factor_height = input_447_scale_factor_height_0, scale_factor_width = input_447_scale_factor_width_0, x = input_445_cast);
            tensor<int32, [2]> var_7561 = const()[name = tensor<string, []>("op_7561"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7563 = const()[name = tensor<string, []>("op_7563"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_277_pad_type_0 = const()[name = tensor<string, []>("hidden_states_277_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_277_pad_0 = const()[name = tensor<string, []>("hidden_states_277_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [640, 640, 3, 3]> up_blocks_2_upsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_upsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [640, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1674298560)))];
            tensor<fp16, [640]> up_blocks_2_upsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_2_upsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1681671424)))];
            tensor<fp16, [2, 640, 64, 64]> hidden_states_277_cast = conv(bias = up_blocks_2_upsamplers_0_conv_bias_to_fp16, dilations = var_7563, groups = var_5930, pad = hidden_states_277_pad_0, pad_type = hidden_states_277_pad_type_0, strides = var_7561, weight = up_blocks_2_upsamplers_0_conv_weight_to_fp16, x = input_447_cast);
            tensor<bool, []> var_7582 = const()[name = tensor<string, []>("op_7582"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_7587 = const()[name = tensor<string, []>("op_7587"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_449_interleave_0 = const()[name = tensor<string, []>("input_449_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 960, 64, 64]> input_449_cast = concat(axis = var_7587, interleave = input_449_interleave_0, values = (hidden_states_277_cast, input_61_cast));
            tensor<int32, [5]> reshape_204_shape_0 = const()[name = tensor<string, []>("reshape_204_shape_0"), val = tensor<int32, [5]>([2, 32, 30, 64, 64])];
            tensor<fp16, [2, 32, 30, 64, 64]> reshape_204_cast = reshape(shape = reshape_204_shape_0, x = input_449_cast);
            tensor<int32, [3]> reduce_mean_153_axes_0 = const()[name = tensor<string, []>("reduce_mean_153_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_153_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_153_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_153_cast = reduce_mean(axes = reduce_mean_153_axes_0, keep_dims = reduce_mean_153_keep_dims_0, x = reshape_204_cast);
            tensor<fp16, [2, 32, 30, 64, 64]> sub_102_cast = sub(x = reshape_204_cast, y = reduce_mean_153_cast);
            tensor<fp16, [2, 32, 30, 64, 64]> square_51_cast = square(x = sub_102_cast);
            tensor<int32, [3]> reduce_mean_155_axes_0 = const()[name = tensor<string, []>("reduce_mean_155_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_155_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_155_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_155_cast = reduce_mean(axes = reduce_mean_155_axes_0, keep_dims = reduce_mean_155_keep_dims_0, x = square_51_cast);
            tensor<fp16, []> add_102_y_0_to_fp16 = const()[name = tensor<string, []>("add_102_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_102_cast = add(x = reduce_mean_155_cast, y = add_102_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_51_cast = sqrt(x = add_102_cast);
            tensor<fp16, [2, 32, 30, 64, 64]> real_div_51_cast = real_div(x = sub_102_cast, y = sqrt_51_cast);
            tensor<int32, [4]> reshape_205_shape_0 = const()[name = tensor<string, []>("reshape_205_shape_0"), val = tensor<int32, [4]>([2, 960, 64, 64])];
            tensor<fp16, [2, 960, 64, 64]> reshape_205_cast = reshape(shape = reshape_205_shape_0, x = real_div_51_cast);
            tensor<fp16, [960]> add_103_mean_0_to_fp16 = const()[name = tensor<string, []>("add_103_mean_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1681672768)))];
            tensor<fp16, [960]> add_103_variance_0_to_fp16 = const()[name = tensor<string, []>("add_103_variance_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1681674752)))];
            tensor<fp16, [960]> add_103_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_103_gamma_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1681676736)))];
            tensor<fp16, [960]> add_103_beta_0_to_fp16 = const()[name = tensor<string, []>("add_103_beta_0_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1681678720)))];
            tensor<fp16, []> add_103_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_103_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 960, 64, 64]> add_103_cast = batch_norm(beta = add_103_beta_0_to_fp16, epsilon = add_103_epsilon_0_to_fp16, gamma = add_103_gamma_0_to_fp16, mean = add_103_mean_0_to_fp16, variance = add_103_variance_0_to_fp16, x = reshape_205_cast);
            tensor<fp16, [2, 960, 64, 64]> input_453_cast = silu(x = add_103_cast);
            tensor<int32, [2]> var_7614 = const()[name = tensor<string, []>("op_7614"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7616 = const()[name = tensor<string, []>("op_7616"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_279_pad_type_0 = const()[name = tensor<string, []>("hidden_states_279_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_279_pad_0 = const()[name = tensor<string, []>("hidden_states_279_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 960, 3, 3]> up_blocks_3_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [320, 960, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1681680704)))];
            tensor<fp16, [320]> up_blocks_3_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1687210368)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_279_cast = conv(bias = up_blocks_3_resnets_0_conv1_bias_to_fp16, dilations = var_7616, groups = var_7587, pad = hidden_states_279_pad_0, pad_type = hidden_states_279_pad_type_0, strides = var_7614, weight = up_blocks_3_resnets_0_conv1_weight_to_fp16, x = input_453_cast);
            tensor<int32, [2]> var_7622 = const()[name = tensor<string, []>("op_7622"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7624 = const()[name = tensor<string, []>("op_7624"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_39_pad_type_0 = const()[name = tensor<string, []>("temb_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_39_pad_0 = const()[name = tensor<string, []>("temb_39_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> up_blocks_3_resnets_0_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1687211072)))];
            tensor<fp16, [320]> up_blocks_3_resnets_0_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1688030336)))];
            tensor<fp16, [2, 320, 1, 1]> temb_39_cast = conv(bias = up_blocks_3_resnets_0_time_emb_proj_bias_to_fp16, dilations = var_7624, groups = var_7587, pad = temb_39_pad_0, pad_type = temb_39_pad_type_0, strides = var_7622, weight = up_blocks_3_resnets_0_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 320, 64, 64]> input_457_cast = add(x = hidden_states_279_cast, y = temb_39_cast);
            tensor<int32, [5]> reshape_208_shape_0 = const()[name = tensor<string, []>("reshape_208_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_208_cast = reshape(shape = reshape_208_shape_0, x = input_457_cast);
            tensor<int32, [3]> reduce_mean_156_axes_0 = const()[name = tensor<string, []>("reduce_mean_156_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_156_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_156_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_156_cast = reduce_mean(axes = reduce_mean_156_axes_0, keep_dims = reduce_mean_156_keep_dims_0, x = reshape_208_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_104_cast = sub(x = reshape_208_cast, y = reduce_mean_156_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_52_cast = square(x = sub_104_cast);
            tensor<int32, [3]> reduce_mean_158_axes_0 = const()[name = tensor<string, []>("reduce_mean_158_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_158_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_158_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_158_cast = reduce_mean(axes = reduce_mean_158_axes_0, keep_dims = reduce_mean_158_keep_dims_0, x = square_52_cast);
            tensor<fp16, []> add_104_y_0_to_fp16 = const()[name = tensor<string, []>("add_104_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_104_cast = add(x = reduce_mean_158_cast, y = add_104_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_52_cast = sqrt(x = add_104_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_52_cast = real_div(x = sub_104_cast, y = sqrt_52_cast);
            tensor<int32, [4]> reshape_209_shape_0 = const()[name = tensor<string, []>("reshape_209_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_209_cast = reshape(shape = reshape_209_shape_0, x = real_div_52_cast);
            tensor<fp16, [320]> add_105_mean_0_to_fp16 = const()[name = tensor<string, []>("add_105_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1688031040)))];
            tensor<fp16, [320]> add_105_variance_0_to_fp16 = const()[name = tensor<string, []>("add_105_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1688031744)))];
            tensor<fp16, [320]> add_105_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_105_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1688032448)))];
            tensor<fp16, [320]> add_105_beta_0_to_fp16 = const()[name = tensor<string, []>("add_105_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1688033152)))];
            tensor<fp16, []> add_105_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_105_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_105_cast = batch_norm(beta = add_105_beta_0_to_fp16, epsilon = add_105_epsilon_0_to_fp16, gamma = add_105_gamma_0_to_fp16, mean = add_105_mean_0_to_fp16, variance = add_105_variance_0_to_fp16, x = reshape_209_cast);
            tensor<fp16, [2, 320, 64, 64]> input_461_cast = silu(x = add_105_cast);
            tensor<int32, [2]> var_7634 = const()[name = tensor<string, []>("op_7634"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7636 = const()[name = tensor<string, []>("op_7636"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_281_pad_type_0 = const()[name = tensor<string, []>("hidden_states_281_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_281_pad_0 = const()[name = tensor<string, []>("hidden_states_281_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> up_blocks_3_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1688033856)))];
            tensor<fp16, [320]> up_blocks_3_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1689877120)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_281_cast = conv(bias = up_blocks_3_resnets_0_conv2_bias_to_fp16, dilations = var_7636, groups = var_7587, pad = hidden_states_281_pad_0, pad_type = hidden_states_281_pad_type_0, strides = var_7634, weight = up_blocks_3_resnets_0_conv2_weight_to_fp16, x = input_461_cast);
            tensor<int32, [2]> var_7641 = const()[name = tensor<string, []>("op_7641"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7643 = const()[name = tensor<string, []>("op_7643"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_23_pad_type_0 = const()[name = tensor<string, []>("x_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_23_pad_0 = const()[name = tensor<string, []>("x_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 960, 1, 1]> up_blocks_3_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [320, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1689877824)))];
            tensor<fp16, [320]> up_blocks_3_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1690492288)))];
            tensor<fp16, [2, 320, 64, 64]> x_23_cast = conv(bias = up_blocks_3_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_7643, groups = var_7587, pad = x_23_pad_0, pad_type = x_23_pad_type_0, strides = var_7641, weight = up_blocks_3_resnets_0_conv_shortcut_weight_to_fp16, x = input_449_cast);
            tensor<fp16, [2, 320, 64, 64]> hidden_states_283_cast = add(x = x_23_cast, y = hidden_states_281_cast);
            tensor<int32, [5]> reshape_212_shape_0 = const()[name = tensor<string, []>("reshape_212_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_212_cast = reshape(shape = reshape_212_shape_0, x = hidden_states_283_cast);
            tensor<int32, [3]> reduce_mean_159_axes_0 = const()[name = tensor<string, []>("reduce_mean_159_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_159_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_159_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_159_cast = reduce_mean(axes = reduce_mean_159_axes_0, keep_dims = reduce_mean_159_keep_dims_0, x = reshape_212_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_106_cast = sub(x = reshape_212_cast, y = reduce_mean_159_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_53_cast = square(x = sub_106_cast);
            tensor<int32, [3]> reduce_mean_161_axes_0 = const()[name = tensor<string, []>("reduce_mean_161_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_161_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_161_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_161_cast = reduce_mean(axes = reduce_mean_161_axes_0, keep_dims = reduce_mean_161_keep_dims_0, x = square_53_cast);
            tensor<fp16, []> add_106_y_0_to_fp16 = const()[name = tensor<string, []>("add_106_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_106_cast = add(x = reduce_mean_161_cast, y = add_106_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_53_cast = sqrt(x = add_106_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_53_cast = real_div(x = sub_106_cast, y = sqrt_53_cast);
            tensor<int32, [4]> reshape_213_shape_0 = const()[name = tensor<string, []>("reshape_213_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_213_cast = reshape(shape = reshape_213_shape_0, x = real_div_53_cast);
            tensor<fp16, [320]> add_107_mean_0_to_fp16 = const()[name = tensor<string, []>("add_107_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1690492992)))];
            tensor<fp16, [320]> add_107_variance_0_to_fp16 = const()[name = tensor<string, []>("add_107_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1690493696)))];
            tensor<fp16, [320]> add_107_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_107_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1690494400)))];
            tensor<fp16, [320]> add_107_beta_0_to_fp16 = const()[name = tensor<string, []>("add_107_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1690495104)))];
            tensor<fp16, []> add_107_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_107_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_107_cast = batch_norm(beta = add_107_beta_0_to_fp16, epsilon = add_107_epsilon_0_to_fp16, gamma = add_107_gamma_0_to_fp16, mean = add_107_mean_0_to_fp16, variance = add_107_variance_0_to_fp16, x = reshape_213_cast);
            tensor<int32, [2]> var_7663 = const()[name = tensor<string, []>("op_7663"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7665 = const()[name = tensor<string, []>("op_7665"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_285_pad_type_0 = const()[name = tensor<string, []>("hidden_states_285_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_285_pad_0 = const()[name = tensor<string, []>("hidden_states_285_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_proj_in_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1690495808)))];
            tensor<fp16, [320]> up_blocks_3_attentions_0_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_proj_in_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1690700672)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_285_cast = conv(bias = up_blocks_3_attentions_0_proj_in_bias_to_fp16, dilations = var_7665, groups = var_7587, pad = hidden_states_285_pad_0, pad_type = hidden_states_285_pad_type_0, strides = var_7663, weight = up_blocks_3_attentions_0_proj_in_weight_to_fp16, x = add_107_cast);
            tensor<int32, [4]> var_7670 = const()[name = tensor<string, []>("op_7670"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<fp16, [2, 320, 1, 4096]> inputs_79_cast = reshape(shape = var_7670, x = hidden_states_285_cast);
            tensor<int32, [1]> var_7680 = const()[name = tensor<string, []>("op_7680"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_79_cast = reduce_mean(axes = var_7680, keep_dims = var_7582, x = inputs_79_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_79_cast = sub(x = inputs_79_cast, y = channels_mean_79_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_79_cast = mul(x = zero_mean_79_cast, y = zero_mean_79_cast);
            tensor<int32, [1]> var_7684 = const()[name = tensor<string, []>("op_7684"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_7685_cast = reduce_mean(axes = var_7684, keep_dims = var_7582, x = zero_mean_sq_79_cast);
            tensor<fp16, []> var_7686_to_fp16 = const()[name = tensor<string, []>("op_7686_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_7687_cast = add(x = var_7685_cast, y = var_7686_to_fp16);
            tensor<fp16, []> denom_79_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_79_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_79_cast = rsqrt(epsilon = denom_79_epsilon_0_to_fp16, x = var_7687_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_79_cast = mul(x = zero_mean_79_cast, y = denom_79_cast);
            tensor<fp16, [1, 320, 1, 1]> var_7691_to_fp16 = const()[name = tensor<string, []>("op_7691_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1690701376)))];
            tensor<fp16, [2, 320, 1, 4096]> var_7692_cast = add(x = out_79_cast, y = var_7691_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_7694_to_fp16 = const()[name = tensor<string, []>("op_7694_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1690702080)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_287_cast = mul(x = var_7692_cast, y = var_7694_to_fp16);
            tensor<int32, [2]> var_7701 = const()[name = tensor<string, []>("op_7701"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7703 = const()[name = tensor<string, []>("op_7703"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_53_pad_type_0 = const()[name = tensor<string, []>("q_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_53_pad_0 = const()[name = tensor<string, []>("q_53_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1690702784)))];
            tensor<fp16, [2, 320, 1, 4096]> q_53_cast = conv(dilations = var_7703, groups = var_7587, pad = q_53_pad_0, pad_type = q_53_pad_type_0, strides = var_7701, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_287_cast);
            tensor<int32, [2]> var_7707 = const()[name = tensor<string, []>("op_7707"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7709 = const()[name = tensor<string, []>("op_7709"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_105_pad_type_0 = const()[name = tensor<string, []>("k_105_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_105_pad_0 = const()[name = tensor<string, []>("k_105_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1690907648)))];
            tensor<fp16, [2, 320, 1, 4096]> k_105_cast = conv(dilations = var_7709, groups = var_7587, pad = k_105_pad_0, pad_type = k_105_pad_type_0, strides = var_7707, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_287_cast);
            tensor<int32, [2]> var_7713 = const()[name = tensor<string, []>("op_7713"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7715 = const()[name = tensor<string, []>("op_7715"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_53_pad_type_0 = const()[name = tensor<string, []>("v_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_53_pad_0 = const()[name = tensor<string, []>("v_53_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1691112512)))];
            tensor<fp16, [2, 320, 1, 4096]> v_53_cast = conv(dilations = var_7715, groups = var_7587, pad = v_53_pad_0, pad_type = v_53_pad_type_0, strides = var_7713, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_287_cast);
            tensor<int32, [4]> var_7719_begin_0 = const()[name = tensor<string, []>("op_7719_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7719_end_0 = const()[name = tensor<string, []>("op_7719_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_7719_end_mask_0 = const()[name = tensor<string, []>("op_7719_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7719_cast = slice_by_index(begin = var_7719_begin_0, end = var_7719_end_0, end_mask = var_7719_end_mask_0, x = q_53_cast);
            tensor<int32, [4]> var_7723_begin_0 = const()[name = tensor<string, []>("op_7723_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_7723_end_0 = const()[name = tensor<string, []>("op_7723_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_7723_end_mask_0 = const()[name = tensor<string, []>("op_7723_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7723_cast = slice_by_index(begin = var_7723_begin_0, end = var_7723_end_0, end_mask = var_7723_end_mask_0, x = q_53_cast);
            tensor<int32, [4]> var_7727_begin_0 = const()[name = tensor<string, []>("op_7727_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_7727_end_0 = const()[name = tensor<string, []>("op_7727_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_7727_end_mask_0 = const()[name = tensor<string, []>("op_7727_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7727_cast = slice_by_index(begin = var_7727_begin_0, end = var_7727_end_0, end_mask = var_7727_end_mask_0, x = q_53_cast);
            tensor<int32, [4]> var_7731_begin_0 = const()[name = tensor<string, []>("op_7731_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_7731_end_0 = const()[name = tensor<string, []>("op_7731_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_7731_end_mask_0 = const()[name = tensor<string, []>("op_7731_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7731_cast = slice_by_index(begin = var_7731_begin_0, end = var_7731_end_0, end_mask = var_7731_end_mask_0, x = q_53_cast);
            tensor<int32, [4]> var_7735_begin_0 = const()[name = tensor<string, []>("op_7735_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_7735_end_0 = const()[name = tensor<string, []>("op_7735_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_7735_end_mask_0 = const()[name = tensor<string, []>("op_7735_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7735_cast = slice_by_index(begin = var_7735_begin_0, end = var_7735_end_0, end_mask = var_7735_end_mask_0, x = q_53_cast);
            tensor<int32, [4]> var_7739_begin_0 = const()[name = tensor<string, []>("op_7739_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_7739_end_0 = const()[name = tensor<string, []>("op_7739_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_7739_end_mask_0 = const()[name = tensor<string, []>("op_7739_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7739_cast = slice_by_index(begin = var_7739_begin_0, end = var_7739_end_0, end_mask = var_7739_end_mask_0, x = q_53_cast);
            tensor<int32, [4]> var_7743_begin_0 = const()[name = tensor<string, []>("op_7743_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_7743_end_0 = const()[name = tensor<string, []>("op_7743_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_7743_end_mask_0 = const()[name = tensor<string, []>("op_7743_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7743_cast = slice_by_index(begin = var_7743_begin_0, end = var_7743_end_0, end_mask = var_7743_end_mask_0, x = q_53_cast);
            tensor<int32, [4]> var_7747_begin_0 = const()[name = tensor<string, []>("op_7747_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_7747_end_0 = const()[name = tensor<string, []>("op_7747_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_7747_end_mask_0 = const()[name = tensor<string, []>("op_7747_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7747_cast = slice_by_index(begin = var_7747_begin_0, end = var_7747_end_0, end_mask = var_7747_end_mask_0, x = q_53_cast);
            tensor<int32, [4]> k_107_perm_0 = const()[name = tensor<string, []>("k_107_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_7754_begin_0 = const()[name = tensor<string, []>("op_7754_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7754_end_0 = const()[name = tensor<string, []>("op_7754_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 40])];
            tensor<bool, [4]> var_7754_end_mask_0 = const()[name = tensor<string, []>("op_7754_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 320]> transpose_5 = transpose(perm = k_107_perm_0, x = k_105_cast);
            tensor<fp16, [2, 4096, 1, 40]> var_7754_cast = slice_by_index(begin = var_7754_begin_0, end = var_7754_end_0, end_mask = var_7754_end_mask_0, x = transpose_5);
            tensor<int32, [4]> var_7758_begin_0 = const()[name = tensor<string, []>("op_7758_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 40])];
            tensor<int32, [4]> var_7758_end_0 = const()[name = tensor<string, []>("op_7758_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 80])];
            tensor<bool, [4]> var_7758_end_mask_0 = const()[name = tensor<string, []>("op_7758_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_7758_cast = slice_by_index(begin = var_7758_begin_0, end = var_7758_end_0, end_mask = var_7758_end_mask_0, x = transpose_5);
            tensor<int32, [4]> var_7762_begin_0 = const()[name = tensor<string, []>("op_7762_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_7762_end_0 = const()[name = tensor<string, []>("op_7762_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 120])];
            tensor<bool, [4]> var_7762_end_mask_0 = const()[name = tensor<string, []>("op_7762_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_7762_cast = slice_by_index(begin = var_7762_begin_0, end = var_7762_end_0, end_mask = var_7762_end_mask_0, x = transpose_5);
            tensor<int32, [4]> var_7766_begin_0 = const()[name = tensor<string, []>("op_7766_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 120])];
            tensor<int32, [4]> var_7766_end_0 = const()[name = tensor<string, []>("op_7766_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 160])];
            tensor<bool, [4]> var_7766_end_mask_0 = const()[name = tensor<string, []>("op_7766_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_7766_cast = slice_by_index(begin = var_7766_begin_0, end = var_7766_end_0, end_mask = var_7766_end_mask_0, x = transpose_5);
            tensor<int32, [4]> var_7770_begin_0 = const()[name = tensor<string, []>("op_7770_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_7770_end_0 = const()[name = tensor<string, []>("op_7770_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 200])];
            tensor<bool, [4]> var_7770_end_mask_0 = const()[name = tensor<string, []>("op_7770_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_7770_cast = slice_by_index(begin = var_7770_begin_0, end = var_7770_end_0, end_mask = var_7770_end_mask_0, x = transpose_5);
            tensor<int32, [4]> var_7774_begin_0 = const()[name = tensor<string, []>("op_7774_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 200])];
            tensor<int32, [4]> var_7774_end_0 = const()[name = tensor<string, []>("op_7774_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 240])];
            tensor<bool, [4]> var_7774_end_mask_0 = const()[name = tensor<string, []>("op_7774_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_7774_cast = slice_by_index(begin = var_7774_begin_0, end = var_7774_end_0, end_mask = var_7774_end_mask_0, x = transpose_5);
            tensor<int32, [4]> var_7778_begin_0 = const()[name = tensor<string, []>("op_7778_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_7778_end_0 = const()[name = tensor<string, []>("op_7778_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 280])];
            tensor<bool, [4]> var_7778_end_mask_0 = const()[name = tensor<string, []>("op_7778_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_7778_cast = slice_by_index(begin = var_7778_begin_0, end = var_7778_end_0, end_mask = var_7778_end_mask_0, x = transpose_5);
            tensor<int32, [4]> var_7782_begin_0 = const()[name = tensor<string, []>("op_7782_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 280])];
            tensor<int32, [4]> var_7782_end_0 = const()[name = tensor<string, []>("op_7782_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 320])];
            tensor<bool, [4]> var_7782_end_mask_0 = const()[name = tensor<string, []>("op_7782_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_7782_cast = slice_by_index(begin = var_7782_begin_0, end = var_7782_end_0, end_mask = var_7782_end_mask_0, x = transpose_5);
            tensor<int32, [4]> var_7784_begin_0 = const()[name = tensor<string, []>("op_7784_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7784_end_0 = const()[name = tensor<string, []>("op_7784_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_7784_end_mask_0 = const()[name = tensor<string, []>("op_7784_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7784_cast = slice_by_index(begin = var_7784_begin_0, end = var_7784_end_0, end_mask = var_7784_end_mask_0, x = v_53_cast);
            tensor<int32, [4]> var_7788_begin_0 = const()[name = tensor<string, []>("op_7788_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_7788_end_0 = const()[name = tensor<string, []>("op_7788_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_7788_end_mask_0 = const()[name = tensor<string, []>("op_7788_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7788_cast = slice_by_index(begin = var_7788_begin_0, end = var_7788_end_0, end_mask = var_7788_end_mask_0, x = v_53_cast);
            tensor<int32, [4]> var_7792_begin_0 = const()[name = tensor<string, []>("op_7792_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_7792_end_0 = const()[name = tensor<string, []>("op_7792_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_7792_end_mask_0 = const()[name = tensor<string, []>("op_7792_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7792_cast = slice_by_index(begin = var_7792_begin_0, end = var_7792_end_0, end_mask = var_7792_end_mask_0, x = v_53_cast);
            tensor<int32, [4]> var_7796_begin_0 = const()[name = tensor<string, []>("op_7796_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_7796_end_0 = const()[name = tensor<string, []>("op_7796_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_7796_end_mask_0 = const()[name = tensor<string, []>("op_7796_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7796_cast = slice_by_index(begin = var_7796_begin_0, end = var_7796_end_0, end_mask = var_7796_end_mask_0, x = v_53_cast);
            tensor<int32, [4]> var_7800_begin_0 = const()[name = tensor<string, []>("op_7800_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_7800_end_0 = const()[name = tensor<string, []>("op_7800_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_7800_end_mask_0 = const()[name = tensor<string, []>("op_7800_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7800_cast = slice_by_index(begin = var_7800_begin_0, end = var_7800_end_0, end_mask = var_7800_end_mask_0, x = v_53_cast);
            tensor<int32, [4]> var_7804_begin_0 = const()[name = tensor<string, []>("op_7804_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_7804_end_0 = const()[name = tensor<string, []>("op_7804_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_7804_end_mask_0 = const()[name = tensor<string, []>("op_7804_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7804_cast = slice_by_index(begin = var_7804_begin_0, end = var_7804_end_0, end_mask = var_7804_end_mask_0, x = v_53_cast);
            tensor<int32, [4]> var_7808_begin_0 = const()[name = tensor<string, []>("op_7808_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_7808_end_0 = const()[name = tensor<string, []>("op_7808_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_7808_end_mask_0 = const()[name = tensor<string, []>("op_7808_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7808_cast = slice_by_index(begin = var_7808_begin_0, end = var_7808_end_0, end_mask = var_7808_end_mask_0, x = v_53_cast);
            tensor<int32, [4]> var_7812_begin_0 = const()[name = tensor<string, []>("op_7812_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_7812_end_0 = const()[name = tensor<string, []>("op_7812_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_7812_end_mask_0 = const()[name = tensor<string, []>("op_7812_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7812_cast = slice_by_index(begin = var_7812_begin_0, end = var_7812_end_0, end_mask = var_7812_end_mask_0, x = v_53_cast);
            tensor<string, []> var_7816_equation_0 = const()[name = tensor<string, []>("op_7816_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_7816_cast = einsum(equation = var_7816_equation_0, values = (var_7754_cast, var_7719_cast));
            tensor<fp16, []> var_7817_to_fp16 = const()[name = tensor<string, []>("op_7817_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_417_cast = mul(x = var_7816_cast, y = var_7817_to_fp16);
            tensor<string, []> var_7820_equation_0 = const()[name = tensor<string, []>("op_7820_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_7820_cast = einsum(equation = var_7820_equation_0, values = (var_7758_cast, var_7723_cast));
            tensor<fp16, []> var_7821_to_fp16 = const()[name = tensor<string, []>("op_7821_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_419_cast = mul(x = var_7820_cast, y = var_7821_to_fp16);
            tensor<string, []> var_7824_equation_0 = const()[name = tensor<string, []>("op_7824_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_7824_cast = einsum(equation = var_7824_equation_0, values = (var_7762_cast, var_7727_cast));
            tensor<fp16, []> var_7825_to_fp16 = const()[name = tensor<string, []>("op_7825_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_421_cast = mul(x = var_7824_cast, y = var_7825_to_fp16);
            tensor<string, []> var_7828_equation_0 = const()[name = tensor<string, []>("op_7828_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_7828_cast = einsum(equation = var_7828_equation_0, values = (var_7766_cast, var_7731_cast));
            tensor<fp16, []> var_7829_to_fp16 = const()[name = tensor<string, []>("op_7829_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_423_cast = mul(x = var_7828_cast, y = var_7829_to_fp16);
            tensor<string, []> var_7832_equation_0 = const()[name = tensor<string, []>("op_7832_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_7832_cast = einsum(equation = var_7832_equation_0, values = (var_7770_cast, var_7735_cast));
            tensor<fp16, []> var_7833_to_fp16 = const()[name = tensor<string, []>("op_7833_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_425_cast = mul(x = var_7832_cast, y = var_7833_to_fp16);
            tensor<string, []> var_7836_equation_0 = const()[name = tensor<string, []>("op_7836_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_7836_cast = einsum(equation = var_7836_equation_0, values = (var_7774_cast, var_7739_cast));
            tensor<fp16, []> var_7837_to_fp16 = const()[name = tensor<string, []>("op_7837_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_427_cast = mul(x = var_7836_cast, y = var_7837_to_fp16);
            tensor<string, []> var_7840_equation_0 = const()[name = tensor<string, []>("op_7840_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_7840_cast = einsum(equation = var_7840_equation_0, values = (var_7778_cast, var_7743_cast));
            tensor<fp16, []> var_7841_to_fp16 = const()[name = tensor<string, []>("op_7841_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_429_cast = mul(x = var_7840_cast, y = var_7841_to_fp16);
            tensor<string, []> var_7844_equation_0 = const()[name = tensor<string, []>("op_7844_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_7844_cast = einsum(equation = var_7844_equation_0, values = (var_7782_cast, var_7747_cast));
            tensor<fp16, []> var_7845_to_fp16 = const()[name = tensor<string, []>("op_7845_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_431_cast = mul(x = var_7844_cast, y = var_7845_to_fp16);
            tensor<fp16, [2, 4096, 1, 4096]> var_7847_cast = softmax(axis = var_7587, x = aw_417_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_7848_cast = softmax(axis = var_7587, x = aw_419_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_7849_cast = softmax(axis = var_7587, x = aw_421_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_7850_cast = softmax(axis = var_7587, x = aw_423_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_7851_cast = softmax(axis = var_7587, x = aw_425_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_7852_cast = softmax(axis = var_7587, x = aw_427_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_7853_cast = softmax(axis = var_7587, x = aw_429_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_7854_cast = softmax(axis = var_7587, x = aw_431_cast);
            tensor<string, []> var_7856_equation_0 = const()[name = tensor<string, []>("op_7856_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_7856_cast = einsum(equation = var_7856_equation_0, values = (var_7784_cast, var_7847_cast));
            tensor<string, []> var_7858_equation_0 = const()[name = tensor<string, []>("op_7858_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_7858_cast = einsum(equation = var_7858_equation_0, values = (var_7788_cast, var_7848_cast));
            tensor<string, []> var_7860_equation_0 = const()[name = tensor<string, []>("op_7860_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_7860_cast = einsum(equation = var_7860_equation_0, values = (var_7792_cast, var_7849_cast));
            tensor<string, []> var_7862_equation_0 = const()[name = tensor<string, []>("op_7862_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_7862_cast = einsum(equation = var_7862_equation_0, values = (var_7796_cast, var_7850_cast));
            tensor<string, []> var_7864_equation_0 = const()[name = tensor<string, []>("op_7864_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_7864_cast = einsum(equation = var_7864_equation_0, values = (var_7800_cast, var_7851_cast));
            tensor<string, []> var_7866_equation_0 = const()[name = tensor<string, []>("op_7866_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_7866_cast = einsum(equation = var_7866_equation_0, values = (var_7804_cast, var_7852_cast));
            tensor<string, []> var_7868_equation_0 = const()[name = tensor<string, []>("op_7868_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_7868_cast = einsum(equation = var_7868_equation_0, values = (var_7808_cast, var_7853_cast));
            tensor<string, []> var_7870_equation_0 = const()[name = tensor<string, []>("op_7870_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_7870_cast = einsum(equation = var_7870_equation_0, values = (var_7812_cast, var_7854_cast));
            tensor<bool, []> input_465_interleave_0 = const()[name = tensor<string, []>("input_465_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_465_cast = concat(axis = var_7587, interleave = input_465_interleave_0, values = (var_7856_cast, var_7858_cast, var_7860_cast, var_7862_cast, var_7864_cast, var_7866_cast, var_7868_cast, var_7870_cast));
            tensor<int32, [2]> var_7876 = const()[name = tensor<string, []>("op_7876"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7878 = const()[name = tensor<string, []>("op_7878"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_7880_pad_type_0 = const()[name = tensor<string, []>("op_7880_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_7880_pad_0 = const()[name = tensor<string, []>("op_7880_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1691317376)))];
            tensor<fp16, [320]> up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1691522240)))];
            tensor<fp16, [2, 320, 1, 4096]> var_7880_cast = conv(bias = up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_7878, groups = var_7587, pad = var_7880_pad_0, pad_type = var_7880_pad_type_0, strides = var_7876, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_465_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_81_cast = add(x = var_7880_cast, y = inputs_79_cast);
            tensor<int32, [1]> var_7884 = const()[name = tensor<string, []>("op_7884"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_81_cast = reduce_mean(axes = var_7884, keep_dims = var_7582, x = inputs_81_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_81_cast = sub(x = inputs_81_cast, y = channels_mean_81_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_81_cast = mul(x = zero_mean_81_cast, y = zero_mean_81_cast);
            tensor<int32, [1]> var_7888 = const()[name = tensor<string, []>("op_7888"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_7889_cast = reduce_mean(axes = var_7888, keep_dims = var_7582, x = zero_mean_sq_81_cast);
            tensor<fp16, []> var_7890_to_fp16 = const()[name = tensor<string, []>("op_7890_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_7891_cast = add(x = var_7889_cast, y = var_7890_to_fp16);
            tensor<fp16, []> denom_81_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_81_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_81_cast = rsqrt(epsilon = denom_81_epsilon_0_to_fp16, x = var_7891_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_81_cast = mul(x = zero_mean_81_cast, y = denom_81_cast);
            tensor<fp16, [1, 320, 1, 1]> var_7895_to_fp16 = const()[name = tensor<string, []>("op_7895_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1691522944)))];
            tensor<fp16, [2, 320, 1, 4096]> var_7896_cast = add(x = out_81_cast, y = var_7895_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_7898_to_fp16 = const()[name = tensor<string, []>("op_7898_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1691523648)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_289_cast = mul(x = var_7896_cast, y = var_7898_to_fp16);
            tensor<int32, [2]> var_7905 = const()[name = tensor<string, []>("op_7905"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7907 = const()[name = tensor<string, []>("op_7907"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_55_pad_type_0 = const()[name = tensor<string, []>("q_55_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_55_pad_0 = const()[name = tensor<string, []>("q_55_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1691524352)))];
            tensor<fp16, [2, 320, 1, 4096]> q_55_cast = conv(dilations = var_7907, groups = var_7587, pad = q_55_pad_0, pad_type = q_55_pad_type_0, strides = var_7905, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_289_cast);
            tensor<int32, [2]> var_7911 = const()[name = tensor<string, []>("op_7911"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7913 = const()[name = tensor<string, []>("op_7913"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_109_pad_type_0 = const()[name = tensor<string, []>("k_109_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_109_pad_0 = const()[name = tensor<string, []>("k_109_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 768, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [320, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1691729216)))];
            tensor<fp16, [2, 320, 1, 77]> k_109_cast = conv(dilations = var_7913, groups = var_7587, pad = k_109_pad_0, pad_type = k_109_pad_type_0, strides = var_7911, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_7917 = const()[name = tensor<string, []>("op_7917"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7919 = const()[name = tensor<string, []>("op_7919"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_55_pad_type_0 = const()[name = tensor<string, []>("v_55_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_55_pad_0 = const()[name = tensor<string, []>("v_55_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 768, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [320, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1692220800)))];
            tensor<fp16, [2, 320, 1, 77]> v_55_cast = conv(dilations = var_7919, groups = var_7587, pad = v_55_pad_0, pad_type = v_55_pad_type_0, strides = var_7917, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_7923_begin_0 = const()[name = tensor<string, []>("op_7923_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7923_end_0 = const()[name = tensor<string, []>("op_7923_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_7923_end_mask_0 = const()[name = tensor<string, []>("op_7923_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7923_cast = slice_by_index(begin = var_7923_begin_0, end = var_7923_end_0, end_mask = var_7923_end_mask_0, x = q_55_cast);
            tensor<int32, [4]> var_7927_begin_0 = const()[name = tensor<string, []>("op_7927_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_7927_end_0 = const()[name = tensor<string, []>("op_7927_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_7927_end_mask_0 = const()[name = tensor<string, []>("op_7927_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7927_cast = slice_by_index(begin = var_7927_begin_0, end = var_7927_end_0, end_mask = var_7927_end_mask_0, x = q_55_cast);
            tensor<int32, [4]> var_7931_begin_0 = const()[name = tensor<string, []>("op_7931_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_7931_end_0 = const()[name = tensor<string, []>("op_7931_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_7931_end_mask_0 = const()[name = tensor<string, []>("op_7931_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7931_cast = slice_by_index(begin = var_7931_begin_0, end = var_7931_end_0, end_mask = var_7931_end_mask_0, x = q_55_cast);
            tensor<int32, [4]> var_7935_begin_0 = const()[name = tensor<string, []>("op_7935_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_7935_end_0 = const()[name = tensor<string, []>("op_7935_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_7935_end_mask_0 = const()[name = tensor<string, []>("op_7935_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7935_cast = slice_by_index(begin = var_7935_begin_0, end = var_7935_end_0, end_mask = var_7935_end_mask_0, x = q_55_cast);
            tensor<int32, [4]> var_7939_begin_0 = const()[name = tensor<string, []>("op_7939_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_7939_end_0 = const()[name = tensor<string, []>("op_7939_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_7939_end_mask_0 = const()[name = tensor<string, []>("op_7939_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7939_cast = slice_by_index(begin = var_7939_begin_0, end = var_7939_end_0, end_mask = var_7939_end_mask_0, x = q_55_cast);
            tensor<int32, [4]> var_7943_begin_0 = const()[name = tensor<string, []>("op_7943_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_7943_end_0 = const()[name = tensor<string, []>("op_7943_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_7943_end_mask_0 = const()[name = tensor<string, []>("op_7943_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7943_cast = slice_by_index(begin = var_7943_begin_0, end = var_7943_end_0, end_mask = var_7943_end_mask_0, x = q_55_cast);
            tensor<int32, [4]> var_7947_begin_0 = const()[name = tensor<string, []>("op_7947_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_7947_end_0 = const()[name = tensor<string, []>("op_7947_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_7947_end_mask_0 = const()[name = tensor<string, []>("op_7947_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7947_cast = slice_by_index(begin = var_7947_begin_0, end = var_7947_end_0, end_mask = var_7947_end_mask_0, x = q_55_cast);
            tensor<int32, [4]> var_7951_begin_0 = const()[name = tensor<string, []>("op_7951_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_7951_end_0 = const()[name = tensor<string, []>("op_7951_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_7951_end_mask_0 = const()[name = tensor<string, []>("op_7951_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_7951_cast = slice_by_index(begin = var_7951_begin_0, end = var_7951_end_0, end_mask = var_7951_end_mask_0, x = q_55_cast);
            tensor<int32, [4]> k_111_perm_0 = const()[name = tensor<string, []>("k_111_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_7958_begin_0 = const()[name = tensor<string, []>("op_7958_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7958_end_0 = const()[name = tensor<string, []>("op_7958_end_0"), val = tensor<int32, [4]>([2, 77, 1, 40])];
            tensor<bool, [4]> var_7958_end_mask_0 = const()[name = tensor<string, []>("op_7958_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 320]> transpose_4 = transpose(perm = k_111_perm_0, x = k_109_cast);
            tensor<fp16, [2, 77, 1, 40]> var_7958_cast = slice_by_index(begin = var_7958_begin_0, end = var_7958_end_0, end_mask = var_7958_end_mask_0, x = transpose_4);
            tensor<int32, [4]> var_7962_begin_0 = const()[name = tensor<string, []>("op_7962_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 40])];
            tensor<int32, [4]> var_7962_end_0 = const()[name = tensor<string, []>("op_7962_end_0"), val = tensor<int32, [4]>([2, 77, 1, 80])];
            tensor<bool, [4]> var_7962_end_mask_0 = const()[name = tensor<string, []>("op_7962_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_7962_cast = slice_by_index(begin = var_7962_begin_0, end = var_7962_end_0, end_mask = var_7962_end_mask_0, x = transpose_4);
            tensor<int32, [4]> var_7966_begin_0 = const()[name = tensor<string, []>("op_7966_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_7966_end_0 = const()[name = tensor<string, []>("op_7966_end_0"), val = tensor<int32, [4]>([2, 77, 1, 120])];
            tensor<bool, [4]> var_7966_end_mask_0 = const()[name = tensor<string, []>("op_7966_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_7966_cast = slice_by_index(begin = var_7966_begin_0, end = var_7966_end_0, end_mask = var_7966_end_mask_0, x = transpose_4);
            tensor<int32, [4]> var_7970_begin_0 = const()[name = tensor<string, []>("op_7970_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 120])];
            tensor<int32, [4]> var_7970_end_0 = const()[name = tensor<string, []>("op_7970_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_7970_end_mask_0 = const()[name = tensor<string, []>("op_7970_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_7970_cast = slice_by_index(begin = var_7970_begin_0, end = var_7970_end_0, end_mask = var_7970_end_mask_0, x = transpose_4);
            tensor<int32, [4]> var_7974_begin_0 = const()[name = tensor<string, []>("op_7974_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_7974_end_0 = const()[name = tensor<string, []>("op_7974_end_0"), val = tensor<int32, [4]>([2, 77, 1, 200])];
            tensor<bool, [4]> var_7974_end_mask_0 = const()[name = tensor<string, []>("op_7974_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_7974_cast = slice_by_index(begin = var_7974_begin_0, end = var_7974_end_0, end_mask = var_7974_end_mask_0, x = transpose_4);
            tensor<int32, [4]> var_7978_begin_0 = const()[name = tensor<string, []>("op_7978_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 200])];
            tensor<int32, [4]> var_7978_end_0 = const()[name = tensor<string, []>("op_7978_end_0"), val = tensor<int32, [4]>([2, 77, 1, 240])];
            tensor<bool, [4]> var_7978_end_mask_0 = const()[name = tensor<string, []>("op_7978_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_7978_cast = slice_by_index(begin = var_7978_begin_0, end = var_7978_end_0, end_mask = var_7978_end_mask_0, x = transpose_4);
            tensor<int32, [4]> var_7982_begin_0 = const()[name = tensor<string, []>("op_7982_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_7982_end_0 = const()[name = tensor<string, []>("op_7982_end_0"), val = tensor<int32, [4]>([2, 77, 1, 280])];
            tensor<bool, [4]> var_7982_end_mask_0 = const()[name = tensor<string, []>("op_7982_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_7982_cast = slice_by_index(begin = var_7982_begin_0, end = var_7982_end_0, end_mask = var_7982_end_mask_0, x = transpose_4);
            tensor<int32, [4]> var_7986_begin_0 = const()[name = tensor<string, []>("op_7986_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 280])];
            tensor<int32, [4]> var_7986_end_0 = const()[name = tensor<string, []>("op_7986_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_7986_end_mask_0 = const()[name = tensor<string, []>("op_7986_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_7986_cast = slice_by_index(begin = var_7986_begin_0, end = var_7986_end_0, end_mask = var_7986_end_mask_0, x = transpose_4);
            tensor<int32, [4]> var_7988_begin_0 = const()[name = tensor<string, []>("op_7988_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7988_end_0 = const()[name = tensor<string, []>("op_7988_end_0"), val = tensor<int32, [4]>([2, 40, 1, 77])];
            tensor<bool, [4]> var_7988_end_mask_0 = const()[name = tensor<string, []>("op_7988_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_7988_cast = slice_by_index(begin = var_7988_begin_0, end = var_7988_end_0, end_mask = var_7988_end_mask_0, x = v_55_cast);
            tensor<int32, [4]> var_7992_begin_0 = const()[name = tensor<string, []>("op_7992_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_7992_end_0 = const()[name = tensor<string, []>("op_7992_end_0"), val = tensor<int32, [4]>([2, 80, 1, 77])];
            tensor<bool, [4]> var_7992_end_mask_0 = const()[name = tensor<string, []>("op_7992_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_7992_cast = slice_by_index(begin = var_7992_begin_0, end = var_7992_end_0, end_mask = var_7992_end_mask_0, x = v_55_cast);
            tensor<int32, [4]> var_7996_begin_0 = const()[name = tensor<string, []>("op_7996_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_7996_end_0 = const()[name = tensor<string, []>("op_7996_end_0"), val = tensor<int32, [4]>([2, 120, 1, 77])];
            tensor<bool, [4]> var_7996_end_mask_0 = const()[name = tensor<string, []>("op_7996_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_7996_cast = slice_by_index(begin = var_7996_begin_0, end = var_7996_end_0, end_mask = var_7996_end_mask_0, x = v_55_cast);
            tensor<int32, [4]> var_8000_begin_0 = const()[name = tensor<string, []>("op_8000_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_8000_end_0 = const()[name = tensor<string, []>("op_8000_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_8000_end_mask_0 = const()[name = tensor<string, []>("op_8000_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8000_cast = slice_by_index(begin = var_8000_begin_0, end = var_8000_end_0, end_mask = var_8000_end_mask_0, x = v_55_cast);
            tensor<int32, [4]> var_8004_begin_0 = const()[name = tensor<string, []>("op_8004_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_8004_end_0 = const()[name = tensor<string, []>("op_8004_end_0"), val = tensor<int32, [4]>([2, 200, 1, 77])];
            tensor<bool, [4]> var_8004_end_mask_0 = const()[name = tensor<string, []>("op_8004_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8004_cast = slice_by_index(begin = var_8004_begin_0, end = var_8004_end_0, end_mask = var_8004_end_mask_0, x = v_55_cast);
            tensor<int32, [4]> var_8008_begin_0 = const()[name = tensor<string, []>("op_8008_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_8008_end_0 = const()[name = tensor<string, []>("op_8008_end_0"), val = tensor<int32, [4]>([2, 240, 1, 77])];
            tensor<bool, [4]> var_8008_end_mask_0 = const()[name = tensor<string, []>("op_8008_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8008_cast = slice_by_index(begin = var_8008_begin_0, end = var_8008_end_0, end_mask = var_8008_end_mask_0, x = v_55_cast);
            tensor<int32, [4]> var_8012_begin_0 = const()[name = tensor<string, []>("op_8012_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_8012_end_0 = const()[name = tensor<string, []>("op_8012_end_0"), val = tensor<int32, [4]>([2, 280, 1, 77])];
            tensor<bool, [4]> var_8012_end_mask_0 = const()[name = tensor<string, []>("op_8012_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8012_cast = slice_by_index(begin = var_8012_begin_0, end = var_8012_end_0, end_mask = var_8012_end_mask_0, x = v_55_cast);
            tensor<int32, [4]> var_8016_begin_0 = const()[name = tensor<string, []>("op_8016_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_8016_end_0 = const()[name = tensor<string, []>("op_8016_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_8016_end_mask_0 = const()[name = tensor<string, []>("op_8016_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8016_cast = slice_by_index(begin = var_8016_begin_0, end = var_8016_end_0, end_mask = var_8016_end_mask_0, x = v_55_cast);
            tensor<string, []> var_8020_equation_0 = const()[name = tensor<string, []>("op_8020_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8020_cast = einsum(equation = var_8020_equation_0, values = (var_7958_cast, var_7923_cast));
            tensor<fp16, []> var_8021_to_fp16 = const()[name = tensor<string, []>("op_8021_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_433_cast = mul(x = var_8020_cast, y = var_8021_to_fp16);
            tensor<string, []> var_8024_equation_0 = const()[name = tensor<string, []>("op_8024_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8024_cast = einsum(equation = var_8024_equation_0, values = (var_7962_cast, var_7927_cast));
            tensor<fp16, []> var_8025_to_fp16 = const()[name = tensor<string, []>("op_8025_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_435_cast = mul(x = var_8024_cast, y = var_8025_to_fp16);
            tensor<string, []> var_8028_equation_0 = const()[name = tensor<string, []>("op_8028_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8028_cast = einsum(equation = var_8028_equation_0, values = (var_7966_cast, var_7931_cast));
            tensor<fp16, []> var_8029_to_fp16 = const()[name = tensor<string, []>("op_8029_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_437_cast = mul(x = var_8028_cast, y = var_8029_to_fp16);
            tensor<string, []> var_8032_equation_0 = const()[name = tensor<string, []>("op_8032_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8032_cast = einsum(equation = var_8032_equation_0, values = (var_7970_cast, var_7935_cast));
            tensor<fp16, []> var_8033_to_fp16 = const()[name = tensor<string, []>("op_8033_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_439_cast = mul(x = var_8032_cast, y = var_8033_to_fp16);
            tensor<string, []> var_8036_equation_0 = const()[name = tensor<string, []>("op_8036_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8036_cast = einsum(equation = var_8036_equation_0, values = (var_7974_cast, var_7939_cast));
            tensor<fp16, []> var_8037_to_fp16 = const()[name = tensor<string, []>("op_8037_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_441_cast = mul(x = var_8036_cast, y = var_8037_to_fp16);
            tensor<string, []> var_8040_equation_0 = const()[name = tensor<string, []>("op_8040_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8040_cast = einsum(equation = var_8040_equation_0, values = (var_7978_cast, var_7943_cast));
            tensor<fp16, []> var_8041_to_fp16 = const()[name = tensor<string, []>("op_8041_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_443_cast = mul(x = var_8040_cast, y = var_8041_to_fp16);
            tensor<string, []> var_8044_equation_0 = const()[name = tensor<string, []>("op_8044_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8044_cast = einsum(equation = var_8044_equation_0, values = (var_7982_cast, var_7947_cast));
            tensor<fp16, []> var_8045_to_fp16 = const()[name = tensor<string, []>("op_8045_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_445_cast = mul(x = var_8044_cast, y = var_8045_to_fp16);
            tensor<string, []> var_8048_equation_0 = const()[name = tensor<string, []>("op_8048_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8048_cast = einsum(equation = var_8048_equation_0, values = (var_7986_cast, var_7951_cast));
            tensor<fp16, []> var_8049_to_fp16 = const()[name = tensor<string, []>("op_8049_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_447_cast = mul(x = var_8048_cast, y = var_8049_to_fp16);
            tensor<fp16, [2, 77, 1, 4096]> var_8051_cast = softmax(axis = var_7587, x = aw_433_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8052_cast = softmax(axis = var_7587, x = aw_435_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8053_cast = softmax(axis = var_7587, x = aw_437_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8054_cast = softmax(axis = var_7587, x = aw_439_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8055_cast = softmax(axis = var_7587, x = aw_441_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8056_cast = softmax(axis = var_7587, x = aw_443_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8057_cast = softmax(axis = var_7587, x = aw_445_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8058_cast = softmax(axis = var_7587, x = aw_447_cast);
            tensor<string, []> var_8060_equation_0 = const()[name = tensor<string, []>("op_8060_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8060_cast = einsum(equation = var_8060_equation_0, values = (var_7988_cast, var_8051_cast));
            tensor<string, []> var_8062_equation_0 = const()[name = tensor<string, []>("op_8062_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8062_cast = einsum(equation = var_8062_equation_0, values = (var_7992_cast, var_8052_cast));
            tensor<string, []> var_8064_equation_0 = const()[name = tensor<string, []>("op_8064_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8064_cast = einsum(equation = var_8064_equation_0, values = (var_7996_cast, var_8053_cast));
            tensor<string, []> var_8066_equation_0 = const()[name = tensor<string, []>("op_8066_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8066_cast = einsum(equation = var_8066_equation_0, values = (var_8000_cast, var_8054_cast));
            tensor<string, []> var_8068_equation_0 = const()[name = tensor<string, []>("op_8068_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8068_cast = einsum(equation = var_8068_equation_0, values = (var_8004_cast, var_8055_cast));
            tensor<string, []> var_8070_equation_0 = const()[name = tensor<string, []>("op_8070_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8070_cast = einsum(equation = var_8070_equation_0, values = (var_8008_cast, var_8056_cast));
            tensor<string, []> var_8072_equation_0 = const()[name = tensor<string, []>("op_8072_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8072_cast = einsum(equation = var_8072_equation_0, values = (var_8012_cast, var_8057_cast));
            tensor<string, []> var_8074_equation_0 = const()[name = tensor<string, []>("op_8074_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8074_cast = einsum(equation = var_8074_equation_0, values = (var_8016_cast, var_8058_cast));
            tensor<bool, []> input_467_interleave_0 = const()[name = tensor<string, []>("input_467_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_467_cast = concat(axis = var_7587, interleave = input_467_interleave_0, values = (var_8060_cast, var_8062_cast, var_8064_cast, var_8066_cast, var_8068_cast, var_8070_cast, var_8072_cast, var_8074_cast));
            tensor<int32, [2]> var_8080 = const()[name = tensor<string, []>("op_8080"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8082 = const()[name = tensor<string, []>("op_8082"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8084_pad_type_0 = const()[name = tensor<string, []>("op_8084_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8084_pad_0 = const()[name = tensor<string, []>("op_8084_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1692712384)))];
            tensor<fp16, [320]> up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1692917248)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8084_cast = conv(bias = up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_8082, groups = var_7587, pad = var_8084_pad_0, pad_type = var_8084_pad_type_0, strides = var_8080, weight = up_blocks_3_attentions_0_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_467_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_83_cast = add(x = var_8084_cast, y = inputs_81_cast);
            tensor<int32, [1]> var_8088 = const()[name = tensor<string, []>("op_8088"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_83_cast = reduce_mean(axes = var_8088, keep_dims = var_7582, x = inputs_83_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_83_cast = sub(x = inputs_83_cast, y = channels_mean_83_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_83_cast = mul(x = zero_mean_83_cast, y = zero_mean_83_cast);
            tensor<int32, [1]> var_8092 = const()[name = tensor<string, []>("op_8092"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_8093_cast = reduce_mean(axes = var_8092, keep_dims = var_7582, x = zero_mean_sq_83_cast);
            tensor<fp16, []> var_8094_to_fp16 = const()[name = tensor<string, []>("op_8094_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_8095_cast = add(x = var_8093_cast, y = var_8094_to_fp16);
            tensor<fp16, []> denom_83_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_83_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_83_cast = rsqrt(epsilon = denom_83_epsilon_0_to_fp16, x = var_8095_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_83_cast = mul(x = zero_mean_83_cast, y = denom_83_cast);
            tensor<fp16, [1, 320, 1, 1]> var_8099_to_fp16 = const()[name = tensor<string, []>("op_8099_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1692917952)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8100_cast = add(x = out_83_cast, y = var_8099_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_8102_to_fp16 = const()[name = tensor<string, []>("op_8102_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1692918656)))];
            tensor<fp16, [2, 320, 1, 4096]> input_469_cast = mul(x = var_8100_cast, y = var_8102_to_fp16);
            tensor<int32, [2]> var_8110 = const()[name = tensor<string, []>("op_8110"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8112 = const()[name = tensor<string, []>("op_8112"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8114_pad_type_0 = const()[name = tensor<string, []>("op_8114_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8114_pad_0 = const()[name = tensor<string, []>("op_8114_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2560, 320, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [2560, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1692919360)))];
            tensor<fp16, [2560]> up_blocks_3_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1694557824)))];
            tensor<fp16, [2, 2560, 1, 4096]> var_8114_cast = conv(bias = up_blocks_3_attentions_0_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_8112, groups = var_7587, pad = var_8114_pad_0, pad_type = var_8114_pad_type_0, strides = var_8110, weight = up_blocks_3_attentions_0_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_469_cast);
            tensor<int32, [2]> var_8115_split_sizes_0 = const()[name = tensor<string, []>("op_8115_split_sizes_0"), val = tensor<int32, [2]>([1280, 1280])];
            tensor<int32, []> var_8115_axis_0 = const()[name = tensor<string, []>("op_8115_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 1280, 1, 4096]> var_8115_cast_0, tensor<fp16, [2, 1280, 1, 4096]> var_8115_cast_1 = split(axis = var_8115_axis_0, split_sizes = var_8115_split_sizes_0, x = var_8114_cast);
            tensor<string, []> var_8117_mode_0 = const()[name = tensor<string, []>("op_8117_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 1280, 1, 4096]> var_8117_cast = gelu(mode = var_8117_mode_0, x = var_8115_cast_1);
            tensor<fp16, [2, 1280, 1, 4096]> input_471_cast = mul(x = var_8115_cast_0, y = var_8117_cast);
            tensor<int32, [2]> var_8121 = const()[name = tensor<string, []>("op_8121"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8123 = const()[name = tensor<string, []>("op_8123"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8125_pad_type_0 = const()[name = tensor<string, []>("op_8125_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8125_pad_0 = const()[name = tensor<string, []>("op_8125_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> up_blocks_3_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1694563008)))];
            tensor<fp16, [320]> up_blocks_3_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1695382272)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8125_cast = conv(bias = up_blocks_3_attentions_0_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_8123, groups = var_7587, pad = var_8125_pad_0, pad_type = var_8125_pad_type_0, strides = var_8121, weight = up_blocks_3_attentions_0_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_471_cast);
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_293_cast = add(x = var_8125_cast, y = inputs_83_cast);
            tensor<int32, [4]> var_8127 = const()[name = tensor<string, []>("op_8127"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> input_473_cast = reshape(shape = var_8127, x = hidden_states_293_cast);
            tensor<int32, [2]> var_8131 = const()[name = tensor<string, []>("op_8131"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8133 = const()[name = tensor<string, []>("op_8133"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_295_pad_type_0 = const()[name = tensor<string, []>("hidden_states_295_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_295_pad_0 = const()[name = tensor<string, []>("hidden_states_295_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_0_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_proj_out_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1695382976)))];
            tensor<fp16, [320]> up_blocks_3_attentions_0_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_0_proj_out_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1695587840)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_295_cast = conv(bias = up_blocks_3_attentions_0_proj_out_bias_to_fp16, dilations = var_8133, groups = var_7587, pad = hidden_states_295_pad_0, pad_type = hidden_states_295_pad_type_0, strides = var_8131, weight = up_blocks_3_attentions_0_proj_out_weight_to_fp16, x = input_473_cast);
            tensor<fp16, [2, 320, 64, 64]> hidden_states_297_cast = add(x = hidden_states_295_cast, y = hidden_states_283_cast);
            tensor<bool, []> input_475_interleave_0 = const()[name = tensor<string, []>("input_475_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 64, 64]> input_475_cast = concat(axis = var_7587, interleave = input_475_interleave_0, values = (hidden_states_297_cast, input_35_cast));
            tensor<int32, [5]> reshape_216_shape_0 = const()[name = tensor<string, []>("reshape_216_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 64, 64])];
            tensor<fp16, [2, 32, 20, 64, 64]> reshape_216_cast = reshape(shape = reshape_216_shape_0, x = input_475_cast);
            tensor<int32, [3]> reduce_mean_162_axes_0 = const()[name = tensor<string, []>("reduce_mean_162_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_162_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_162_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_162_cast = reduce_mean(axes = reduce_mean_162_axes_0, keep_dims = reduce_mean_162_keep_dims_0, x = reshape_216_cast);
            tensor<fp16, [2, 32, 20, 64, 64]> sub_108_cast = sub(x = reshape_216_cast, y = reduce_mean_162_cast);
            tensor<fp16, [2, 32, 20, 64, 64]> square_54_cast = square(x = sub_108_cast);
            tensor<int32, [3]> reduce_mean_164_axes_0 = const()[name = tensor<string, []>("reduce_mean_164_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_164_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_164_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_164_cast = reduce_mean(axes = reduce_mean_164_axes_0, keep_dims = reduce_mean_164_keep_dims_0, x = square_54_cast);
            tensor<fp16, []> add_108_y_0_to_fp16 = const()[name = tensor<string, []>("add_108_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_108_cast = add(x = reduce_mean_164_cast, y = add_108_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_54_cast = sqrt(x = add_108_cast);
            tensor<fp16, [2, 32, 20, 64, 64]> real_div_54_cast = real_div(x = sub_108_cast, y = sqrt_54_cast);
            tensor<int32, [4]> reshape_217_shape_0 = const()[name = tensor<string, []>("reshape_217_shape_0"), val = tensor<int32, [4]>([2, 640, 64, 64])];
            tensor<fp16, [2, 640, 64, 64]> reshape_217_cast = reshape(shape = reshape_217_shape_0, x = real_div_54_cast);
            tensor<fp16, [640]> add_109_mean_0_to_fp16 = const()[name = tensor<string, []>("add_109_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1695588544)))];
            tensor<fp16, [640]> add_109_variance_0_to_fp16 = const()[name = tensor<string, []>("add_109_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1695589888)))];
            tensor<fp16, [640]> add_109_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_109_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1695591232)))];
            tensor<fp16, [640]> add_109_beta_0_to_fp16 = const()[name = tensor<string, []>("add_109_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1695592576)))];
            tensor<fp16, []> add_109_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_109_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 64, 64]> add_109_cast = batch_norm(beta = add_109_beta_0_to_fp16, epsilon = add_109_epsilon_0_to_fp16, gamma = add_109_gamma_0_to_fp16, mean = add_109_mean_0_to_fp16, variance = add_109_variance_0_to_fp16, x = reshape_217_cast);
            tensor<fp16, [2, 640, 64, 64]> input_479_cast = silu(x = add_109_cast);
            tensor<int32, [2]> var_8151 = const()[name = tensor<string, []>("op_8151"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8153 = const()[name = tensor<string, []>("op_8153"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_299_pad_type_0 = const()[name = tensor<string, []>("hidden_states_299_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_299_pad_0 = const()[name = tensor<string, []>("hidden_states_299_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 640, 3, 3]> up_blocks_3_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [320, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1695593920)))];
            tensor<fp16, [320]> up_blocks_3_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1699280384)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_299_cast = conv(bias = up_blocks_3_resnets_1_conv1_bias_to_fp16, dilations = var_8153, groups = var_7587, pad = hidden_states_299_pad_0, pad_type = hidden_states_299_pad_type_0, strides = var_8151, weight = up_blocks_3_resnets_1_conv1_weight_to_fp16, x = input_479_cast);
            tensor<int32, [2]> var_8159 = const()[name = tensor<string, []>("op_8159"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8161 = const()[name = tensor<string, []>("op_8161"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_41_pad_type_0 = const()[name = tensor<string, []>("temb_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_41_pad_0 = const()[name = tensor<string, []>("temb_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> up_blocks_3_resnets_1_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1699281088)))];
            tensor<fp16, [320]> up_blocks_3_resnets_1_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1700100352)))];
            tensor<fp16, [2, 320, 1, 1]> temb_41_cast = conv(bias = up_blocks_3_resnets_1_time_emb_proj_bias_to_fp16, dilations = var_8161, groups = var_7587, pad = temb_41_pad_0, pad_type = temb_41_pad_type_0, strides = var_8159, weight = up_blocks_3_resnets_1_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 320, 64, 64]> input_483_cast = add(x = hidden_states_299_cast, y = temb_41_cast);
            tensor<int32, [5]> reshape_220_shape_0 = const()[name = tensor<string, []>("reshape_220_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_220_cast = reshape(shape = reshape_220_shape_0, x = input_483_cast);
            tensor<int32, [3]> reduce_mean_165_axes_0 = const()[name = tensor<string, []>("reduce_mean_165_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_165_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_165_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_165_cast = reduce_mean(axes = reduce_mean_165_axes_0, keep_dims = reduce_mean_165_keep_dims_0, x = reshape_220_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_110_cast = sub(x = reshape_220_cast, y = reduce_mean_165_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_55_cast = square(x = sub_110_cast);
            tensor<int32, [3]> reduce_mean_167_axes_0 = const()[name = tensor<string, []>("reduce_mean_167_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_167_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_167_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_167_cast = reduce_mean(axes = reduce_mean_167_axes_0, keep_dims = reduce_mean_167_keep_dims_0, x = square_55_cast);
            tensor<fp16, []> add_110_y_0_to_fp16 = const()[name = tensor<string, []>("add_110_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_110_cast = add(x = reduce_mean_167_cast, y = add_110_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_55_cast = sqrt(x = add_110_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_55_cast = real_div(x = sub_110_cast, y = sqrt_55_cast);
            tensor<int32, [4]> reshape_221_shape_0 = const()[name = tensor<string, []>("reshape_221_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_221_cast = reshape(shape = reshape_221_shape_0, x = real_div_55_cast);
            tensor<fp16, [320]> add_111_mean_0_to_fp16 = const()[name = tensor<string, []>("add_111_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1700101056)))];
            tensor<fp16, [320]> add_111_variance_0_to_fp16 = const()[name = tensor<string, []>("add_111_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1700101760)))];
            tensor<fp16, [320]> add_111_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_111_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1700102464)))];
            tensor<fp16, [320]> add_111_beta_0_to_fp16 = const()[name = tensor<string, []>("add_111_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1700103168)))];
            tensor<fp16, []> add_111_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_111_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_111_cast = batch_norm(beta = add_111_beta_0_to_fp16, epsilon = add_111_epsilon_0_to_fp16, gamma = add_111_gamma_0_to_fp16, mean = add_111_mean_0_to_fp16, variance = add_111_variance_0_to_fp16, x = reshape_221_cast);
            tensor<fp16, [2, 320, 64, 64]> input_487_cast = silu(x = add_111_cast);
            tensor<int32, [2]> var_8171 = const()[name = tensor<string, []>("op_8171"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8173 = const()[name = tensor<string, []>("op_8173"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_301_pad_type_0 = const()[name = tensor<string, []>("hidden_states_301_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_301_pad_0 = const()[name = tensor<string, []>("hidden_states_301_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> up_blocks_3_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1700103872)))];
            tensor<fp16, [320]> up_blocks_3_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1701947136)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_301_cast = conv(bias = up_blocks_3_resnets_1_conv2_bias_to_fp16, dilations = var_8173, groups = var_7587, pad = hidden_states_301_pad_0, pad_type = hidden_states_301_pad_type_0, strides = var_8171, weight = up_blocks_3_resnets_1_conv2_weight_to_fp16, x = input_487_cast);
            tensor<int32, [2]> var_8178 = const()[name = tensor<string, []>("op_8178"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8180 = const()[name = tensor<string, []>("op_8180"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_25_pad_type_0 = const()[name = tensor<string, []>("x_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_25_pad_0 = const()[name = tensor<string, []>("x_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 640, 1, 1]> up_blocks_3_resnets_1_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [320, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1701947840)))];
            tensor<fp16, [320]> up_blocks_3_resnets_1_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_1_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1702357504)))];
            tensor<fp16, [2, 320, 64, 64]> x_25_cast = conv(bias = up_blocks_3_resnets_1_conv_shortcut_bias_to_fp16, dilations = var_8180, groups = var_7587, pad = x_25_pad_0, pad_type = x_25_pad_type_0, strides = var_8178, weight = up_blocks_3_resnets_1_conv_shortcut_weight_to_fp16, x = input_475_cast);
            tensor<fp16, [2, 320, 64, 64]> hidden_states_303_cast = add(x = x_25_cast, y = hidden_states_301_cast);
            tensor<int32, [5]> reshape_224_shape_0 = const()[name = tensor<string, []>("reshape_224_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_224_cast = reshape(shape = reshape_224_shape_0, x = hidden_states_303_cast);
            tensor<int32, [3]> reduce_mean_168_axes_0 = const()[name = tensor<string, []>("reduce_mean_168_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_168_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_168_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_168_cast = reduce_mean(axes = reduce_mean_168_axes_0, keep_dims = reduce_mean_168_keep_dims_0, x = reshape_224_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_112_cast = sub(x = reshape_224_cast, y = reduce_mean_168_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_56_cast = square(x = sub_112_cast);
            tensor<int32, [3]> reduce_mean_170_axes_0 = const()[name = tensor<string, []>("reduce_mean_170_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_170_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_170_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_170_cast = reduce_mean(axes = reduce_mean_170_axes_0, keep_dims = reduce_mean_170_keep_dims_0, x = square_56_cast);
            tensor<fp16, []> add_112_y_0_to_fp16 = const()[name = tensor<string, []>("add_112_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_112_cast = add(x = reduce_mean_170_cast, y = add_112_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_56_cast = sqrt(x = add_112_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_56_cast = real_div(x = sub_112_cast, y = sqrt_56_cast);
            tensor<int32, [4]> reshape_225_shape_0 = const()[name = tensor<string, []>("reshape_225_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_225_cast = reshape(shape = reshape_225_shape_0, x = real_div_56_cast);
            tensor<fp16, [320]> add_113_mean_0_to_fp16 = const()[name = tensor<string, []>("add_113_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1702358208)))];
            tensor<fp16, [320]> add_113_variance_0_to_fp16 = const()[name = tensor<string, []>("add_113_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1702358912)))];
            tensor<fp16, [320]> add_113_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_113_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1702359616)))];
            tensor<fp16, [320]> add_113_beta_0_to_fp16 = const()[name = tensor<string, []>("add_113_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1702360320)))];
            tensor<fp16, []> add_113_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_113_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_113_cast = batch_norm(beta = add_113_beta_0_to_fp16, epsilon = add_113_epsilon_0_to_fp16, gamma = add_113_gamma_0_to_fp16, mean = add_113_mean_0_to_fp16, variance = add_113_variance_0_to_fp16, x = reshape_225_cast);
            tensor<int32, [2]> var_8200 = const()[name = tensor<string, []>("op_8200"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8202 = const()[name = tensor<string, []>("op_8202"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_305_pad_type_0 = const()[name = tensor<string, []>("hidden_states_305_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_305_pad_0 = const()[name = tensor<string, []>("hidden_states_305_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_proj_in_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1702361024)))];
            tensor<fp16, [320]> up_blocks_3_attentions_1_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_proj_in_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1702565888)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_305_cast = conv(bias = up_blocks_3_attentions_1_proj_in_bias_to_fp16, dilations = var_8202, groups = var_7587, pad = hidden_states_305_pad_0, pad_type = hidden_states_305_pad_type_0, strides = var_8200, weight = up_blocks_3_attentions_1_proj_in_weight_to_fp16, x = add_113_cast);
            tensor<int32, [4]> var_8207 = const()[name = tensor<string, []>("op_8207"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<fp16, [2, 320, 1, 4096]> inputs_85_cast = reshape(shape = var_8207, x = hidden_states_305_cast);
            tensor<int32, [1]> var_8217 = const()[name = tensor<string, []>("op_8217"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_85_cast = reduce_mean(axes = var_8217, keep_dims = var_7582, x = inputs_85_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_85_cast = sub(x = inputs_85_cast, y = channels_mean_85_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_85_cast = mul(x = zero_mean_85_cast, y = zero_mean_85_cast);
            tensor<int32, [1]> var_8221 = const()[name = tensor<string, []>("op_8221"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_8222_cast = reduce_mean(axes = var_8221, keep_dims = var_7582, x = zero_mean_sq_85_cast);
            tensor<fp16, []> var_8223_to_fp16 = const()[name = tensor<string, []>("op_8223_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_8224_cast = add(x = var_8222_cast, y = var_8223_to_fp16);
            tensor<fp16, []> denom_85_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_85_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_85_cast = rsqrt(epsilon = denom_85_epsilon_0_to_fp16, x = var_8224_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_85_cast = mul(x = zero_mean_85_cast, y = denom_85_cast);
            tensor<fp16, [1, 320, 1, 1]> var_8228_to_fp16 = const()[name = tensor<string, []>("op_8228_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1702566592)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8229_cast = add(x = out_85_cast, y = var_8228_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_8231_to_fp16 = const()[name = tensor<string, []>("op_8231_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1702567296)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_307_cast = mul(x = var_8229_cast, y = var_8231_to_fp16);
            tensor<int32, [2]> var_8238 = const()[name = tensor<string, []>("op_8238"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8240 = const()[name = tensor<string, []>("op_8240"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_57_pad_type_0 = const()[name = tensor<string, []>("q_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_57_pad_0 = const()[name = tensor<string, []>("q_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1702568000)))];
            tensor<fp16, [2, 320, 1, 4096]> q_57_cast = conv(dilations = var_8240, groups = var_7587, pad = q_57_pad_0, pad_type = q_57_pad_type_0, strides = var_8238, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_307_cast);
            tensor<int32, [2]> var_8244 = const()[name = tensor<string, []>("op_8244"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8246 = const()[name = tensor<string, []>("op_8246"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_113_pad_type_0 = const()[name = tensor<string, []>("k_113_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_113_pad_0 = const()[name = tensor<string, []>("k_113_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1702772864)))];
            tensor<fp16, [2, 320, 1, 4096]> k_113_cast = conv(dilations = var_8246, groups = var_7587, pad = k_113_pad_0, pad_type = k_113_pad_type_0, strides = var_8244, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_307_cast);
            tensor<int32, [2]> var_8250 = const()[name = tensor<string, []>("op_8250"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8252 = const()[name = tensor<string, []>("op_8252"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_57_pad_type_0 = const()[name = tensor<string, []>("v_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_57_pad_0 = const()[name = tensor<string, []>("v_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1702977728)))];
            tensor<fp16, [2, 320, 1, 4096]> v_57_cast = conv(dilations = var_8252, groups = var_7587, pad = v_57_pad_0, pad_type = v_57_pad_type_0, strides = var_8250, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_307_cast);
            tensor<int32, [4]> var_8256_begin_0 = const()[name = tensor<string, []>("op_8256_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8256_end_0 = const()[name = tensor<string, []>("op_8256_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_8256_end_mask_0 = const()[name = tensor<string, []>("op_8256_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8256_cast = slice_by_index(begin = var_8256_begin_0, end = var_8256_end_0, end_mask = var_8256_end_mask_0, x = q_57_cast);
            tensor<int32, [4]> var_8260_begin_0 = const()[name = tensor<string, []>("op_8260_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_8260_end_0 = const()[name = tensor<string, []>("op_8260_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_8260_end_mask_0 = const()[name = tensor<string, []>("op_8260_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8260_cast = slice_by_index(begin = var_8260_begin_0, end = var_8260_end_0, end_mask = var_8260_end_mask_0, x = q_57_cast);
            tensor<int32, [4]> var_8264_begin_0 = const()[name = tensor<string, []>("op_8264_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_8264_end_0 = const()[name = tensor<string, []>("op_8264_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_8264_end_mask_0 = const()[name = tensor<string, []>("op_8264_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8264_cast = slice_by_index(begin = var_8264_begin_0, end = var_8264_end_0, end_mask = var_8264_end_mask_0, x = q_57_cast);
            tensor<int32, [4]> var_8268_begin_0 = const()[name = tensor<string, []>("op_8268_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_8268_end_0 = const()[name = tensor<string, []>("op_8268_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_8268_end_mask_0 = const()[name = tensor<string, []>("op_8268_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8268_cast = slice_by_index(begin = var_8268_begin_0, end = var_8268_end_0, end_mask = var_8268_end_mask_0, x = q_57_cast);
            tensor<int32, [4]> var_8272_begin_0 = const()[name = tensor<string, []>("op_8272_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_8272_end_0 = const()[name = tensor<string, []>("op_8272_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_8272_end_mask_0 = const()[name = tensor<string, []>("op_8272_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8272_cast = slice_by_index(begin = var_8272_begin_0, end = var_8272_end_0, end_mask = var_8272_end_mask_0, x = q_57_cast);
            tensor<int32, [4]> var_8276_begin_0 = const()[name = tensor<string, []>("op_8276_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_8276_end_0 = const()[name = tensor<string, []>("op_8276_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_8276_end_mask_0 = const()[name = tensor<string, []>("op_8276_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8276_cast = slice_by_index(begin = var_8276_begin_0, end = var_8276_end_0, end_mask = var_8276_end_mask_0, x = q_57_cast);
            tensor<int32, [4]> var_8280_begin_0 = const()[name = tensor<string, []>("op_8280_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_8280_end_0 = const()[name = tensor<string, []>("op_8280_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_8280_end_mask_0 = const()[name = tensor<string, []>("op_8280_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8280_cast = slice_by_index(begin = var_8280_begin_0, end = var_8280_end_0, end_mask = var_8280_end_mask_0, x = q_57_cast);
            tensor<int32, [4]> var_8284_begin_0 = const()[name = tensor<string, []>("op_8284_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_8284_end_0 = const()[name = tensor<string, []>("op_8284_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_8284_end_mask_0 = const()[name = tensor<string, []>("op_8284_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8284_cast = slice_by_index(begin = var_8284_begin_0, end = var_8284_end_0, end_mask = var_8284_end_mask_0, x = q_57_cast);
            tensor<int32, [4]> k_115_perm_0 = const()[name = tensor<string, []>("k_115_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_8291_begin_0 = const()[name = tensor<string, []>("op_8291_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8291_end_0 = const()[name = tensor<string, []>("op_8291_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 40])];
            tensor<bool, [4]> var_8291_end_mask_0 = const()[name = tensor<string, []>("op_8291_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 320]> transpose_3 = transpose(perm = k_115_perm_0, x = k_113_cast);
            tensor<fp16, [2, 4096, 1, 40]> var_8291_cast = slice_by_index(begin = var_8291_begin_0, end = var_8291_end_0, end_mask = var_8291_end_mask_0, x = transpose_3);
            tensor<int32, [4]> var_8295_begin_0 = const()[name = tensor<string, []>("op_8295_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 40])];
            tensor<int32, [4]> var_8295_end_0 = const()[name = tensor<string, []>("op_8295_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 80])];
            tensor<bool, [4]> var_8295_end_mask_0 = const()[name = tensor<string, []>("op_8295_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8295_cast = slice_by_index(begin = var_8295_begin_0, end = var_8295_end_0, end_mask = var_8295_end_mask_0, x = transpose_3);
            tensor<int32, [4]> var_8299_begin_0 = const()[name = tensor<string, []>("op_8299_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_8299_end_0 = const()[name = tensor<string, []>("op_8299_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 120])];
            tensor<bool, [4]> var_8299_end_mask_0 = const()[name = tensor<string, []>("op_8299_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8299_cast = slice_by_index(begin = var_8299_begin_0, end = var_8299_end_0, end_mask = var_8299_end_mask_0, x = transpose_3);
            tensor<int32, [4]> var_8303_begin_0 = const()[name = tensor<string, []>("op_8303_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 120])];
            tensor<int32, [4]> var_8303_end_0 = const()[name = tensor<string, []>("op_8303_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 160])];
            tensor<bool, [4]> var_8303_end_mask_0 = const()[name = tensor<string, []>("op_8303_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8303_cast = slice_by_index(begin = var_8303_begin_0, end = var_8303_end_0, end_mask = var_8303_end_mask_0, x = transpose_3);
            tensor<int32, [4]> var_8307_begin_0 = const()[name = tensor<string, []>("op_8307_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_8307_end_0 = const()[name = tensor<string, []>("op_8307_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 200])];
            tensor<bool, [4]> var_8307_end_mask_0 = const()[name = tensor<string, []>("op_8307_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8307_cast = slice_by_index(begin = var_8307_begin_0, end = var_8307_end_0, end_mask = var_8307_end_mask_0, x = transpose_3);
            tensor<int32, [4]> var_8311_begin_0 = const()[name = tensor<string, []>("op_8311_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 200])];
            tensor<int32, [4]> var_8311_end_0 = const()[name = tensor<string, []>("op_8311_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 240])];
            tensor<bool, [4]> var_8311_end_mask_0 = const()[name = tensor<string, []>("op_8311_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8311_cast = slice_by_index(begin = var_8311_begin_0, end = var_8311_end_0, end_mask = var_8311_end_mask_0, x = transpose_3);
            tensor<int32, [4]> var_8315_begin_0 = const()[name = tensor<string, []>("op_8315_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_8315_end_0 = const()[name = tensor<string, []>("op_8315_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 280])];
            tensor<bool, [4]> var_8315_end_mask_0 = const()[name = tensor<string, []>("op_8315_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8315_cast = slice_by_index(begin = var_8315_begin_0, end = var_8315_end_0, end_mask = var_8315_end_mask_0, x = transpose_3);
            tensor<int32, [4]> var_8319_begin_0 = const()[name = tensor<string, []>("op_8319_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 280])];
            tensor<int32, [4]> var_8319_end_0 = const()[name = tensor<string, []>("op_8319_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 320])];
            tensor<bool, [4]> var_8319_end_mask_0 = const()[name = tensor<string, []>("op_8319_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8319_cast = slice_by_index(begin = var_8319_begin_0, end = var_8319_end_0, end_mask = var_8319_end_mask_0, x = transpose_3);
            tensor<int32, [4]> var_8321_begin_0 = const()[name = tensor<string, []>("op_8321_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8321_end_0 = const()[name = tensor<string, []>("op_8321_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_8321_end_mask_0 = const()[name = tensor<string, []>("op_8321_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8321_cast = slice_by_index(begin = var_8321_begin_0, end = var_8321_end_0, end_mask = var_8321_end_mask_0, x = v_57_cast);
            tensor<int32, [4]> var_8325_begin_0 = const()[name = tensor<string, []>("op_8325_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_8325_end_0 = const()[name = tensor<string, []>("op_8325_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_8325_end_mask_0 = const()[name = tensor<string, []>("op_8325_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8325_cast = slice_by_index(begin = var_8325_begin_0, end = var_8325_end_0, end_mask = var_8325_end_mask_0, x = v_57_cast);
            tensor<int32, [4]> var_8329_begin_0 = const()[name = tensor<string, []>("op_8329_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_8329_end_0 = const()[name = tensor<string, []>("op_8329_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_8329_end_mask_0 = const()[name = tensor<string, []>("op_8329_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8329_cast = slice_by_index(begin = var_8329_begin_0, end = var_8329_end_0, end_mask = var_8329_end_mask_0, x = v_57_cast);
            tensor<int32, [4]> var_8333_begin_0 = const()[name = tensor<string, []>("op_8333_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_8333_end_0 = const()[name = tensor<string, []>("op_8333_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_8333_end_mask_0 = const()[name = tensor<string, []>("op_8333_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8333_cast = slice_by_index(begin = var_8333_begin_0, end = var_8333_end_0, end_mask = var_8333_end_mask_0, x = v_57_cast);
            tensor<int32, [4]> var_8337_begin_0 = const()[name = tensor<string, []>("op_8337_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_8337_end_0 = const()[name = tensor<string, []>("op_8337_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_8337_end_mask_0 = const()[name = tensor<string, []>("op_8337_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8337_cast = slice_by_index(begin = var_8337_begin_0, end = var_8337_end_0, end_mask = var_8337_end_mask_0, x = v_57_cast);
            tensor<int32, [4]> var_8341_begin_0 = const()[name = tensor<string, []>("op_8341_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_8341_end_0 = const()[name = tensor<string, []>("op_8341_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_8341_end_mask_0 = const()[name = tensor<string, []>("op_8341_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8341_cast = slice_by_index(begin = var_8341_begin_0, end = var_8341_end_0, end_mask = var_8341_end_mask_0, x = v_57_cast);
            tensor<int32, [4]> var_8345_begin_0 = const()[name = tensor<string, []>("op_8345_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_8345_end_0 = const()[name = tensor<string, []>("op_8345_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_8345_end_mask_0 = const()[name = tensor<string, []>("op_8345_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8345_cast = slice_by_index(begin = var_8345_begin_0, end = var_8345_end_0, end_mask = var_8345_end_mask_0, x = v_57_cast);
            tensor<int32, [4]> var_8349_begin_0 = const()[name = tensor<string, []>("op_8349_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_8349_end_0 = const()[name = tensor<string, []>("op_8349_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_8349_end_mask_0 = const()[name = tensor<string, []>("op_8349_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8349_cast = slice_by_index(begin = var_8349_begin_0, end = var_8349_end_0, end_mask = var_8349_end_mask_0, x = v_57_cast);
            tensor<string, []> var_8353_equation_0 = const()[name = tensor<string, []>("op_8353_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8353_cast = einsum(equation = var_8353_equation_0, values = (var_8291_cast, var_8256_cast));
            tensor<fp16, []> var_8354_to_fp16 = const()[name = tensor<string, []>("op_8354_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_449_cast = mul(x = var_8353_cast, y = var_8354_to_fp16);
            tensor<string, []> var_8357_equation_0 = const()[name = tensor<string, []>("op_8357_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8357_cast = einsum(equation = var_8357_equation_0, values = (var_8295_cast, var_8260_cast));
            tensor<fp16, []> var_8358_to_fp16 = const()[name = tensor<string, []>("op_8358_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_451_cast = mul(x = var_8357_cast, y = var_8358_to_fp16);
            tensor<string, []> var_8361_equation_0 = const()[name = tensor<string, []>("op_8361_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8361_cast = einsum(equation = var_8361_equation_0, values = (var_8299_cast, var_8264_cast));
            tensor<fp16, []> var_8362_to_fp16 = const()[name = tensor<string, []>("op_8362_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_453_cast = mul(x = var_8361_cast, y = var_8362_to_fp16);
            tensor<string, []> var_8365_equation_0 = const()[name = tensor<string, []>("op_8365_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8365_cast = einsum(equation = var_8365_equation_0, values = (var_8303_cast, var_8268_cast));
            tensor<fp16, []> var_8366_to_fp16 = const()[name = tensor<string, []>("op_8366_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_455_cast = mul(x = var_8365_cast, y = var_8366_to_fp16);
            tensor<string, []> var_8369_equation_0 = const()[name = tensor<string, []>("op_8369_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8369_cast = einsum(equation = var_8369_equation_0, values = (var_8307_cast, var_8272_cast));
            tensor<fp16, []> var_8370_to_fp16 = const()[name = tensor<string, []>("op_8370_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_457_cast = mul(x = var_8369_cast, y = var_8370_to_fp16);
            tensor<string, []> var_8373_equation_0 = const()[name = tensor<string, []>("op_8373_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8373_cast = einsum(equation = var_8373_equation_0, values = (var_8311_cast, var_8276_cast));
            tensor<fp16, []> var_8374_to_fp16 = const()[name = tensor<string, []>("op_8374_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_459_cast = mul(x = var_8373_cast, y = var_8374_to_fp16);
            tensor<string, []> var_8377_equation_0 = const()[name = tensor<string, []>("op_8377_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8377_cast = einsum(equation = var_8377_equation_0, values = (var_8315_cast, var_8280_cast));
            tensor<fp16, []> var_8378_to_fp16 = const()[name = tensor<string, []>("op_8378_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_461_cast = mul(x = var_8377_cast, y = var_8378_to_fp16);
            tensor<string, []> var_8381_equation_0 = const()[name = tensor<string, []>("op_8381_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8381_cast = einsum(equation = var_8381_equation_0, values = (var_8319_cast, var_8284_cast));
            tensor<fp16, []> var_8382_to_fp16 = const()[name = tensor<string, []>("op_8382_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_463_cast = mul(x = var_8381_cast, y = var_8382_to_fp16);
            tensor<fp16, [2, 4096, 1, 4096]> var_8384_cast = softmax(axis = var_7587, x = aw_449_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8385_cast = softmax(axis = var_7587, x = aw_451_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8386_cast = softmax(axis = var_7587, x = aw_453_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8387_cast = softmax(axis = var_7587, x = aw_455_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8388_cast = softmax(axis = var_7587, x = aw_457_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8389_cast = softmax(axis = var_7587, x = aw_459_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8390_cast = softmax(axis = var_7587, x = aw_461_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8391_cast = softmax(axis = var_7587, x = aw_463_cast);
            tensor<string, []> var_8393_equation_0 = const()[name = tensor<string, []>("op_8393_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8393_cast = einsum(equation = var_8393_equation_0, values = (var_8321_cast, var_8384_cast));
            tensor<string, []> var_8395_equation_0 = const()[name = tensor<string, []>("op_8395_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8395_cast = einsum(equation = var_8395_equation_0, values = (var_8325_cast, var_8385_cast));
            tensor<string, []> var_8397_equation_0 = const()[name = tensor<string, []>("op_8397_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8397_cast = einsum(equation = var_8397_equation_0, values = (var_8329_cast, var_8386_cast));
            tensor<string, []> var_8399_equation_0 = const()[name = tensor<string, []>("op_8399_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8399_cast = einsum(equation = var_8399_equation_0, values = (var_8333_cast, var_8387_cast));
            tensor<string, []> var_8401_equation_0 = const()[name = tensor<string, []>("op_8401_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8401_cast = einsum(equation = var_8401_equation_0, values = (var_8337_cast, var_8388_cast));
            tensor<string, []> var_8403_equation_0 = const()[name = tensor<string, []>("op_8403_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8403_cast = einsum(equation = var_8403_equation_0, values = (var_8341_cast, var_8389_cast));
            tensor<string, []> var_8405_equation_0 = const()[name = tensor<string, []>("op_8405_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8405_cast = einsum(equation = var_8405_equation_0, values = (var_8345_cast, var_8390_cast));
            tensor<string, []> var_8407_equation_0 = const()[name = tensor<string, []>("op_8407_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8407_cast = einsum(equation = var_8407_equation_0, values = (var_8349_cast, var_8391_cast));
            tensor<bool, []> input_491_interleave_0 = const()[name = tensor<string, []>("input_491_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_491_cast = concat(axis = var_7587, interleave = input_491_interleave_0, values = (var_8393_cast, var_8395_cast, var_8397_cast, var_8399_cast, var_8401_cast, var_8403_cast, var_8405_cast, var_8407_cast));
            tensor<int32, [2]> var_8413 = const()[name = tensor<string, []>("op_8413"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8415 = const()[name = tensor<string, []>("op_8415"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8417_pad_type_0 = const()[name = tensor<string, []>("op_8417_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8417_pad_0 = const()[name = tensor<string, []>("op_8417_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1703182592)))];
            tensor<fp16, [320]> up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1703387456)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8417_cast = conv(bias = up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_8415, groups = var_7587, pad = var_8417_pad_0, pad_type = var_8417_pad_type_0, strides = var_8413, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_491_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_87_cast = add(x = var_8417_cast, y = inputs_85_cast);
            tensor<int32, [1]> var_8421 = const()[name = tensor<string, []>("op_8421"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_87_cast = reduce_mean(axes = var_8421, keep_dims = var_7582, x = inputs_87_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_87_cast = sub(x = inputs_87_cast, y = channels_mean_87_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_87_cast = mul(x = zero_mean_87_cast, y = zero_mean_87_cast);
            tensor<int32, [1]> var_8425 = const()[name = tensor<string, []>("op_8425"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_8426_cast = reduce_mean(axes = var_8425, keep_dims = var_7582, x = zero_mean_sq_87_cast);
            tensor<fp16, []> var_8427_to_fp16 = const()[name = tensor<string, []>("op_8427_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_8428_cast = add(x = var_8426_cast, y = var_8427_to_fp16);
            tensor<fp16, []> denom_87_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_87_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_87_cast = rsqrt(epsilon = denom_87_epsilon_0_to_fp16, x = var_8428_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_87_cast = mul(x = zero_mean_87_cast, y = denom_87_cast);
            tensor<fp16, [1, 320, 1, 1]> var_8432_to_fp16 = const()[name = tensor<string, []>("op_8432_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1703388160)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8433_cast = add(x = out_87_cast, y = var_8432_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_8435_to_fp16 = const()[name = tensor<string, []>("op_8435_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1703388864)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_309_cast = mul(x = var_8433_cast, y = var_8435_to_fp16);
            tensor<int32, [2]> var_8442 = const()[name = tensor<string, []>("op_8442"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8444 = const()[name = tensor<string, []>("op_8444"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_59_pad_type_0 = const()[name = tensor<string, []>("q_59_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_59_pad_0 = const()[name = tensor<string, []>("q_59_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1703389568)))];
            tensor<fp16, [2, 320, 1, 4096]> q_59_cast = conv(dilations = var_8444, groups = var_7587, pad = q_59_pad_0, pad_type = q_59_pad_type_0, strides = var_8442, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_309_cast);
            tensor<int32, [2]> var_8448 = const()[name = tensor<string, []>("op_8448"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8450 = const()[name = tensor<string, []>("op_8450"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_117_pad_type_0 = const()[name = tensor<string, []>("k_117_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_117_pad_0 = const()[name = tensor<string, []>("k_117_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 768, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [320, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1703594432)))];
            tensor<fp16, [2, 320, 1, 77]> k_117_cast = conv(dilations = var_8450, groups = var_7587, pad = k_117_pad_0, pad_type = k_117_pad_type_0, strides = var_8448, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_8454 = const()[name = tensor<string, []>("op_8454"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8456 = const()[name = tensor<string, []>("op_8456"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_59_pad_type_0 = const()[name = tensor<string, []>("v_59_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_59_pad_0 = const()[name = tensor<string, []>("v_59_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 768, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [320, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1704086016)))];
            tensor<fp16, [2, 320, 1, 77]> v_59_cast = conv(dilations = var_8456, groups = var_7587, pad = v_59_pad_0, pad_type = v_59_pad_type_0, strides = var_8454, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_8460_begin_0 = const()[name = tensor<string, []>("op_8460_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8460_end_0 = const()[name = tensor<string, []>("op_8460_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_8460_end_mask_0 = const()[name = tensor<string, []>("op_8460_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8460_cast = slice_by_index(begin = var_8460_begin_0, end = var_8460_end_0, end_mask = var_8460_end_mask_0, x = q_59_cast);
            tensor<int32, [4]> var_8464_begin_0 = const()[name = tensor<string, []>("op_8464_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_8464_end_0 = const()[name = tensor<string, []>("op_8464_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_8464_end_mask_0 = const()[name = tensor<string, []>("op_8464_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8464_cast = slice_by_index(begin = var_8464_begin_0, end = var_8464_end_0, end_mask = var_8464_end_mask_0, x = q_59_cast);
            tensor<int32, [4]> var_8468_begin_0 = const()[name = tensor<string, []>("op_8468_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_8468_end_0 = const()[name = tensor<string, []>("op_8468_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_8468_end_mask_0 = const()[name = tensor<string, []>("op_8468_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8468_cast = slice_by_index(begin = var_8468_begin_0, end = var_8468_end_0, end_mask = var_8468_end_mask_0, x = q_59_cast);
            tensor<int32, [4]> var_8472_begin_0 = const()[name = tensor<string, []>("op_8472_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_8472_end_0 = const()[name = tensor<string, []>("op_8472_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_8472_end_mask_0 = const()[name = tensor<string, []>("op_8472_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8472_cast = slice_by_index(begin = var_8472_begin_0, end = var_8472_end_0, end_mask = var_8472_end_mask_0, x = q_59_cast);
            tensor<int32, [4]> var_8476_begin_0 = const()[name = tensor<string, []>("op_8476_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_8476_end_0 = const()[name = tensor<string, []>("op_8476_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_8476_end_mask_0 = const()[name = tensor<string, []>("op_8476_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8476_cast = slice_by_index(begin = var_8476_begin_0, end = var_8476_end_0, end_mask = var_8476_end_mask_0, x = q_59_cast);
            tensor<int32, [4]> var_8480_begin_0 = const()[name = tensor<string, []>("op_8480_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_8480_end_0 = const()[name = tensor<string, []>("op_8480_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_8480_end_mask_0 = const()[name = tensor<string, []>("op_8480_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8480_cast = slice_by_index(begin = var_8480_begin_0, end = var_8480_end_0, end_mask = var_8480_end_mask_0, x = q_59_cast);
            tensor<int32, [4]> var_8484_begin_0 = const()[name = tensor<string, []>("op_8484_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_8484_end_0 = const()[name = tensor<string, []>("op_8484_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_8484_end_mask_0 = const()[name = tensor<string, []>("op_8484_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8484_cast = slice_by_index(begin = var_8484_begin_0, end = var_8484_end_0, end_mask = var_8484_end_mask_0, x = q_59_cast);
            tensor<int32, [4]> var_8488_begin_0 = const()[name = tensor<string, []>("op_8488_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_8488_end_0 = const()[name = tensor<string, []>("op_8488_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_8488_end_mask_0 = const()[name = tensor<string, []>("op_8488_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8488_cast = slice_by_index(begin = var_8488_begin_0, end = var_8488_end_0, end_mask = var_8488_end_mask_0, x = q_59_cast);
            tensor<int32, [4]> k_119_perm_0 = const()[name = tensor<string, []>("k_119_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_8495_begin_0 = const()[name = tensor<string, []>("op_8495_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8495_end_0 = const()[name = tensor<string, []>("op_8495_end_0"), val = tensor<int32, [4]>([2, 77, 1, 40])];
            tensor<bool, [4]> var_8495_end_mask_0 = const()[name = tensor<string, []>("op_8495_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 320]> transpose_2 = transpose(perm = k_119_perm_0, x = k_117_cast);
            tensor<fp16, [2, 77, 1, 40]> var_8495_cast = slice_by_index(begin = var_8495_begin_0, end = var_8495_end_0, end_mask = var_8495_end_mask_0, x = transpose_2);
            tensor<int32, [4]> var_8499_begin_0 = const()[name = tensor<string, []>("op_8499_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 40])];
            tensor<int32, [4]> var_8499_end_0 = const()[name = tensor<string, []>("op_8499_end_0"), val = tensor<int32, [4]>([2, 77, 1, 80])];
            tensor<bool, [4]> var_8499_end_mask_0 = const()[name = tensor<string, []>("op_8499_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_8499_cast = slice_by_index(begin = var_8499_begin_0, end = var_8499_end_0, end_mask = var_8499_end_mask_0, x = transpose_2);
            tensor<int32, [4]> var_8503_begin_0 = const()[name = tensor<string, []>("op_8503_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_8503_end_0 = const()[name = tensor<string, []>("op_8503_end_0"), val = tensor<int32, [4]>([2, 77, 1, 120])];
            tensor<bool, [4]> var_8503_end_mask_0 = const()[name = tensor<string, []>("op_8503_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_8503_cast = slice_by_index(begin = var_8503_begin_0, end = var_8503_end_0, end_mask = var_8503_end_mask_0, x = transpose_2);
            tensor<int32, [4]> var_8507_begin_0 = const()[name = tensor<string, []>("op_8507_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 120])];
            tensor<int32, [4]> var_8507_end_0 = const()[name = tensor<string, []>("op_8507_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_8507_end_mask_0 = const()[name = tensor<string, []>("op_8507_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_8507_cast = slice_by_index(begin = var_8507_begin_0, end = var_8507_end_0, end_mask = var_8507_end_mask_0, x = transpose_2);
            tensor<int32, [4]> var_8511_begin_0 = const()[name = tensor<string, []>("op_8511_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_8511_end_0 = const()[name = tensor<string, []>("op_8511_end_0"), val = tensor<int32, [4]>([2, 77, 1, 200])];
            tensor<bool, [4]> var_8511_end_mask_0 = const()[name = tensor<string, []>("op_8511_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_8511_cast = slice_by_index(begin = var_8511_begin_0, end = var_8511_end_0, end_mask = var_8511_end_mask_0, x = transpose_2);
            tensor<int32, [4]> var_8515_begin_0 = const()[name = tensor<string, []>("op_8515_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 200])];
            tensor<int32, [4]> var_8515_end_0 = const()[name = tensor<string, []>("op_8515_end_0"), val = tensor<int32, [4]>([2, 77, 1, 240])];
            tensor<bool, [4]> var_8515_end_mask_0 = const()[name = tensor<string, []>("op_8515_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_8515_cast = slice_by_index(begin = var_8515_begin_0, end = var_8515_end_0, end_mask = var_8515_end_mask_0, x = transpose_2);
            tensor<int32, [4]> var_8519_begin_0 = const()[name = tensor<string, []>("op_8519_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_8519_end_0 = const()[name = tensor<string, []>("op_8519_end_0"), val = tensor<int32, [4]>([2, 77, 1, 280])];
            tensor<bool, [4]> var_8519_end_mask_0 = const()[name = tensor<string, []>("op_8519_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_8519_cast = slice_by_index(begin = var_8519_begin_0, end = var_8519_end_0, end_mask = var_8519_end_mask_0, x = transpose_2);
            tensor<int32, [4]> var_8523_begin_0 = const()[name = tensor<string, []>("op_8523_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 280])];
            tensor<int32, [4]> var_8523_end_0 = const()[name = tensor<string, []>("op_8523_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_8523_end_mask_0 = const()[name = tensor<string, []>("op_8523_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_8523_cast = slice_by_index(begin = var_8523_begin_0, end = var_8523_end_0, end_mask = var_8523_end_mask_0, x = transpose_2);
            tensor<int32, [4]> var_8525_begin_0 = const()[name = tensor<string, []>("op_8525_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8525_end_0 = const()[name = tensor<string, []>("op_8525_end_0"), val = tensor<int32, [4]>([2, 40, 1, 77])];
            tensor<bool, [4]> var_8525_end_mask_0 = const()[name = tensor<string, []>("op_8525_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8525_cast = slice_by_index(begin = var_8525_begin_0, end = var_8525_end_0, end_mask = var_8525_end_mask_0, x = v_59_cast);
            tensor<int32, [4]> var_8529_begin_0 = const()[name = tensor<string, []>("op_8529_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_8529_end_0 = const()[name = tensor<string, []>("op_8529_end_0"), val = tensor<int32, [4]>([2, 80, 1, 77])];
            tensor<bool, [4]> var_8529_end_mask_0 = const()[name = tensor<string, []>("op_8529_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8529_cast = slice_by_index(begin = var_8529_begin_0, end = var_8529_end_0, end_mask = var_8529_end_mask_0, x = v_59_cast);
            tensor<int32, [4]> var_8533_begin_0 = const()[name = tensor<string, []>("op_8533_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_8533_end_0 = const()[name = tensor<string, []>("op_8533_end_0"), val = tensor<int32, [4]>([2, 120, 1, 77])];
            tensor<bool, [4]> var_8533_end_mask_0 = const()[name = tensor<string, []>("op_8533_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8533_cast = slice_by_index(begin = var_8533_begin_0, end = var_8533_end_0, end_mask = var_8533_end_mask_0, x = v_59_cast);
            tensor<int32, [4]> var_8537_begin_0 = const()[name = tensor<string, []>("op_8537_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_8537_end_0 = const()[name = tensor<string, []>("op_8537_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_8537_end_mask_0 = const()[name = tensor<string, []>("op_8537_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8537_cast = slice_by_index(begin = var_8537_begin_0, end = var_8537_end_0, end_mask = var_8537_end_mask_0, x = v_59_cast);
            tensor<int32, [4]> var_8541_begin_0 = const()[name = tensor<string, []>("op_8541_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_8541_end_0 = const()[name = tensor<string, []>("op_8541_end_0"), val = tensor<int32, [4]>([2, 200, 1, 77])];
            tensor<bool, [4]> var_8541_end_mask_0 = const()[name = tensor<string, []>("op_8541_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8541_cast = slice_by_index(begin = var_8541_begin_0, end = var_8541_end_0, end_mask = var_8541_end_mask_0, x = v_59_cast);
            tensor<int32, [4]> var_8545_begin_0 = const()[name = tensor<string, []>("op_8545_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_8545_end_0 = const()[name = tensor<string, []>("op_8545_end_0"), val = tensor<int32, [4]>([2, 240, 1, 77])];
            tensor<bool, [4]> var_8545_end_mask_0 = const()[name = tensor<string, []>("op_8545_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8545_cast = slice_by_index(begin = var_8545_begin_0, end = var_8545_end_0, end_mask = var_8545_end_mask_0, x = v_59_cast);
            tensor<int32, [4]> var_8549_begin_0 = const()[name = tensor<string, []>("op_8549_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_8549_end_0 = const()[name = tensor<string, []>("op_8549_end_0"), val = tensor<int32, [4]>([2, 280, 1, 77])];
            tensor<bool, [4]> var_8549_end_mask_0 = const()[name = tensor<string, []>("op_8549_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8549_cast = slice_by_index(begin = var_8549_begin_0, end = var_8549_end_0, end_mask = var_8549_end_mask_0, x = v_59_cast);
            tensor<int32, [4]> var_8553_begin_0 = const()[name = tensor<string, []>("op_8553_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_8553_end_0 = const()[name = tensor<string, []>("op_8553_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_8553_end_mask_0 = const()[name = tensor<string, []>("op_8553_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_8553_cast = slice_by_index(begin = var_8553_begin_0, end = var_8553_end_0, end_mask = var_8553_end_mask_0, x = v_59_cast);
            tensor<string, []> var_8557_equation_0 = const()[name = tensor<string, []>("op_8557_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8557_cast = einsum(equation = var_8557_equation_0, values = (var_8495_cast, var_8460_cast));
            tensor<fp16, []> var_8558_to_fp16 = const()[name = tensor<string, []>("op_8558_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_465_cast = mul(x = var_8557_cast, y = var_8558_to_fp16);
            tensor<string, []> var_8561_equation_0 = const()[name = tensor<string, []>("op_8561_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8561_cast = einsum(equation = var_8561_equation_0, values = (var_8499_cast, var_8464_cast));
            tensor<fp16, []> var_8562_to_fp16 = const()[name = tensor<string, []>("op_8562_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_467_cast = mul(x = var_8561_cast, y = var_8562_to_fp16);
            tensor<string, []> var_8565_equation_0 = const()[name = tensor<string, []>("op_8565_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8565_cast = einsum(equation = var_8565_equation_0, values = (var_8503_cast, var_8468_cast));
            tensor<fp16, []> var_8566_to_fp16 = const()[name = tensor<string, []>("op_8566_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_469_cast = mul(x = var_8565_cast, y = var_8566_to_fp16);
            tensor<string, []> var_8569_equation_0 = const()[name = tensor<string, []>("op_8569_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8569_cast = einsum(equation = var_8569_equation_0, values = (var_8507_cast, var_8472_cast));
            tensor<fp16, []> var_8570_to_fp16 = const()[name = tensor<string, []>("op_8570_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_471_cast = mul(x = var_8569_cast, y = var_8570_to_fp16);
            tensor<string, []> var_8573_equation_0 = const()[name = tensor<string, []>("op_8573_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8573_cast = einsum(equation = var_8573_equation_0, values = (var_8511_cast, var_8476_cast));
            tensor<fp16, []> var_8574_to_fp16 = const()[name = tensor<string, []>("op_8574_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_473_cast = mul(x = var_8573_cast, y = var_8574_to_fp16);
            tensor<string, []> var_8577_equation_0 = const()[name = tensor<string, []>("op_8577_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8577_cast = einsum(equation = var_8577_equation_0, values = (var_8515_cast, var_8480_cast));
            tensor<fp16, []> var_8578_to_fp16 = const()[name = tensor<string, []>("op_8578_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_475_cast = mul(x = var_8577_cast, y = var_8578_to_fp16);
            tensor<string, []> var_8581_equation_0 = const()[name = tensor<string, []>("op_8581_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8581_cast = einsum(equation = var_8581_equation_0, values = (var_8519_cast, var_8484_cast));
            tensor<fp16, []> var_8582_to_fp16 = const()[name = tensor<string, []>("op_8582_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_477_cast = mul(x = var_8581_cast, y = var_8582_to_fp16);
            tensor<string, []> var_8585_equation_0 = const()[name = tensor<string, []>("op_8585_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_8585_cast = einsum(equation = var_8585_equation_0, values = (var_8523_cast, var_8488_cast));
            tensor<fp16, []> var_8586_to_fp16 = const()[name = tensor<string, []>("op_8586_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_479_cast = mul(x = var_8585_cast, y = var_8586_to_fp16);
            tensor<fp16, [2, 77, 1, 4096]> var_8588_cast = softmax(axis = var_7587, x = aw_465_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8589_cast = softmax(axis = var_7587, x = aw_467_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8590_cast = softmax(axis = var_7587, x = aw_469_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8591_cast = softmax(axis = var_7587, x = aw_471_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8592_cast = softmax(axis = var_7587, x = aw_473_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8593_cast = softmax(axis = var_7587, x = aw_475_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8594_cast = softmax(axis = var_7587, x = aw_477_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_8595_cast = softmax(axis = var_7587, x = aw_479_cast);
            tensor<string, []> var_8597_equation_0 = const()[name = tensor<string, []>("op_8597_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8597_cast = einsum(equation = var_8597_equation_0, values = (var_8525_cast, var_8588_cast));
            tensor<string, []> var_8599_equation_0 = const()[name = tensor<string, []>("op_8599_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8599_cast = einsum(equation = var_8599_equation_0, values = (var_8529_cast, var_8589_cast));
            tensor<string, []> var_8601_equation_0 = const()[name = tensor<string, []>("op_8601_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8601_cast = einsum(equation = var_8601_equation_0, values = (var_8533_cast, var_8590_cast));
            tensor<string, []> var_8603_equation_0 = const()[name = tensor<string, []>("op_8603_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8603_cast = einsum(equation = var_8603_equation_0, values = (var_8537_cast, var_8591_cast));
            tensor<string, []> var_8605_equation_0 = const()[name = tensor<string, []>("op_8605_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8605_cast = einsum(equation = var_8605_equation_0, values = (var_8541_cast, var_8592_cast));
            tensor<string, []> var_8607_equation_0 = const()[name = tensor<string, []>("op_8607_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8607_cast = einsum(equation = var_8607_equation_0, values = (var_8545_cast, var_8593_cast));
            tensor<string, []> var_8609_equation_0 = const()[name = tensor<string, []>("op_8609_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8609_cast = einsum(equation = var_8609_equation_0, values = (var_8549_cast, var_8594_cast));
            tensor<string, []> var_8611_equation_0 = const()[name = tensor<string, []>("op_8611_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8611_cast = einsum(equation = var_8611_equation_0, values = (var_8553_cast, var_8595_cast));
            tensor<bool, []> input_493_interleave_0 = const()[name = tensor<string, []>("input_493_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_493_cast = concat(axis = var_7587, interleave = input_493_interleave_0, values = (var_8597_cast, var_8599_cast, var_8601_cast, var_8603_cast, var_8605_cast, var_8607_cast, var_8609_cast, var_8611_cast));
            tensor<int32, [2]> var_8617 = const()[name = tensor<string, []>("op_8617"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8619 = const()[name = tensor<string, []>("op_8619"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8621_pad_type_0 = const()[name = tensor<string, []>("op_8621_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8621_pad_0 = const()[name = tensor<string, []>("op_8621_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1704577600)))];
            tensor<fp16, [320]> up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1704782464)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8621_cast = conv(bias = up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_8619, groups = var_7587, pad = var_8621_pad_0, pad_type = var_8621_pad_type_0, strides = var_8617, weight = up_blocks_3_attentions_1_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_493_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_89_cast = add(x = var_8621_cast, y = inputs_87_cast);
            tensor<int32, [1]> var_8625 = const()[name = tensor<string, []>("op_8625"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_89_cast = reduce_mean(axes = var_8625, keep_dims = var_7582, x = inputs_89_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_89_cast = sub(x = inputs_89_cast, y = channels_mean_89_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_89_cast = mul(x = zero_mean_89_cast, y = zero_mean_89_cast);
            tensor<int32, [1]> var_8629 = const()[name = tensor<string, []>("op_8629"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_8630_cast = reduce_mean(axes = var_8629, keep_dims = var_7582, x = zero_mean_sq_89_cast);
            tensor<fp16, []> var_8631_to_fp16 = const()[name = tensor<string, []>("op_8631_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_8632_cast = add(x = var_8630_cast, y = var_8631_to_fp16);
            tensor<fp16, []> denom_89_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_89_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_89_cast = rsqrt(epsilon = denom_89_epsilon_0_to_fp16, x = var_8632_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_89_cast = mul(x = zero_mean_89_cast, y = denom_89_cast);
            tensor<fp16, [1, 320, 1, 1]> var_8636_to_fp16 = const()[name = tensor<string, []>("op_8636_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1704783168)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8637_cast = add(x = out_89_cast, y = var_8636_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_8639_to_fp16 = const()[name = tensor<string, []>("op_8639_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1704783872)))];
            tensor<fp16, [2, 320, 1, 4096]> input_495_cast = mul(x = var_8637_cast, y = var_8639_to_fp16);
            tensor<int32, [2]> var_8647 = const()[name = tensor<string, []>("op_8647"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8649 = const()[name = tensor<string, []>("op_8649"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8651_pad_type_0 = const()[name = tensor<string, []>("op_8651_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8651_pad_0 = const()[name = tensor<string, []>("op_8651_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2560, 320, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [2560, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1704784576)))];
            tensor<fp16, [2560]> up_blocks_3_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1706423040)))];
            tensor<fp16, [2, 2560, 1, 4096]> var_8651_cast = conv(bias = up_blocks_3_attentions_1_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_8649, groups = var_7587, pad = var_8651_pad_0, pad_type = var_8651_pad_type_0, strides = var_8647, weight = up_blocks_3_attentions_1_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_495_cast);
            tensor<int32, [2]> var_8652_split_sizes_0 = const()[name = tensor<string, []>("op_8652_split_sizes_0"), val = tensor<int32, [2]>([1280, 1280])];
            tensor<int32, []> var_8652_axis_0 = const()[name = tensor<string, []>("op_8652_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 1280, 1, 4096]> var_8652_cast_0, tensor<fp16, [2, 1280, 1, 4096]> var_8652_cast_1 = split(axis = var_8652_axis_0, split_sizes = var_8652_split_sizes_0, x = var_8651_cast);
            tensor<string, []> var_8654_mode_0 = const()[name = tensor<string, []>("op_8654_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 1280, 1, 4096]> var_8654_cast = gelu(mode = var_8654_mode_0, x = var_8652_cast_1);
            tensor<fp16, [2, 1280, 1, 4096]> input_497_cast = mul(x = var_8652_cast_0, y = var_8654_cast);
            tensor<int32, [2]> var_8658 = const()[name = tensor<string, []>("op_8658"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8660 = const()[name = tensor<string, []>("op_8660"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8662_pad_type_0 = const()[name = tensor<string, []>("op_8662_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8662_pad_0 = const()[name = tensor<string, []>("op_8662_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> up_blocks_3_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1706428224)))];
            tensor<fp16, [320]> up_blocks_3_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1707247488)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8662_cast = conv(bias = up_blocks_3_attentions_1_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_8660, groups = var_7587, pad = var_8662_pad_0, pad_type = var_8662_pad_type_0, strides = var_8658, weight = up_blocks_3_attentions_1_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_497_cast);
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_313_cast = add(x = var_8662_cast, y = inputs_89_cast);
            tensor<int32, [4]> var_8664 = const()[name = tensor<string, []>("op_8664"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> input_499_cast = reshape(shape = var_8664, x = hidden_states_313_cast);
            tensor<int32, [2]> var_8668 = const()[name = tensor<string, []>("op_8668"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8670 = const()[name = tensor<string, []>("op_8670"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_315_pad_type_0 = const()[name = tensor<string, []>("hidden_states_315_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_315_pad_0 = const()[name = tensor<string, []>("hidden_states_315_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_1_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_proj_out_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1707248192)))];
            tensor<fp16, [320]> up_blocks_3_attentions_1_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_1_proj_out_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1707453056)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_315_cast = conv(bias = up_blocks_3_attentions_1_proj_out_bias_to_fp16, dilations = var_8670, groups = var_7587, pad = hidden_states_315_pad_0, pad_type = hidden_states_315_pad_type_0, strides = var_8668, weight = up_blocks_3_attentions_1_proj_out_weight_to_fp16, x = input_499_cast);
            tensor<fp16, [2, 320, 64, 64]> hidden_states_317_cast = add(x = hidden_states_315_cast, y = hidden_states_303_cast);
            tensor<bool, []> input_501_interleave_0 = const()[name = tensor<string, []>("input_501_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 640, 64, 64]> input_501_cast = concat(axis = var_7587, interleave = input_501_interleave_0, values = (hidden_states_317_cast, input_7_cast));
            tensor<int32, [5]> reshape_228_shape_0 = const()[name = tensor<string, []>("reshape_228_shape_0"), val = tensor<int32, [5]>([2, 32, 20, 64, 64])];
            tensor<fp16, [2, 32, 20, 64, 64]> reshape_228_cast = reshape(shape = reshape_228_shape_0, x = input_501_cast);
            tensor<int32, [3]> reduce_mean_171_axes_0 = const()[name = tensor<string, []>("reduce_mean_171_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_171_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_171_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_171_cast = reduce_mean(axes = reduce_mean_171_axes_0, keep_dims = reduce_mean_171_keep_dims_0, x = reshape_228_cast);
            tensor<fp16, [2, 32, 20, 64, 64]> sub_114_cast = sub(x = reshape_228_cast, y = reduce_mean_171_cast);
            tensor<fp16, [2, 32, 20, 64, 64]> square_57_cast = square(x = sub_114_cast);
            tensor<int32, [3]> reduce_mean_173_axes_0 = const()[name = tensor<string, []>("reduce_mean_173_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_173_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_173_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_173_cast = reduce_mean(axes = reduce_mean_173_axes_0, keep_dims = reduce_mean_173_keep_dims_0, x = square_57_cast);
            tensor<fp16, []> add_114_y_0_to_fp16 = const()[name = tensor<string, []>("add_114_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_114_cast = add(x = reduce_mean_173_cast, y = add_114_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_57_cast = sqrt(x = add_114_cast);
            tensor<fp16, [2, 32, 20, 64, 64]> real_div_57_cast = real_div(x = sub_114_cast, y = sqrt_57_cast);
            tensor<int32, [4]> reshape_229_shape_0 = const()[name = tensor<string, []>("reshape_229_shape_0"), val = tensor<int32, [4]>([2, 640, 64, 64])];
            tensor<fp16, [2, 640, 64, 64]> reshape_229_cast = reshape(shape = reshape_229_shape_0, x = real_div_57_cast);
            tensor<fp16, [640]> add_115_mean_0_to_fp16 = const()[name = tensor<string, []>("add_115_mean_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1707453760)))];
            tensor<fp16, [640]> add_115_variance_0_to_fp16 = const()[name = tensor<string, []>("add_115_variance_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1707455104)))];
            tensor<fp16, [640]> add_115_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_115_gamma_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1707456448)))];
            tensor<fp16, [640]> add_115_beta_0_to_fp16 = const()[name = tensor<string, []>("add_115_beta_0_to_fp16"), val = tensor<fp16, [640]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1707457792)))];
            tensor<fp16, []> add_115_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_115_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 640, 64, 64]> add_115_cast = batch_norm(beta = add_115_beta_0_to_fp16, epsilon = add_115_epsilon_0_to_fp16, gamma = add_115_gamma_0_to_fp16, mean = add_115_mean_0_to_fp16, variance = add_115_variance_0_to_fp16, x = reshape_229_cast);
            tensor<fp16, [2, 640, 64, 64]> input_505_cast = silu(x = add_115_cast);
            tensor<int32, [2]> var_8688 = const()[name = tensor<string, []>("op_8688"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8690 = const()[name = tensor<string, []>("op_8690"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_319_pad_type_0 = const()[name = tensor<string, []>("hidden_states_319_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_319_pad_0 = const()[name = tensor<string, []>("hidden_states_319_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 640, 3, 3]> up_blocks_3_resnets_2_conv1_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_conv1_weight_to_fp16"), val = tensor<fp16, [320, 640, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1707459136)))];
            tensor<fp16, [320]> up_blocks_3_resnets_2_conv1_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_conv1_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1711145600)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_319_cast = conv(bias = up_blocks_3_resnets_2_conv1_bias_to_fp16, dilations = var_8690, groups = var_7587, pad = hidden_states_319_pad_0, pad_type = hidden_states_319_pad_type_0, strides = var_8688, weight = up_blocks_3_resnets_2_conv1_weight_to_fp16, x = input_505_cast);
            tensor<int32, [2]> var_8696 = const()[name = tensor<string, []>("op_8696"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8698 = const()[name = tensor<string, []>("op_8698"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> temb_pad_type_0 = const()[name = tensor<string, []>("temb_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> temb_pad_0 = const()[name = tensor<string, []>("temb_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> up_blocks_3_resnets_2_time_emb_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_time_emb_proj_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1711146304)))];
            tensor<fp16, [320]> up_blocks_3_resnets_2_time_emb_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_time_emb_proj_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1711965568)))];
            tensor<fp16, [2, 320, 1, 1]> temb_cast = conv(bias = up_blocks_3_resnets_2_time_emb_proj_bias_to_fp16, dilations = var_8698, groups = var_7587, pad = temb_pad_0, pad_type = temb_pad_type_0, strides = var_8696, weight = up_blocks_3_resnets_2_time_emb_proj_weight_to_fp16, x = input_15_cast);
            tensor<fp16, [2, 320, 64, 64]> input_509_cast = add(x = hidden_states_319_cast, y = temb_cast);
            tensor<int32, [5]> reshape_232_shape_0 = const()[name = tensor<string, []>("reshape_232_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_232_cast = reshape(shape = reshape_232_shape_0, x = input_509_cast);
            tensor<int32, [3]> reduce_mean_174_axes_0 = const()[name = tensor<string, []>("reduce_mean_174_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_174_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_174_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_174_cast = reduce_mean(axes = reduce_mean_174_axes_0, keep_dims = reduce_mean_174_keep_dims_0, x = reshape_232_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_116_cast = sub(x = reshape_232_cast, y = reduce_mean_174_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_58_cast = square(x = sub_116_cast);
            tensor<int32, [3]> reduce_mean_176_axes_0 = const()[name = tensor<string, []>("reduce_mean_176_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_176_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_176_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_176_cast = reduce_mean(axes = reduce_mean_176_axes_0, keep_dims = reduce_mean_176_keep_dims_0, x = square_58_cast);
            tensor<fp16, []> add_116_y_0_to_fp16 = const()[name = tensor<string, []>("add_116_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_116_cast = add(x = reduce_mean_176_cast, y = add_116_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_58_cast = sqrt(x = add_116_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_58_cast = real_div(x = sub_116_cast, y = sqrt_58_cast);
            tensor<int32, [4]> reshape_233_shape_0 = const()[name = tensor<string, []>("reshape_233_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_233_cast = reshape(shape = reshape_233_shape_0, x = real_div_58_cast);
            tensor<fp16, [320]> add_117_mean_0_to_fp16 = const()[name = tensor<string, []>("add_117_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1711966272)))];
            tensor<fp16, [320]> add_117_variance_0_to_fp16 = const()[name = tensor<string, []>("add_117_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1711966976)))];
            tensor<fp16, [320]> add_117_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_117_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1711967680)))];
            tensor<fp16, [320]> add_117_beta_0_to_fp16 = const()[name = tensor<string, []>("add_117_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1711968384)))];
            tensor<fp16, []> add_117_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_117_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_117_cast = batch_norm(beta = add_117_beta_0_to_fp16, epsilon = add_117_epsilon_0_to_fp16, gamma = add_117_gamma_0_to_fp16, mean = add_117_mean_0_to_fp16, variance = add_117_variance_0_to_fp16, x = reshape_233_cast);
            tensor<fp16, [2, 320, 64, 64]> input_513_cast = silu(x = add_117_cast);
            tensor<int32, [2]> var_8708 = const()[name = tensor<string, []>("op_8708"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8710 = const()[name = tensor<string, []>("op_8710"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_321_pad_type_0 = const()[name = tensor<string, []>("hidden_states_321_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_321_pad_0 = const()[name = tensor<string, []>("hidden_states_321_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [320, 320, 3, 3]> up_blocks_3_resnets_2_conv2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_conv2_weight_to_fp16"), val = tensor<fp16, [320, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1711969088)))];
            tensor<fp16, [320]> up_blocks_3_resnets_2_conv2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_conv2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1713812352)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_321_cast = conv(bias = up_blocks_3_resnets_2_conv2_bias_to_fp16, dilations = var_8710, groups = var_7587, pad = hidden_states_321_pad_0, pad_type = hidden_states_321_pad_type_0, strides = var_8708, weight = up_blocks_3_resnets_2_conv2_weight_to_fp16, x = input_513_cast);
            tensor<int32, [2]> var_8715 = const()[name = tensor<string, []>("op_8715"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8717 = const()[name = tensor<string, []>("op_8717"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_pad_type_0 = const()[name = tensor<string, []>("x_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_pad_0 = const()[name = tensor<string, []>("x_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 640, 1, 1]> up_blocks_3_resnets_2_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [320, 640, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1713813056)))];
            tensor<fp16, [320]> up_blocks_3_resnets_2_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_resnets_2_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1714222720)))];
            tensor<fp16, [2, 320, 64, 64]> x_cast = conv(bias = up_blocks_3_resnets_2_conv_shortcut_bias_to_fp16, dilations = var_8717, groups = var_7587, pad = x_pad_0, pad_type = x_pad_type_0, strides = var_8715, weight = up_blocks_3_resnets_2_conv_shortcut_weight_to_fp16, x = input_501_cast);
            tensor<fp16, [2, 320, 64, 64]> hidden_states_323_cast = add(x = x_cast, y = hidden_states_321_cast);
            tensor<int32, [5]> reshape_236_shape_0 = const()[name = tensor<string, []>("reshape_236_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_236_cast = reshape(shape = reshape_236_shape_0, x = hidden_states_323_cast);
            tensor<int32, [3]> reduce_mean_177_axes_0 = const()[name = tensor<string, []>("reduce_mean_177_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_177_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_177_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_177_cast = reduce_mean(axes = reduce_mean_177_axes_0, keep_dims = reduce_mean_177_keep_dims_0, x = reshape_236_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_118_cast = sub(x = reshape_236_cast, y = reduce_mean_177_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_59_cast = square(x = sub_118_cast);
            tensor<int32, [3]> reduce_mean_179_axes_0 = const()[name = tensor<string, []>("reduce_mean_179_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_179_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_179_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_179_cast = reduce_mean(axes = reduce_mean_179_axes_0, keep_dims = reduce_mean_179_keep_dims_0, x = square_59_cast);
            tensor<fp16, []> add_118_y_0_to_fp16 = const()[name = tensor<string, []>("add_118_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_118_cast = add(x = reduce_mean_179_cast, y = add_118_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_59_cast = sqrt(x = add_118_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_59_cast = real_div(x = sub_118_cast, y = sqrt_59_cast);
            tensor<int32, [4]> reshape_237_shape_0 = const()[name = tensor<string, []>("reshape_237_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_237_cast = reshape(shape = reshape_237_shape_0, x = real_div_59_cast);
            tensor<fp16, [320]> add_119_mean_0_to_fp16 = const()[name = tensor<string, []>("add_119_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1714223424)))];
            tensor<fp16, [320]> add_119_variance_0_to_fp16 = const()[name = tensor<string, []>("add_119_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1714224128)))];
            tensor<fp16, [320]> add_119_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_119_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1714224832)))];
            tensor<fp16, [320]> add_119_beta_0_to_fp16 = const()[name = tensor<string, []>("add_119_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1714225536)))];
            tensor<fp16, []> add_119_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_119_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_119_cast = batch_norm(beta = add_119_beta_0_to_fp16, epsilon = add_119_epsilon_0_to_fp16, gamma = add_119_gamma_0_to_fp16, mean = add_119_mean_0_to_fp16, variance = add_119_variance_0_to_fp16, x = reshape_237_cast);
            tensor<int32, [2]> var_8737 = const()[name = tensor<string, []>("op_8737"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8739 = const()[name = tensor<string, []>("op_8739"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_325_pad_type_0 = const()[name = tensor<string, []>("hidden_states_325_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_325_pad_0 = const()[name = tensor<string, []>("hidden_states_325_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_proj_in_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_proj_in_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1714226240)))];
            tensor<fp16, [320]> up_blocks_3_attentions_2_proj_in_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_proj_in_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1714431104)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_325_cast = conv(bias = up_blocks_3_attentions_2_proj_in_bias_to_fp16, dilations = var_8739, groups = var_7587, pad = hidden_states_325_pad_0, pad_type = hidden_states_325_pad_type_0, strides = var_8737, weight = up_blocks_3_attentions_2_proj_in_weight_to_fp16, x = add_119_cast);
            tensor<int32, [4]> var_8744 = const()[name = tensor<string, []>("op_8744"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<fp16, [2, 320, 1, 4096]> inputs_91_cast = reshape(shape = var_8744, x = hidden_states_325_cast);
            tensor<int32, [1]> var_8754 = const()[name = tensor<string, []>("op_8754"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_91_cast = reduce_mean(axes = var_8754, keep_dims = var_7582, x = inputs_91_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_91_cast = sub(x = inputs_91_cast, y = channels_mean_91_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_91_cast = mul(x = zero_mean_91_cast, y = zero_mean_91_cast);
            tensor<int32, [1]> var_8758 = const()[name = tensor<string, []>("op_8758"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_8759_cast = reduce_mean(axes = var_8758, keep_dims = var_7582, x = zero_mean_sq_91_cast);
            tensor<fp16, []> var_8760_to_fp16 = const()[name = tensor<string, []>("op_8760_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_8761_cast = add(x = var_8759_cast, y = var_8760_to_fp16);
            tensor<fp16, []> denom_91_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_91_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_91_cast = rsqrt(epsilon = denom_91_epsilon_0_to_fp16, x = var_8761_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_91_cast = mul(x = zero_mean_91_cast, y = denom_91_cast);
            tensor<fp16, [1, 320, 1, 1]> var_8765_to_fp16 = const()[name = tensor<string, []>("op_8765_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1714431808)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8766_cast = add(x = out_91_cast, y = var_8765_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_8768_to_fp16 = const()[name = tensor<string, []>("op_8768_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1714432512)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_327_cast = mul(x = var_8766_cast, y = var_8768_to_fp16);
            tensor<int32, [2]> var_8775 = const()[name = tensor<string, []>("op_8775"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8777 = const()[name = tensor<string, []>("op_8777"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_61_pad_type_0 = const()[name = tensor<string, []>("q_61_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_61_pad_0 = const()[name = tensor<string, []>("q_61_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1714433216)))];
            tensor<fp16, [2, 320, 1, 4096]> q_61_cast = conv(dilations = var_8777, groups = var_7587, pad = q_61_pad_0, pad_type = q_61_pad_type_0, strides = var_8775, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_q_weight_to_fp16, x = hidden_states_327_cast);
            tensor<int32, [2]> var_8781 = const()[name = tensor<string, []>("op_8781"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8783 = const()[name = tensor<string, []>("op_8783"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_121_pad_type_0 = const()[name = tensor<string, []>("k_121_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_121_pad_0 = const()[name = tensor<string, []>("k_121_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1714638080)))];
            tensor<fp16, [2, 320, 1, 4096]> k_121_cast = conv(dilations = var_8783, groups = var_7587, pad = k_121_pad_0, pad_type = k_121_pad_type_0, strides = var_8781, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_k_weight_to_fp16, x = hidden_states_327_cast);
            tensor<int32, [2]> var_8787 = const()[name = tensor<string, []>("op_8787"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8789 = const()[name = tensor<string, []>("op_8789"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_61_pad_type_0 = const()[name = tensor<string, []>("v_61_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_61_pad_0 = const()[name = tensor<string, []>("v_61_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1714842944)))];
            tensor<fp16, [2, 320, 1, 4096]> v_61_cast = conv(dilations = var_8789, groups = var_7587, pad = v_61_pad_0, pad_type = v_61_pad_type_0, strides = var_8787, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_v_weight_to_fp16, x = hidden_states_327_cast);
            tensor<int32, [4]> var_8793_begin_0 = const()[name = tensor<string, []>("op_8793_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8793_end_0 = const()[name = tensor<string, []>("op_8793_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_8793_end_mask_0 = const()[name = tensor<string, []>("op_8793_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8793_cast = slice_by_index(begin = var_8793_begin_0, end = var_8793_end_0, end_mask = var_8793_end_mask_0, x = q_61_cast);
            tensor<int32, [4]> var_8797_begin_0 = const()[name = tensor<string, []>("op_8797_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_8797_end_0 = const()[name = tensor<string, []>("op_8797_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_8797_end_mask_0 = const()[name = tensor<string, []>("op_8797_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8797_cast = slice_by_index(begin = var_8797_begin_0, end = var_8797_end_0, end_mask = var_8797_end_mask_0, x = q_61_cast);
            tensor<int32, [4]> var_8801_begin_0 = const()[name = tensor<string, []>("op_8801_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_8801_end_0 = const()[name = tensor<string, []>("op_8801_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_8801_end_mask_0 = const()[name = tensor<string, []>("op_8801_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8801_cast = slice_by_index(begin = var_8801_begin_0, end = var_8801_end_0, end_mask = var_8801_end_mask_0, x = q_61_cast);
            tensor<int32, [4]> var_8805_begin_0 = const()[name = tensor<string, []>("op_8805_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_8805_end_0 = const()[name = tensor<string, []>("op_8805_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_8805_end_mask_0 = const()[name = tensor<string, []>("op_8805_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8805_cast = slice_by_index(begin = var_8805_begin_0, end = var_8805_end_0, end_mask = var_8805_end_mask_0, x = q_61_cast);
            tensor<int32, [4]> var_8809_begin_0 = const()[name = tensor<string, []>("op_8809_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_8809_end_0 = const()[name = tensor<string, []>("op_8809_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_8809_end_mask_0 = const()[name = tensor<string, []>("op_8809_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8809_cast = slice_by_index(begin = var_8809_begin_0, end = var_8809_end_0, end_mask = var_8809_end_mask_0, x = q_61_cast);
            tensor<int32, [4]> var_8813_begin_0 = const()[name = tensor<string, []>("op_8813_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_8813_end_0 = const()[name = tensor<string, []>("op_8813_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_8813_end_mask_0 = const()[name = tensor<string, []>("op_8813_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8813_cast = slice_by_index(begin = var_8813_begin_0, end = var_8813_end_0, end_mask = var_8813_end_mask_0, x = q_61_cast);
            tensor<int32, [4]> var_8817_begin_0 = const()[name = tensor<string, []>("op_8817_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_8817_end_0 = const()[name = tensor<string, []>("op_8817_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_8817_end_mask_0 = const()[name = tensor<string, []>("op_8817_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8817_cast = slice_by_index(begin = var_8817_begin_0, end = var_8817_end_0, end_mask = var_8817_end_mask_0, x = q_61_cast);
            tensor<int32, [4]> var_8821_begin_0 = const()[name = tensor<string, []>("op_8821_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_8821_end_0 = const()[name = tensor<string, []>("op_8821_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_8821_end_mask_0 = const()[name = tensor<string, []>("op_8821_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8821_cast = slice_by_index(begin = var_8821_begin_0, end = var_8821_end_0, end_mask = var_8821_end_mask_0, x = q_61_cast);
            tensor<int32, [4]> k_123_perm_0 = const()[name = tensor<string, []>("k_123_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_8828_begin_0 = const()[name = tensor<string, []>("op_8828_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8828_end_0 = const()[name = tensor<string, []>("op_8828_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 40])];
            tensor<bool, [4]> var_8828_end_mask_0 = const()[name = tensor<string, []>("op_8828_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 320]> transpose_1 = transpose(perm = k_123_perm_0, x = k_121_cast);
            tensor<fp16, [2, 4096, 1, 40]> var_8828_cast = slice_by_index(begin = var_8828_begin_0, end = var_8828_end_0, end_mask = var_8828_end_mask_0, x = transpose_1);
            tensor<int32, [4]> var_8832_begin_0 = const()[name = tensor<string, []>("op_8832_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 40])];
            tensor<int32, [4]> var_8832_end_0 = const()[name = tensor<string, []>("op_8832_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 80])];
            tensor<bool, [4]> var_8832_end_mask_0 = const()[name = tensor<string, []>("op_8832_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8832_cast = slice_by_index(begin = var_8832_begin_0, end = var_8832_end_0, end_mask = var_8832_end_mask_0, x = transpose_1);
            tensor<int32, [4]> var_8836_begin_0 = const()[name = tensor<string, []>("op_8836_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_8836_end_0 = const()[name = tensor<string, []>("op_8836_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 120])];
            tensor<bool, [4]> var_8836_end_mask_0 = const()[name = tensor<string, []>("op_8836_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8836_cast = slice_by_index(begin = var_8836_begin_0, end = var_8836_end_0, end_mask = var_8836_end_mask_0, x = transpose_1);
            tensor<int32, [4]> var_8840_begin_0 = const()[name = tensor<string, []>("op_8840_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 120])];
            tensor<int32, [4]> var_8840_end_0 = const()[name = tensor<string, []>("op_8840_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 160])];
            tensor<bool, [4]> var_8840_end_mask_0 = const()[name = tensor<string, []>("op_8840_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8840_cast = slice_by_index(begin = var_8840_begin_0, end = var_8840_end_0, end_mask = var_8840_end_mask_0, x = transpose_1);
            tensor<int32, [4]> var_8844_begin_0 = const()[name = tensor<string, []>("op_8844_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_8844_end_0 = const()[name = tensor<string, []>("op_8844_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 200])];
            tensor<bool, [4]> var_8844_end_mask_0 = const()[name = tensor<string, []>("op_8844_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8844_cast = slice_by_index(begin = var_8844_begin_0, end = var_8844_end_0, end_mask = var_8844_end_mask_0, x = transpose_1);
            tensor<int32, [4]> var_8848_begin_0 = const()[name = tensor<string, []>("op_8848_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 200])];
            tensor<int32, [4]> var_8848_end_0 = const()[name = tensor<string, []>("op_8848_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 240])];
            tensor<bool, [4]> var_8848_end_mask_0 = const()[name = tensor<string, []>("op_8848_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8848_cast = slice_by_index(begin = var_8848_begin_0, end = var_8848_end_0, end_mask = var_8848_end_mask_0, x = transpose_1);
            tensor<int32, [4]> var_8852_begin_0 = const()[name = tensor<string, []>("op_8852_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_8852_end_0 = const()[name = tensor<string, []>("op_8852_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 280])];
            tensor<bool, [4]> var_8852_end_mask_0 = const()[name = tensor<string, []>("op_8852_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8852_cast = slice_by_index(begin = var_8852_begin_0, end = var_8852_end_0, end_mask = var_8852_end_mask_0, x = transpose_1);
            tensor<int32, [4]> var_8856_begin_0 = const()[name = tensor<string, []>("op_8856_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 280])];
            tensor<int32, [4]> var_8856_end_0 = const()[name = tensor<string, []>("op_8856_end_0"), val = tensor<int32, [4]>([2, 4096, 1, 320])];
            tensor<bool, [4]> var_8856_end_mask_0 = const()[name = tensor<string, []>("op_8856_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 4096, 1, 40]> var_8856_cast = slice_by_index(begin = var_8856_begin_0, end = var_8856_end_0, end_mask = var_8856_end_mask_0, x = transpose_1);
            tensor<int32, [4]> var_8858_begin_0 = const()[name = tensor<string, []>("op_8858_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8858_end_0 = const()[name = tensor<string, []>("op_8858_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_8858_end_mask_0 = const()[name = tensor<string, []>("op_8858_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8858_cast = slice_by_index(begin = var_8858_begin_0, end = var_8858_end_0, end_mask = var_8858_end_mask_0, x = v_61_cast);
            tensor<int32, [4]> var_8862_begin_0 = const()[name = tensor<string, []>("op_8862_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_8862_end_0 = const()[name = tensor<string, []>("op_8862_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_8862_end_mask_0 = const()[name = tensor<string, []>("op_8862_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8862_cast = slice_by_index(begin = var_8862_begin_0, end = var_8862_end_0, end_mask = var_8862_end_mask_0, x = v_61_cast);
            tensor<int32, [4]> var_8866_begin_0 = const()[name = tensor<string, []>("op_8866_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_8866_end_0 = const()[name = tensor<string, []>("op_8866_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_8866_end_mask_0 = const()[name = tensor<string, []>("op_8866_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8866_cast = slice_by_index(begin = var_8866_begin_0, end = var_8866_end_0, end_mask = var_8866_end_mask_0, x = v_61_cast);
            tensor<int32, [4]> var_8870_begin_0 = const()[name = tensor<string, []>("op_8870_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_8870_end_0 = const()[name = tensor<string, []>("op_8870_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_8870_end_mask_0 = const()[name = tensor<string, []>("op_8870_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8870_cast = slice_by_index(begin = var_8870_begin_0, end = var_8870_end_0, end_mask = var_8870_end_mask_0, x = v_61_cast);
            tensor<int32, [4]> var_8874_begin_0 = const()[name = tensor<string, []>("op_8874_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_8874_end_0 = const()[name = tensor<string, []>("op_8874_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_8874_end_mask_0 = const()[name = tensor<string, []>("op_8874_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8874_cast = slice_by_index(begin = var_8874_begin_0, end = var_8874_end_0, end_mask = var_8874_end_mask_0, x = v_61_cast);
            tensor<int32, [4]> var_8878_begin_0 = const()[name = tensor<string, []>("op_8878_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_8878_end_0 = const()[name = tensor<string, []>("op_8878_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_8878_end_mask_0 = const()[name = tensor<string, []>("op_8878_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8878_cast = slice_by_index(begin = var_8878_begin_0, end = var_8878_end_0, end_mask = var_8878_end_mask_0, x = v_61_cast);
            tensor<int32, [4]> var_8882_begin_0 = const()[name = tensor<string, []>("op_8882_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_8882_end_0 = const()[name = tensor<string, []>("op_8882_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_8882_end_mask_0 = const()[name = tensor<string, []>("op_8882_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8882_cast = slice_by_index(begin = var_8882_begin_0, end = var_8882_end_0, end_mask = var_8882_end_mask_0, x = v_61_cast);
            tensor<int32, [4]> var_8886_begin_0 = const()[name = tensor<string, []>("op_8886_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_8886_end_0 = const()[name = tensor<string, []>("op_8886_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_8886_end_mask_0 = const()[name = tensor<string, []>("op_8886_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8886_cast = slice_by_index(begin = var_8886_begin_0, end = var_8886_end_0, end_mask = var_8886_end_mask_0, x = v_61_cast);
            tensor<string, []> var_8890_equation_0 = const()[name = tensor<string, []>("op_8890_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8890_cast = einsum(equation = var_8890_equation_0, values = (var_8828_cast, var_8793_cast));
            tensor<fp16, []> var_8891_to_fp16 = const()[name = tensor<string, []>("op_8891_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_481_cast = mul(x = var_8890_cast, y = var_8891_to_fp16);
            tensor<string, []> var_8894_equation_0 = const()[name = tensor<string, []>("op_8894_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8894_cast = einsum(equation = var_8894_equation_0, values = (var_8832_cast, var_8797_cast));
            tensor<fp16, []> var_8895_to_fp16 = const()[name = tensor<string, []>("op_8895_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_483_cast = mul(x = var_8894_cast, y = var_8895_to_fp16);
            tensor<string, []> var_8898_equation_0 = const()[name = tensor<string, []>("op_8898_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8898_cast = einsum(equation = var_8898_equation_0, values = (var_8836_cast, var_8801_cast));
            tensor<fp16, []> var_8899_to_fp16 = const()[name = tensor<string, []>("op_8899_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_485_cast = mul(x = var_8898_cast, y = var_8899_to_fp16);
            tensor<string, []> var_8902_equation_0 = const()[name = tensor<string, []>("op_8902_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8902_cast = einsum(equation = var_8902_equation_0, values = (var_8840_cast, var_8805_cast));
            tensor<fp16, []> var_8903_to_fp16 = const()[name = tensor<string, []>("op_8903_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_487_cast = mul(x = var_8902_cast, y = var_8903_to_fp16);
            tensor<string, []> var_8906_equation_0 = const()[name = tensor<string, []>("op_8906_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8906_cast = einsum(equation = var_8906_equation_0, values = (var_8844_cast, var_8809_cast));
            tensor<fp16, []> var_8907_to_fp16 = const()[name = tensor<string, []>("op_8907_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_489_cast = mul(x = var_8906_cast, y = var_8907_to_fp16);
            tensor<string, []> var_8910_equation_0 = const()[name = tensor<string, []>("op_8910_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8910_cast = einsum(equation = var_8910_equation_0, values = (var_8848_cast, var_8813_cast));
            tensor<fp16, []> var_8911_to_fp16 = const()[name = tensor<string, []>("op_8911_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_491_cast = mul(x = var_8910_cast, y = var_8911_to_fp16);
            tensor<string, []> var_8914_equation_0 = const()[name = tensor<string, []>("op_8914_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8914_cast = einsum(equation = var_8914_equation_0, values = (var_8852_cast, var_8817_cast));
            tensor<fp16, []> var_8915_to_fp16 = const()[name = tensor<string, []>("op_8915_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_493_cast = mul(x = var_8914_cast, y = var_8915_to_fp16);
            tensor<string, []> var_8918_equation_0 = const()[name = tensor<string, []>("op_8918_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 4096, 1, 4096]> var_8918_cast = einsum(equation = var_8918_equation_0, values = (var_8856_cast, var_8821_cast));
            tensor<fp16, []> var_8919_to_fp16 = const()[name = tensor<string, []>("op_8919_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 4096, 1, 4096]> aw_495_cast = mul(x = var_8918_cast, y = var_8919_to_fp16);
            tensor<fp16, [2, 4096, 1, 4096]> var_8921_cast = softmax(axis = var_7587, x = aw_481_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8922_cast = softmax(axis = var_7587, x = aw_483_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8923_cast = softmax(axis = var_7587, x = aw_485_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8924_cast = softmax(axis = var_7587, x = aw_487_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8925_cast = softmax(axis = var_7587, x = aw_489_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8926_cast = softmax(axis = var_7587, x = aw_491_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8927_cast = softmax(axis = var_7587, x = aw_493_cast);
            tensor<fp16, [2, 4096, 1, 4096]> var_8928_cast = softmax(axis = var_7587, x = aw_495_cast);
            tensor<string, []> var_8930_equation_0 = const()[name = tensor<string, []>("op_8930_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8930_cast = einsum(equation = var_8930_equation_0, values = (var_8858_cast, var_8921_cast));
            tensor<string, []> var_8932_equation_0 = const()[name = tensor<string, []>("op_8932_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8932_cast = einsum(equation = var_8932_equation_0, values = (var_8862_cast, var_8922_cast));
            tensor<string, []> var_8934_equation_0 = const()[name = tensor<string, []>("op_8934_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8934_cast = einsum(equation = var_8934_equation_0, values = (var_8866_cast, var_8923_cast));
            tensor<string, []> var_8936_equation_0 = const()[name = tensor<string, []>("op_8936_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8936_cast = einsum(equation = var_8936_equation_0, values = (var_8870_cast, var_8924_cast));
            tensor<string, []> var_8938_equation_0 = const()[name = tensor<string, []>("op_8938_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8938_cast = einsum(equation = var_8938_equation_0, values = (var_8874_cast, var_8925_cast));
            tensor<string, []> var_8940_equation_0 = const()[name = tensor<string, []>("op_8940_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8940_cast = einsum(equation = var_8940_equation_0, values = (var_8878_cast, var_8926_cast));
            tensor<string, []> var_8942_equation_0 = const()[name = tensor<string, []>("op_8942_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8942_cast = einsum(equation = var_8942_equation_0, values = (var_8882_cast, var_8927_cast));
            tensor<string, []> var_8944_equation_0 = const()[name = tensor<string, []>("op_8944_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_8944_cast = einsum(equation = var_8944_equation_0, values = (var_8886_cast, var_8928_cast));
            tensor<bool, []> input_517_interleave_0 = const()[name = tensor<string, []>("input_517_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_517_cast = concat(axis = var_7587, interleave = input_517_interleave_0, values = (var_8930_cast, var_8932_cast, var_8934_cast, var_8936_cast, var_8938_cast, var_8940_cast, var_8942_cast, var_8944_cast));
            tensor<int32, [2]> var_8950 = const()[name = tensor<string, []>("op_8950"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8952 = const()[name = tensor<string, []>("op_8952"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8954_pad_type_0 = const()[name = tensor<string, []>("op_8954_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8954_pad_0 = const()[name = tensor<string, []>("op_8954_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1715047808)))];
            tensor<fp16, [320]> up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1715252672)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8954_cast = conv(bias = up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_out_0_bias_to_fp16, dilations = var_8952, groups = var_7587, pad = var_8954_pad_0, pad_type = var_8954_pad_type_0, strides = var_8950, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn1_to_out_0_weight_to_fp16, x = input_517_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_93_cast = add(x = var_8954_cast, y = inputs_91_cast);
            tensor<int32, [1]> var_8958 = const()[name = tensor<string, []>("op_8958"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_93_cast = reduce_mean(axes = var_8958, keep_dims = var_7582, x = inputs_93_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_93_cast = sub(x = inputs_93_cast, y = channels_mean_93_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_93_cast = mul(x = zero_mean_93_cast, y = zero_mean_93_cast);
            tensor<int32, [1]> var_8962 = const()[name = tensor<string, []>("op_8962"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_8963_cast = reduce_mean(axes = var_8962, keep_dims = var_7582, x = zero_mean_sq_93_cast);
            tensor<fp16, []> var_8964_to_fp16 = const()[name = tensor<string, []>("op_8964_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_8965_cast = add(x = var_8963_cast, y = var_8964_to_fp16);
            tensor<fp16, []> denom_93_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_93_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_93_cast = rsqrt(epsilon = denom_93_epsilon_0_to_fp16, x = var_8965_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_93_cast = mul(x = zero_mean_93_cast, y = denom_93_cast);
            tensor<fp16, [1, 320, 1, 1]> var_8969_to_fp16 = const()[name = tensor<string, []>("op_8969_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1715253376)))];
            tensor<fp16, [2, 320, 1, 4096]> var_8970_cast = add(x = out_93_cast, y = var_8969_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_8972_to_fp16 = const()[name = tensor<string, []>("op_8972_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1715254080)))];
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_329_cast = mul(x = var_8970_cast, y = var_8972_to_fp16);
            tensor<int32, [2]> var_8979 = const()[name = tensor<string, []>("op_8979"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8981 = const()[name = tensor<string, []>("op_8981"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> q_pad_type_0 = const()[name = tensor<string, []>("q_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> q_pad_0 = const()[name = tensor<string, []>("q_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1715254784)))];
            tensor<fp16, [2, 320, 1, 4096]> q_cast = conv(dilations = var_8981, groups = var_7587, pad = q_pad_0, pad_type = q_pad_type_0, strides = var_8979, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_q_weight_to_fp16, x = hidden_states_329_cast);
            tensor<int32, [2]> var_8985 = const()[name = tensor<string, []>("op_8985"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8987 = const()[name = tensor<string, []>("op_8987"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> k_125_pad_type_0 = const()[name = tensor<string, []>("k_125_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> k_125_pad_0 = const()[name = tensor<string, []>("k_125_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 768, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16"), val = tensor<fp16, [320, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1715459648)))];
            tensor<fp16, [2, 320, 1, 77]> k_125_cast = conv(dilations = var_8987, groups = var_7587, pad = k_125_pad_0, pad_type = k_125_pad_type_0, strides = var_8985, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_k_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [2]> var_8991 = const()[name = tensor<string, []>("op_8991"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8993 = const()[name = tensor<string, []>("op_8993"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> v_pad_type_0 = const()[name = tensor<string, []>("v_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> v_pad_0 = const()[name = tensor<string, []>("v_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 768, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16"), val = tensor<fp16, [320, 768, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1715951232)))];
            tensor<fp16, [2, 320, 1, 77]> v_cast = conv(dilations = var_8993, groups = var_7587, pad = v_pad_0, pad_type = v_pad_type_0, strides = var_8991, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_v_weight_to_fp16, x = encoder_hidden_states);
            tensor<int32, [4]> var_8997_begin_0 = const()[name = tensor<string, []>("op_8997_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8997_end_0 = const()[name = tensor<string, []>("op_8997_end_0"), val = tensor<int32, [4]>([2, 40, 1, 4096])];
            tensor<bool, [4]> var_8997_end_mask_0 = const()[name = tensor<string, []>("op_8997_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_8997_cast = slice_by_index(begin = var_8997_begin_0, end = var_8997_end_0, end_mask = var_8997_end_mask_0, x = q_cast);
            tensor<int32, [4]> var_9001_begin_0 = const()[name = tensor<string, []>("op_9001_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_9001_end_0 = const()[name = tensor<string, []>("op_9001_end_0"), val = tensor<int32, [4]>([2, 80, 1, 4096])];
            tensor<bool, [4]> var_9001_end_mask_0 = const()[name = tensor<string, []>("op_9001_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_9001_cast = slice_by_index(begin = var_9001_begin_0, end = var_9001_end_0, end_mask = var_9001_end_mask_0, x = q_cast);
            tensor<int32, [4]> var_9005_begin_0 = const()[name = tensor<string, []>("op_9005_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_9005_end_0 = const()[name = tensor<string, []>("op_9005_end_0"), val = tensor<int32, [4]>([2, 120, 1, 4096])];
            tensor<bool, [4]> var_9005_end_mask_0 = const()[name = tensor<string, []>("op_9005_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_9005_cast = slice_by_index(begin = var_9005_begin_0, end = var_9005_end_0, end_mask = var_9005_end_mask_0, x = q_cast);
            tensor<int32, [4]> var_9009_begin_0 = const()[name = tensor<string, []>("op_9009_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_9009_end_0 = const()[name = tensor<string, []>("op_9009_end_0"), val = tensor<int32, [4]>([2, 160, 1, 4096])];
            tensor<bool, [4]> var_9009_end_mask_0 = const()[name = tensor<string, []>("op_9009_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_9009_cast = slice_by_index(begin = var_9009_begin_0, end = var_9009_end_0, end_mask = var_9009_end_mask_0, x = q_cast);
            tensor<int32, [4]> var_9013_begin_0 = const()[name = tensor<string, []>("op_9013_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_9013_end_0 = const()[name = tensor<string, []>("op_9013_end_0"), val = tensor<int32, [4]>([2, 200, 1, 4096])];
            tensor<bool, [4]> var_9013_end_mask_0 = const()[name = tensor<string, []>("op_9013_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_9013_cast = slice_by_index(begin = var_9013_begin_0, end = var_9013_end_0, end_mask = var_9013_end_mask_0, x = q_cast);
            tensor<int32, [4]> var_9017_begin_0 = const()[name = tensor<string, []>("op_9017_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_9017_end_0 = const()[name = tensor<string, []>("op_9017_end_0"), val = tensor<int32, [4]>([2, 240, 1, 4096])];
            tensor<bool, [4]> var_9017_end_mask_0 = const()[name = tensor<string, []>("op_9017_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_9017_cast = slice_by_index(begin = var_9017_begin_0, end = var_9017_end_0, end_mask = var_9017_end_mask_0, x = q_cast);
            tensor<int32, [4]> var_9021_begin_0 = const()[name = tensor<string, []>("op_9021_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_9021_end_0 = const()[name = tensor<string, []>("op_9021_end_0"), val = tensor<int32, [4]>([2, 280, 1, 4096])];
            tensor<bool, [4]> var_9021_end_mask_0 = const()[name = tensor<string, []>("op_9021_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_9021_cast = slice_by_index(begin = var_9021_begin_0, end = var_9021_end_0, end_mask = var_9021_end_mask_0, x = q_cast);
            tensor<int32, [4]> var_9025_begin_0 = const()[name = tensor<string, []>("op_9025_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_9025_end_0 = const()[name = tensor<string, []>("op_9025_end_0"), val = tensor<int32, [4]>([2, 320, 1, 4096])];
            tensor<bool, [4]> var_9025_end_mask_0 = const()[name = tensor<string, []>("op_9025_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 4096]> var_9025_cast = slice_by_index(begin = var_9025_begin_0, end = var_9025_end_0, end_mask = var_9025_end_mask_0, x = q_cast);
            tensor<int32, [4]> k_perm_0 = const()[name = tensor<string, []>("k_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [4]> var_9032_begin_0 = const()[name = tensor<string, []>("op_9032_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_9032_end_0 = const()[name = tensor<string, []>("op_9032_end_0"), val = tensor<int32, [4]>([2, 77, 1, 40])];
            tensor<bool, [4]> var_9032_end_mask_0 = const()[name = tensor<string, []>("op_9032_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 320]> transpose_0 = transpose(perm = k_perm_0, x = k_125_cast);
            tensor<fp16, [2, 77, 1, 40]> var_9032_cast = slice_by_index(begin = var_9032_begin_0, end = var_9032_end_0, end_mask = var_9032_end_mask_0, x = transpose_0);
            tensor<int32, [4]> var_9036_begin_0 = const()[name = tensor<string, []>("op_9036_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 40])];
            tensor<int32, [4]> var_9036_end_0 = const()[name = tensor<string, []>("op_9036_end_0"), val = tensor<int32, [4]>([2, 77, 1, 80])];
            tensor<bool, [4]> var_9036_end_mask_0 = const()[name = tensor<string, []>("op_9036_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_9036_cast = slice_by_index(begin = var_9036_begin_0, end = var_9036_end_0, end_mask = var_9036_end_mask_0, x = transpose_0);
            tensor<int32, [4]> var_9040_begin_0 = const()[name = tensor<string, []>("op_9040_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 80])];
            tensor<int32, [4]> var_9040_end_0 = const()[name = tensor<string, []>("op_9040_end_0"), val = tensor<int32, [4]>([2, 77, 1, 120])];
            tensor<bool, [4]> var_9040_end_mask_0 = const()[name = tensor<string, []>("op_9040_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_9040_cast = slice_by_index(begin = var_9040_begin_0, end = var_9040_end_0, end_mask = var_9040_end_mask_0, x = transpose_0);
            tensor<int32, [4]> var_9044_begin_0 = const()[name = tensor<string, []>("op_9044_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 120])];
            tensor<int32, [4]> var_9044_end_0 = const()[name = tensor<string, []>("op_9044_end_0"), val = tensor<int32, [4]>([2, 77, 1, 160])];
            tensor<bool, [4]> var_9044_end_mask_0 = const()[name = tensor<string, []>("op_9044_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_9044_cast = slice_by_index(begin = var_9044_begin_0, end = var_9044_end_0, end_mask = var_9044_end_mask_0, x = transpose_0);
            tensor<int32, [4]> var_9048_begin_0 = const()[name = tensor<string, []>("op_9048_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 160])];
            tensor<int32, [4]> var_9048_end_0 = const()[name = tensor<string, []>("op_9048_end_0"), val = tensor<int32, [4]>([2, 77, 1, 200])];
            tensor<bool, [4]> var_9048_end_mask_0 = const()[name = tensor<string, []>("op_9048_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_9048_cast = slice_by_index(begin = var_9048_begin_0, end = var_9048_end_0, end_mask = var_9048_end_mask_0, x = transpose_0);
            tensor<int32, [4]> var_9052_begin_0 = const()[name = tensor<string, []>("op_9052_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 200])];
            tensor<int32, [4]> var_9052_end_0 = const()[name = tensor<string, []>("op_9052_end_0"), val = tensor<int32, [4]>([2, 77, 1, 240])];
            tensor<bool, [4]> var_9052_end_mask_0 = const()[name = tensor<string, []>("op_9052_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_9052_cast = slice_by_index(begin = var_9052_begin_0, end = var_9052_end_0, end_mask = var_9052_end_mask_0, x = transpose_0);
            tensor<int32, [4]> var_9056_begin_0 = const()[name = tensor<string, []>("op_9056_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 240])];
            tensor<int32, [4]> var_9056_end_0 = const()[name = tensor<string, []>("op_9056_end_0"), val = tensor<int32, [4]>([2, 77, 1, 280])];
            tensor<bool, [4]> var_9056_end_mask_0 = const()[name = tensor<string, []>("op_9056_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_9056_cast = slice_by_index(begin = var_9056_begin_0, end = var_9056_end_0, end_mask = var_9056_end_mask_0, x = transpose_0);
            tensor<int32, [4]> var_9060_begin_0 = const()[name = tensor<string, []>("op_9060_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 280])];
            tensor<int32, [4]> var_9060_end_0 = const()[name = tensor<string, []>("op_9060_end_0"), val = tensor<int32, [4]>([2, 77, 1, 320])];
            tensor<bool, [4]> var_9060_end_mask_0 = const()[name = tensor<string, []>("op_9060_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [2, 77, 1, 40]> var_9060_cast = slice_by_index(begin = var_9060_begin_0, end = var_9060_end_0, end_mask = var_9060_end_mask_0, x = transpose_0);
            tensor<int32, [4]> var_9062_begin_0 = const()[name = tensor<string, []>("op_9062_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_9062_end_0 = const()[name = tensor<string, []>("op_9062_end_0"), val = tensor<int32, [4]>([2, 40, 1, 77])];
            tensor<bool, [4]> var_9062_end_mask_0 = const()[name = tensor<string, []>("op_9062_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_9062_cast = slice_by_index(begin = var_9062_begin_0, end = var_9062_end_0, end_mask = var_9062_end_mask_0, x = v_cast);
            tensor<int32, [4]> var_9066_begin_0 = const()[name = tensor<string, []>("op_9066_begin_0"), val = tensor<int32, [4]>([0, 40, 0, 0])];
            tensor<int32, [4]> var_9066_end_0 = const()[name = tensor<string, []>("op_9066_end_0"), val = tensor<int32, [4]>([2, 80, 1, 77])];
            tensor<bool, [4]> var_9066_end_mask_0 = const()[name = tensor<string, []>("op_9066_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_9066_cast = slice_by_index(begin = var_9066_begin_0, end = var_9066_end_0, end_mask = var_9066_end_mask_0, x = v_cast);
            tensor<int32, [4]> var_9070_begin_0 = const()[name = tensor<string, []>("op_9070_begin_0"), val = tensor<int32, [4]>([0, 80, 0, 0])];
            tensor<int32, [4]> var_9070_end_0 = const()[name = tensor<string, []>("op_9070_end_0"), val = tensor<int32, [4]>([2, 120, 1, 77])];
            tensor<bool, [4]> var_9070_end_mask_0 = const()[name = tensor<string, []>("op_9070_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_9070_cast = slice_by_index(begin = var_9070_begin_0, end = var_9070_end_0, end_mask = var_9070_end_mask_0, x = v_cast);
            tensor<int32, [4]> var_9074_begin_0 = const()[name = tensor<string, []>("op_9074_begin_0"), val = tensor<int32, [4]>([0, 120, 0, 0])];
            tensor<int32, [4]> var_9074_end_0 = const()[name = tensor<string, []>("op_9074_end_0"), val = tensor<int32, [4]>([2, 160, 1, 77])];
            tensor<bool, [4]> var_9074_end_mask_0 = const()[name = tensor<string, []>("op_9074_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_9074_cast = slice_by_index(begin = var_9074_begin_0, end = var_9074_end_0, end_mask = var_9074_end_mask_0, x = v_cast);
            tensor<int32, [4]> var_9078_begin_0 = const()[name = tensor<string, []>("op_9078_begin_0"), val = tensor<int32, [4]>([0, 160, 0, 0])];
            tensor<int32, [4]> var_9078_end_0 = const()[name = tensor<string, []>("op_9078_end_0"), val = tensor<int32, [4]>([2, 200, 1, 77])];
            tensor<bool, [4]> var_9078_end_mask_0 = const()[name = tensor<string, []>("op_9078_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_9078_cast = slice_by_index(begin = var_9078_begin_0, end = var_9078_end_0, end_mask = var_9078_end_mask_0, x = v_cast);
            tensor<int32, [4]> var_9082_begin_0 = const()[name = tensor<string, []>("op_9082_begin_0"), val = tensor<int32, [4]>([0, 200, 0, 0])];
            tensor<int32, [4]> var_9082_end_0 = const()[name = tensor<string, []>("op_9082_end_0"), val = tensor<int32, [4]>([2, 240, 1, 77])];
            tensor<bool, [4]> var_9082_end_mask_0 = const()[name = tensor<string, []>("op_9082_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_9082_cast = slice_by_index(begin = var_9082_begin_0, end = var_9082_end_0, end_mask = var_9082_end_mask_0, x = v_cast);
            tensor<int32, [4]> var_9086_begin_0 = const()[name = tensor<string, []>("op_9086_begin_0"), val = tensor<int32, [4]>([0, 240, 0, 0])];
            tensor<int32, [4]> var_9086_end_0 = const()[name = tensor<string, []>("op_9086_end_0"), val = tensor<int32, [4]>([2, 280, 1, 77])];
            tensor<bool, [4]> var_9086_end_mask_0 = const()[name = tensor<string, []>("op_9086_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_9086_cast = slice_by_index(begin = var_9086_begin_0, end = var_9086_end_0, end_mask = var_9086_end_mask_0, x = v_cast);
            tensor<int32, [4]> var_9090_begin_0 = const()[name = tensor<string, []>("op_9090_begin_0"), val = tensor<int32, [4]>([0, 280, 0, 0])];
            tensor<int32, [4]> var_9090_end_0 = const()[name = tensor<string, []>("op_9090_end_0"), val = tensor<int32, [4]>([2, 320, 1, 77])];
            tensor<bool, [4]> var_9090_end_mask_0 = const()[name = tensor<string, []>("op_9090_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [2, 40, 1, 77]> var_9090_cast = slice_by_index(begin = var_9090_begin_0, end = var_9090_end_0, end_mask = var_9090_end_mask_0, x = v_cast);
            tensor<string, []> var_9094_equation_0 = const()[name = tensor<string, []>("op_9094_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_9094_cast = einsum(equation = var_9094_equation_0, values = (var_9032_cast, var_8997_cast));
            tensor<fp16, []> var_9095_to_fp16 = const()[name = tensor<string, []>("op_9095_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_497_cast = mul(x = var_9094_cast, y = var_9095_to_fp16);
            tensor<string, []> var_9098_equation_0 = const()[name = tensor<string, []>("op_9098_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_9098_cast = einsum(equation = var_9098_equation_0, values = (var_9036_cast, var_9001_cast));
            tensor<fp16, []> var_9099_to_fp16 = const()[name = tensor<string, []>("op_9099_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_499_cast = mul(x = var_9098_cast, y = var_9099_to_fp16);
            tensor<string, []> var_9102_equation_0 = const()[name = tensor<string, []>("op_9102_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_9102_cast = einsum(equation = var_9102_equation_0, values = (var_9040_cast, var_9005_cast));
            tensor<fp16, []> var_9103_to_fp16 = const()[name = tensor<string, []>("op_9103_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_501_cast = mul(x = var_9102_cast, y = var_9103_to_fp16);
            tensor<string, []> var_9106_equation_0 = const()[name = tensor<string, []>("op_9106_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_9106_cast = einsum(equation = var_9106_equation_0, values = (var_9044_cast, var_9009_cast));
            tensor<fp16, []> var_9107_to_fp16 = const()[name = tensor<string, []>("op_9107_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_503_cast = mul(x = var_9106_cast, y = var_9107_to_fp16);
            tensor<string, []> var_9110_equation_0 = const()[name = tensor<string, []>("op_9110_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_9110_cast = einsum(equation = var_9110_equation_0, values = (var_9048_cast, var_9013_cast));
            tensor<fp16, []> var_9111_to_fp16 = const()[name = tensor<string, []>("op_9111_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_505_cast = mul(x = var_9110_cast, y = var_9111_to_fp16);
            tensor<string, []> var_9114_equation_0 = const()[name = tensor<string, []>("op_9114_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_9114_cast = einsum(equation = var_9114_equation_0, values = (var_9052_cast, var_9017_cast));
            tensor<fp16, []> var_9115_to_fp16 = const()[name = tensor<string, []>("op_9115_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_507_cast = mul(x = var_9114_cast, y = var_9115_to_fp16);
            tensor<string, []> var_9118_equation_0 = const()[name = tensor<string, []>("op_9118_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_9118_cast = einsum(equation = var_9118_equation_0, values = (var_9056_cast, var_9021_cast));
            tensor<fp16, []> var_9119_to_fp16 = const()[name = tensor<string, []>("op_9119_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_509_cast = mul(x = var_9118_cast, y = var_9119_to_fp16);
            tensor<string, []> var_9122_equation_0 = const()[name = tensor<string, []>("op_9122_equation_0"), val = tensor<string, []>("bkhc,bchq->bkhq")];
            tensor<fp16, [2, 77, 1, 4096]> var_9122_cast = einsum(equation = var_9122_equation_0, values = (var_9060_cast, var_9025_cast));
            tensor<fp16, []> var_9123_to_fp16 = const()[name = tensor<string, []>("op_9123_to_fp16"), val = tensor<fp16, []>(0x1.43cp-3)];
            tensor<fp16, [2, 77, 1, 4096]> aw_cast = mul(x = var_9122_cast, y = var_9123_to_fp16);
            tensor<fp16, [2, 77, 1, 4096]> var_9125_cast = softmax(axis = var_7587, x = aw_497_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_9126_cast = softmax(axis = var_7587, x = aw_499_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_9127_cast = softmax(axis = var_7587, x = aw_501_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_9128_cast = softmax(axis = var_7587, x = aw_503_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_9129_cast = softmax(axis = var_7587, x = aw_505_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_9130_cast = softmax(axis = var_7587, x = aw_507_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_9131_cast = softmax(axis = var_7587, x = aw_509_cast);
            tensor<fp16, [2, 77, 1, 4096]> var_9132_cast = softmax(axis = var_7587, x = aw_cast);
            tensor<string, []> var_9134_equation_0 = const()[name = tensor<string, []>("op_9134_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_9134_cast = einsum(equation = var_9134_equation_0, values = (var_9062_cast, var_9125_cast));
            tensor<string, []> var_9136_equation_0 = const()[name = tensor<string, []>("op_9136_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_9136_cast = einsum(equation = var_9136_equation_0, values = (var_9066_cast, var_9126_cast));
            tensor<string, []> var_9138_equation_0 = const()[name = tensor<string, []>("op_9138_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_9138_cast = einsum(equation = var_9138_equation_0, values = (var_9070_cast, var_9127_cast));
            tensor<string, []> var_9140_equation_0 = const()[name = tensor<string, []>("op_9140_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_9140_cast = einsum(equation = var_9140_equation_0, values = (var_9074_cast, var_9128_cast));
            tensor<string, []> var_9142_equation_0 = const()[name = tensor<string, []>("op_9142_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_9142_cast = einsum(equation = var_9142_equation_0, values = (var_9078_cast, var_9129_cast));
            tensor<string, []> var_9144_equation_0 = const()[name = tensor<string, []>("op_9144_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_9144_cast = einsum(equation = var_9144_equation_0, values = (var_9082_cast, var_9130_cast));
            tensor<string, []> var_9146_equation_0 = const()[name = tensor<string, []>("op_9146_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_9146_cast = einsum(equation = var_9146_equation_0, values = (var_9086_cast, var_9131_cast));
            tensor<string, []> var_9148_equation_0 = const()[name = tensor<string, []>("op_9148_equation_0"), val = tensor<string, []>("bchk,bkhq->bchq")];
            tensor<fp16, [2, 40, 1, 4096]> var_9148_cast = einsum(equation = var_9148_equation_0, values = (var_9090_cast, var_9132_cast));
            tensor<bool, []> input_519_interleave_0 = const()[name = tensor<string, []>("input_519_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 320, 1, 4096]> input_519_cast = concat(axis = var_7587, interleave = input_519_interleave_0, values = (var_9134_cast, var_9136_cast, var_9138_cast, var_9140_cast, var_9142_cast, var_9144_cast, var_9146_cast, var_9148_cast));
            tensor<int32, [2]> var_9154 = const()[name = tensor<string, []>("op_9154"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9156 = const()[name = tensor<string, []>("op_9156"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_9158_pad_type_0 = const()[name = tensor<string, []>("op_9158_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_9158_pad_0 = const()[name = tensor<string, []>("op_9158_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1716442816)))];
            tensor<fp16, [320]> up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1716647680)))];
            tensor<fp16, [2, 320, 1, 4096]> var_9158_cast = conv(bias = up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_out_0_bias_to_fp16, dilations = var_9156, groups = var_7587, pad = var_9158_pad_0, pad_type = var_9158_pad_type_0, strides = var_9154, weight = up_blocks_3_attentions_2_transformer_blocks_0_attn2_to_out_0_weight_to_fp16, x = input_519_cast);
            tensor<fp16, [2, 320, 1, 4096]> inputs_cast = add(x = var_9158_cast, y = inputs_93_cast);
            tensor<int32, [1]> var_9162 = const()[name = tensor<string, []>("op_9162"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> channels_mean_cast = reduce_mean(axes = var_9162, keep_dims = var_7582, x = inputs_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_cast = sub(x = inputs_cast, y = channels_mean_cast);
            tensor<fp16, [2, 320, 1, 4096]> zero_mean_sq_cast = mul(x = zero_mean_cast, y = zero_mean_cast);
            tensor<int32, [1]> var_9166 = const()[name = tensor<string, []>("op_9166"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [2, 1, 1, 4096]> var_9167_cast = reduce_mean(axes = var_9166, keep_dims = var_7582, x = zero_mean_sq_cast);
            tensor<fp16, []> var_9168_to_fp16 = const()[name = tensor<string, []>("op_9168_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 1, 1, 4096]> var_9169_cast = add(x = var_9167_cast, y = var_9168_to_fp16);
            tensor<fp16, []> denom_epsilon_0_to_fp16 = const()[name = tensor<string, []>("denom_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1p-24)];
            tensor<fp16, [2, 1, 1, 4096]> denom_cast = rsqrt(epsilon = denom_epsilon_0_to_fp16, x = var_9169_cast);
            tensor<fp16, [2, 320, 1, 4096]> out_cast = mul(x = zero_mean_cast, y = denom_cast);
            tensor<fp16, [1, 320, 1, 1]> var_9173_to_fp16 = const()[name = tensor<string, []>("op_9173_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1716648384)))];
            tensor<fp16, [2, 320, 1, 4096]> var_9174_cast = add(x = out_cast, y = var_9173_to_fp16);
            tensor<fp16, [1, 320, 1, 1]> var_9176_to_fp16 = const()[name = tensor<string, []>("op_9176_to_fp16"), val = tensor<fp16, [1, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1716649088)))];
            tensor<fp16, [2, 320, 1, 4096]> input_521_cast = mul(x = var_9174_cast, y = var_9176_to_fp16);
            tensor<int32, [2]> var_9184 = const()[name = tensor<string, []>("op_9184"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9186 = const()[name = tensor<string, []>("op_9186"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_9188_pad_type_0 = const()[name = tensor<string, []>("op_9188_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_9188_pad_0 = const()[name = tensor<string, []>("op_9188_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2560, 320, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16"), val = tensor<fp16, [2560, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1716649792)))];
            tensor<fp16, [2560]> up_blocks_3_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16"), val = tensor<fp16, [2560]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1718288256)))];
            tensor<fp16, [2, 2560, 1, 4096]> var_9188_cast = conv(bias = up_blocks_3_attentions_2_transformer_blocks_0_ff_net_0_proj_bias_to_fp16, dilations = var_9186, groups = var_7587, pad = var_9188_pad_0, pad_type = var_9188_pad_type_0, strides = var_9184, weight = up_blocks_3_attentions_2_transformer_blocks_0_ff_net_0_proj_weight_to_fp16, x = input_521_cast);
            tensor<int32, [2]> var_9189_split_sizes_0 = const()[name = tensor<string, []>("op_9189_split_sizes_0"), val = tensor<int32, [2]>([1280, 1280])];
            tensor<int32, []> var_9189_axis_0 = const()[name = tensor<string, []>("op_9189_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [2, 1280, 1, 4096]> var_9189_cast_0, tensor<fp16, [2, 1280, 1, 4096]> var_9189_cast_1 = split(axis = var_9189_axis_0, split_sizes = var_9189_split_sizes_0, x = var_9188_cast);
            tensor<string, []> var_9191_mode_0 = const()[name = tensor<string, []>("op_9191_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [2, 1280, 1, 4096]> var_9191_cast = gelu(mode = var_9191_mode_0, x = var_9189_cast_1);
            tensor<fp16, [2, 1280, 1, 4096]> input_523_cast = mul(x = var_9189_cast_0, y = var_9191_cast);
            tensor<int32, [2]> var_9195 = const()[name = tensor<string, []>("op_9195"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9197 = const()[name = tensor<string, []>("op_9197"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_9199_pad_type_0 = const()[name = tensor<string, []>("op_9199_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_9199_pad_0 = const()[name = tensor<string, []>("op_9199_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 1280, 1, 1]> up_blocks_3_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16"), val = tensor<fp16, [320, 1280, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1718293440)))];
            tensor<fp16, [320]> up_blocks_3_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1719112704)))];
            tensor<fp16, [2, 320, 1, 4096]> var_9199_cast = conv(bias = up_blocks_3_attentions_2_transformer_blocks_0_ff_net_2_bias_to_fp16, dilations = var_9197, groups = var_7587, pad = var_9199_pad_0, pad_type = var_9199_pad_type_0, strides = var_9195, weight = up_blocks_3_attentions_2_transformer_blocks_0_ff_net_2_weight_to_fp16, x = input_523_cast);
            tensor<fp16, [2, 320, 1, 4096]> hidden_states_333_cast = add(x = var_9199_cast, y = inputs_cast);
            tensor<int32, [4]> var_9201 = const()[name = tensor<string, []>("op_9201"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> input_525_cast = reshape(shape = var_9201, x = hidden_states_333_cast);
            tensor<int32, [2]> var_9205 = const()[name = tensor<string, []>("op_9205"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9207 = const()[name = tensor<string, []>("op_9207"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_pad_type_0 = const()[name = tensor<string, []>("hidden_states_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_pad_0 = const()[name = tensor<string, []>("hidden_states_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [320, 320, 1, 1]> up_blocks_3_attentions_2_proj_out_weight_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_proj_out_weight_to_fp16"), val = tensor<fp16, [320, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1719113408)))];
            tensor<fp16, [320]> up_blocks_3_attentions_2_proj_out_bias_to_fp16 = const()[name = tensor<string, []>("up_blocks_3_attentions_2_proj_out_bias_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1719318272)))];
            tensor<fp16, [2, 320, 64, 64]> hidden_states_cast = conv(bias = up_blocks_3_attentions_2_proj_out_bias_to_fp16, dilations = var_9207, groups = var_7587, pad = hidden_states_pad_0, pad_type = hidden_states_pad_type_0, strides = var_9205, weight = up_blocks_3_attentions_2_proj_out_weight_to_fp16, x = input_525_cast);
            tensor<fp16, [2, 320, 64, 64]> input_527_cast = add(x = hidden_states_cast, y = hidden_states_323_cast);
            tensor<int32, [5]> reshape_240_shape_0 = const()[name = tensor<string, []>("reshape_240_shape_0"), val = tensor<int32, [5]>([2, 32, 10, 64, 64])];
            tensor<fp16, [2, 32, 10, 64, 64]> reshape_240_cast = reshape(shape = reshape_240_shape_0, x = input_527_cast);
            tensor<int32, [3]> reduce_mean_180_axes_0 = const()[name = tensor<string, []>("reduce_mean_180_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_180_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_180_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_180_cast = reduce_mean(axes = reduce_mean_180_axes_0, keep_dims = reduce_mean_180_keep_dims_0, x = reshape_240_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> sub_120_cast = sub(x = reshape_240_cast, y = reduce_mean_180_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> square_60_cast = square(x = sub_120_cast);
            tensor<int32, [3]> reduce_mean_182_axes_0 = const()[name = tensor<string, []>("reduce_mean_182_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_182_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_182_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [2, 32, 1, 1, 1]> reduce_mean_182_cast = reduce_mean(axes = reduce_mean_182_axes_0, keep_dims = reduce_mean_182_keep_dims_0, x = square_60_cast);
            tensor<fp16, []> add_120_y_0_to_fp16 = const()[name = tensor<string, []>("add_120_y_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 32, 1, 1, 1]> add_120_cast = add(x = reduce_mean_182_cast, y = add_120_y_0_to_fp16);
            tensor<fp16, [2, 32, 1, 1, 1]> sqrt_60_cast = sqrt(x = add_120_cast);
            tensor<fp16, [2, 32, 10, 64, 64]> real_div_60_cast = real_div(x = sub_120_cast, y = sqrt_60_cast);
            tensor<int32, [4]> reshape_241_shape_0 = const()[name = tensor<string, []>("reshape_241_shape_0"), val = tensor<int32, [4]>([2, 320, 64, 64])];
            tensor<fp16, [2, 320, 64, 64]> reshape_241_cast = reshape(shape = reshape_241_shape_0, x = real_div_60_cast);
            tensor<fp16, [320]> add_121_mean_0_to_fp16 = const()[name = tensor<string, []>("add_121_mean_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1719318976)))];
            tensor<fp16, [320]> add_121_variance_0_to_fp16 = const()[name = tensor<string, []>("add_121_variance_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1719319680)))];
            tensor<fp16, [320]> add_121_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_121_gamma_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1719320384)))];
            tensor<fp16, [320]> add_121_beta_0_to_fp16 = const()[name = tensor<string, []>("add_121_beta_0_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1719321088)))];
            tensor<fp16, []> add_121_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_121_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [2, 320, 64, 64]> add_121_cast = batch_norm(beta = add_121_beta_0_to_fp16, epsilon = add_121_epsilon_0_to_fp16, gamma = add_121_gamma_0_to_fp16, mean = add_121_mean_0_to_fp16, variance = add_121_variance_0_to_fp16, x = reshape_241_cast);
            tensor<fp16, [2, 320, 64, 64]> input_cast = silu(x = add_121_cast);
            tensor<int32, []> var_9221 = const()[name = tensor<string, []>("op_9221"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_9224 = const()[name = tensor<string, []>("op_9224"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9226 = const()[name = tensor<string, []>("op_9226"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_9228_pad_type_0 = const()[name = tensor<string, []>("op_9228_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_9228_pad_0 = const()[name = tensor<string, []>("op_9228_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [4, 320, 3, 3]> conv_out_weight_to_fp16 = const()[name = tensor<string, []>("conv_out_weight_to_fp16"), val = tensor<fp16, [4, 320, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1719321792)))];
            tensor<fp16, [4]> conv_out_bias_to_fp16 = const()[name = tensor<string, []>("conv_out_bias_to_fp16"), val = tensor<fp16, [4]>([-0x1.6d4p-10, -0x1.a08p-10, -0x1.134p-12, -0x1.4bcp-9])];
            tensor<fp16, [2, 4, 64, 64]> var_9228_cast = conv(bias = conv_out_bias_to_fp16, dilations = var_9226, groups = var_9221, pad = var_9228_pad_0, pad_type = var_9228_pad_type_0, strides = var_9224, weight = conv_out_weight_to_fp16, x = input_cast);
            tensor<string, []> var_9228_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_9228_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [2, 4, 64, 64]> noise_pred = cast(dtype = var_9228_cast_to_fp32_dtype_0, x = var_9228_cast);
        } -> (noise_pred);
}